

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Fri May 06 08:28:08 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    81                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    83  0000                     
    84                           ; Version 2.20
    85                           ; Generated 05/05/2020 GMT
    86                           ; 
    87                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F46K20 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118  0000                     
   119 ;; Function _rd1RegCompleteHandler is unused but had its address taken
   120  0000                     
   121 ;; Function _rd2RegCompleteHandler is unused but had its address taken
   122  0000                     
   123 ;; Function _wr1RegCompleteHandler is unused but had its address taken
   124  0000                     
   125 ;; Function _wr2RegCompleteHandler is unused but had its address taken
   126  0000                     
   127 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
   128  0000                     
   129 ;; Function _I2C_DO_IDLE is unused but had its address taken
   130  0000                     
   131 ;; Function _I2C_DO_SEND_ADR_READ is unused but had its address taken
   132  0000                     
   133 ;; Function _I2C_DO_SEND_ADR_WRITE is unused but had its address taken
   134  0000                     
   135 ;; Function _I2C_DO_TX is unused but had its address taken
   136  0000                     
   137 ;; Function _I2C_DO_RX is unused but had its address taken
   138  0000                     
   139 ;; Function _I2C_DO_RCEN is unused but had its address taken
   140  0000                     
   141 ;; Function _I2C_DO_TX_EMPTY is unused but had its address taken
   142  0000                     
   143 ;; Function _I2C_DO_SEND_RESTART_READ is unused but had its address taken
   144  0000                     
   145 ;; Function _I2C_DO_SEND_RESTART_WRITE is unused but had its address taken
   146  0000                     
   147 ;; Function _I2C_DO_SEND_RESTART is unused but had its address taken
   148  0000                     
   149 ;; Function _I2C_DO_SEND_STOP is unused but had its address taken
   150  0000                     
   151 ;; Function _I2C_DO_RX_ACK is unused but had its address taken
   152  0000                     
   153 ;; Function _I2C_DO_RX_NACK_STOP is unused but had its address taken
   154  0000                     
   155 ;; Function _I2C_DO_RX_NACK_RESTART is unused but had its address taken
   156  0000                     
   157 ;; Function _I2C_DO_RESET is unused but had its address taken
   158  0000                     
   159 ;; Function _I2C_DO_ADDRESS_NACK is unused but had its address taken
   160  0000                     
   161 ;; Function _I2C_CallbackReturnStop is unused but had its address taken
   162  0000                     
   163 ;; Function _I2C_CallbackReturnReset is unused but had its address taken
   164  0000                     
   165                           	psect	smallconst
   166  001000                     __psmallconst:
   167                           	callstack 0
   168  001000  00                 	db	0
   169  001001                     _fsmStateTable:
   170                           	callstack 0
   171  001001  00                 	db	0
   172  001002  00                 	db	0
   173  001003  00                 	db	0
   174  001004  00                 	db	0
   175  001005  00                 	db	0
   176  001006  00                 	db	0
   177  001007  00                 	db	0
   178  001008  00                 	db	0
   179  001009  00                 	db	0
   180  00100A  00                 	db	0
   181  00100B  00                 	db	0
   182  00100C  00                 	db	0
   183  00100D  00                 	db	0
   184  00100E  00                 	db	0
   185  00100F  00                 	db	0
   186  001010  00                 	db	0
   187  001011  00                 	db	0
   188  001012  00                 	db	0
   189  001013  00                 	db	0
   190  001014  00                 	db	0
   191  001015  00                 	db	0
   192  001016  00                 	db	0
   193  001017  00                 	db	0
   194  001018  00                 	db	0
   195  001019  00                 	db	0
   196  00101A  00                 	db	0
   197  00101B  00                 	db	0
   198  00101C  00                 	db	0
   199  00101D  00                 	db	0
   200  00101E  00                 	db	0
   201  00101F  00                 	db	0
   202  001020  00                 	db	0
   203  001021                     __end_of_fsmStateTable:
   204                           	callstack 0
   205  0000                     _RCREG	set	4014
   206  0000                     _TXREG	set	4013
   207  0000                     _SPBRG	set	4015
   208  0000                     _TXSTA	set	4012
   209  0000                     _TRISD	set	3989
   210  0000                     _TRISC	set	3988
   211  0000                     _TRISB	set	3987
   212  0000                     _LATC	set	3979
   213  0000                     _LATB	set	3978
   214  001021                     STR_1:
   215  001021  54                 	db	84	;'T'
   216  001022  65                 	db	101	;'e'
   217  001023  6D                 	db	109	;'m'
   218  001024  70                 	db	112	;'p'
   219  001025  65                 	db	101	;'e'
   220  001026  72                 	db	114	;'r'
   221  001027  61                 	db	97	;'a'
   222  001028  74                 	db	116	;'t'
   223  001029  75                 	db	117	;'u'
   224  00102A  72                 	db	114	;'r'
   225  00102B  20                 	db	32
   226  00102C  3D                 	db	61	;'='
   227  00102D  20                 	db	32
   228  00102E  25                 	db	37
   229  00102F  30                 	db	48	;'0'
   230  001030  2E                 	db	46
   231  001031  32                 	db	50	;'2'
   232  001032  66                 	db	102	;'f'
   233  001033  43                 	db	67	;'C'
   234  001034  0D                 	db	13
   235  001035  0A                 	db	10
   236  001036  00                 	db	0
   237  001037                     STR_2:
   238  001037  49                 	db	73	;'I'
   239  001038  4E                 	db	78	;'N'
   240  001039  46                 	db	70	;'F'
   241  00103A  00                 	db	0
   242  00103B                     STR_6:
   243  00103B  4E                 	db	78	;'N'
   244  00103C  41                 	db	65	;'A'
   245  00103D  4E                 	db	78	;'N'
   246  00103E  00                 	db	0
   247  00103F                     STR_3:
   248  00103F  69                 	db	105	;'i'
   249  001040  6E                 	db	110	;'n'
   250  001041  66                 	db	102	;'f'
   251  001042  00                 	db	0
   252  001043                     STR_7:
   253  001043  6E                 	db	110	;'n'
   254  001044  61                 	db	97	;'a'
   255  001045  6E                 	db	110	;'n'
   256  001046  00                 	db	0
   257  001047                     STR_10:
   258  001047  6C                 	db	108	;'l'
   259  001048  66                 	db	102	;'f'
   260  001049  00                 	db	0
   261  00104A  00                 	db	0	; dummy byte at the end
   262  0000                     
   263                           	psect	nvBANK0
   264  0000FC                     __pnvBANK0:
   265                           	callstack 0
   266  0000FC                     _EUSART_TxDefaultInterruptHandler:
   267                           	callstack 0
   268  0000FC                     	ds	2
   269  0000FE                     _eusartTxBufferRemaining:
   270                           	callstack 0
   271  0000FE                     	ds	1
   272                           
   273                           	psect	nvBANK1
   274  000160                     __pnvBANK1:
   275                           	callstack 0
   276  000160                     _EUSART_ErrorHandler:
   277                           	callstack 0
   278  000160                     	ds	2
   279  000162                     _EUSART_OverrunErrorHandler:
   280                           	callstack 0
   281  000162                     	ds	2
   282  000164                     _EUSART_FramingErrorHandler:
   283                           	callstack 0
   284  000164                     	ds	2
   285  000166                     _EUSART_RxDefaultInterruptHandler:
   286                           	callstack 0
   287  000166                     	ds	2
   288  0000                     _LATCbits	set	3979
   289  0000                     _TRISCbits	set	3988
   290  0000                     _RCSTAbits	set	4011
   291  0000                     _TXSTAbits	set	4012
   292  0000                     _SSPSTATbits	set	4039
   293  0000                     _SSPCON2bits	set	4037
   294  0000                     _SSPCON1bits	set	4038
   295  0000                     _WPUB	set	3964
   296  0000                     _ANSEL	set	3966
   297  0000                     _LATA	set	3977
   298  0000                     _LATD	set	3980
   299  0000                     _LATE	set	3981
   300  0000                     _OSCTUNE	set	3995
   301  0000                     _PIE1bits	set	3997
   302  0000                     _PIR2bits	set	4001
   303  0000                     _SSPCON2	set	4037
   304  0000                     _SSPCON1	set	4038
   305  0000                     _SSPSTAT	set	4039
   306  0000                     _RCONbits	set	4048
   307  0000                     _OSCCON	set	4051
   308  0000                     _SSPBUF	set	4041
   309  0000                     _SSPADD	set	4040
   310  0000                     _RCSTA	set	4011
   311  0000                     _BAUDCON	set	4024
   312  0000                     _PIR1bits	set	3998
   313  0000                     _INTCON2bits	set	4081
   314  0000                     _TRISA	set	3986
   315  0000                     _TRISE	set	3990
   316  0000                     _PORTCbits	set	3970
   317  0000                     _ANSELH	set	3967
   318  0000                     _INTCONbits	set	4082
   319  0000                     _SPBRGH	set	4016
   320                           
   321                           ; #config settings
   322                           
   323                           	psect	cinit
   324  004468                     __pcinit:
   325                           	callstack 0
   326  004468                     start_initialization:
   327                           	callstack 0
   328  004468                     __initialization:
   329                           	callstack 0
   330                           
   331                           ; Clear objects allocated to BANK1 (96 bytes)
   332  004468  EE01  F000         	lfsr	0,__pbssBANK1
   333  00446C  0E60               	movlw	96
   334  00446E                     clear_0:
   335  00446E  6AEE               	clrf	postinc0,c
   336  004470  06E8               	decf	wreg,f,c
   337  004472  E1FD               	bnz	clear_0
   338                           
   339                           ; Clear objects allocated to BANK0 (82 bytes)
   340  004474  EE00  F060         	lfsr	0,__pbssBANK0
   341  004478  0E52               	movlw	82
   342  00447A                     clear_1:
   343  00447A  6AEE               	clrf	postinc0,c
   344  00447C  06E8               	decf	wreg,f,c
   345  00447E  E1FD               	bnz	clear_1
   346                           
   347                           ; Clear objects allocated to COMRAM (5 bytes)
   348  004480  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   349  004482  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   350  004484  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   351  004486  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   352  004488  6A56               	clrf	__pbssCOMRAM& (0+255),c
   353  00448A                     end_of_initialization:
   354                           	callstack 0
   355  00448A                     __end_of__initialization:
   356                           	callstack 0
   357  00448A  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   358  00448C  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   359  00448E  0100               	movlb	0
   360  004490  EF44  F01F         	goto	_main	;jump to C main() function
   361                           
   362                           	psect	bssCOMRAM
   363  000056                     __pbssCOMRAM:
   364                           	callstack 0
   365  000056                     _eusartRxCount:
   366                           	callstack 0
   367  000056                     	ds	1
   368  000057                     _eusartRxTail:
   369                           	callstack 0
   370  000057                     	ds	1
   371  000058                     _eusartRxHead:
   372                           	callstack 0
   373  000058                     	ds	1
   374  000059                     _eusartTxTail:
   375                           	callstack 0
   376  000059                     	ds	1
   377  00005A                     _eusartTxHead:
   378                           	callstack 0
   379  00005A                     	ds	1
   380                           
   381                           	psect	bssBANK0
   382  000060                     __pbssBANK0:
   383                           	callstack 0
   384  000060                     _I2C_Status:
   385                           	callstack 0
   386  000060                     	ds	36
   387  000084                     _eusartRxStatusBuffer:
   388                           	callstack 0
   389  000084                     	ds	8
   390  00008C                     _eusartRxBuffer:
   391                           	callstack 0
   392  00008C                     	ds	8
   393  000094                     _eusartTxBuffer:
   394                           	callstack 0
   395  000094                     	ds	8
   396  00009C                     floorf@F526:
   397                           	callstack 0
   398  00009C                     	ds	4
   399  0000A0                     ___fpclassifyf@F465:
   400                           	callstack 0
   401  0000A0                     	ds	4
   402  0000A4                     _temperatur:
   403                           	callstack 0
   404  0000A4                     	ds	4
   405  0000A8                     _nout:
   406                           	callstack 0
   407  0000A8                     	ds	2
   408  0000AA                     _width:
   409                           	callstack 0
   410  0000AA                     	ds	2
   411  0000AC                     _prec:
   412                           	callstack 0
   413  0000AC                     	ds	2
   414  0000AE                     _flags:
   415                           	callstack 0
   416  0000AE                     	ds	2
   417  0000B0                     _SearchROMDevicesSucess:
   418                           	callstack 0
   419  0000B0                     	ds	1
   420  0000B1                     _eusartRxLastError:
   421                           	callstack 0
   422  0000B1                     	ds	1
   423                           
   424                           	psect	bssBANK1
   425  000100                     __pbssBANK1:
   426                           	callstack 0
   427  000100                     _dbuf:
   428                           	callstack 0
   429  000100                     	ds	80
   430  000150                     _DeviceAddressMap:
   431                           	callstack 0
   432  000150                     	ds	16
   433                           
   434                           	psect	cstackBANK1
   435  000168                     __pcstackBANK1:
   436                           	callstack 0
   437  000168                     printf@ap:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x0
   441  000168                     	ds	2
   442  00016A                     ??_main:
   443                           
   444                           ; 1 bytes @ 0x2
   445  00016A                     	ds	2
   446                           
   447                           	psect	cstackBANK0
   448  0000B2                     __pcstackBANK0:
   449                           	callstack 0
   450  0000B2                     _efgtoa$2333:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x0
   454  0000B2                     	ds	2
   455  0000B4                     _efgtoa$2341:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x2
   459  0000B4                     	ds	2
   460  0000B6                     _efgtoa$2342:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x4
   464  0000B6                     	ds	2
   465  0000B8                     efgtoa@t:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x6
   469  0000B8                     	ds	2
   470  0000BA                     efgtoa@pp:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x8
   474  0000BA                     	ds	2
   475  0000BC                     efgtoa@ne:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0xA
   479  0000BC                     	ds	2
   480  0000BE                     efgtoa@m:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0xC
   484  0000BE                     	ds	2
   485  0000C0                     efgtoa@ou:
   486                           	callstack 0
   487                           
   488                           ; 4 bytes @ 0xE
   489  0000C0                     	ds	4
   490  0000C4                     efgtoa@d:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x12
   494  0000C4                     	ds	2
   495  0000C6                     efgtoa@sign:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x14
   499  0000C6                     	ds	2
   500  0000C8                     efgtoa@p:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x16
   504  0000C8                     	ds	2
   505  0000CA                     efgtoa@w:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x18
   509  0000CA                     	ds	2
   510  0000CC                     efgtoa@nmode:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0x1A
   514  0000CC                     	ds	1
   515  0000CD                     efgtoa@mode:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0x1B
   519  0000CD                     	ds	1
   520  0000CE                     efgtoa@h:
   521                           	callstack 0
   522                           
   523                           ; 4 bytes @ 0x1C
   524  0000CE                     	ds	4
   525  0000D2                     efgtoa@l:
   526                           	callstack 0
   527                           
   528                           ; 4 bytes @ 0x20
   529  0000D2                     	ds	4
   530  0000D6                     efgtoa@i:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x24
   534  0000D6                     	ds	2
   535  0000D8                     efgtoa@g:
   536                           	callstack 0
   537                           
   538                           ; 4 bytes @ 0x26
   539  0000D8                     	ds	4
   540  0000DC                     efgtoa@e:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x2A
   544  0000DC                     	ds	2
   545  0000DE                     efgtoa@n:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x2C
   549  0000DE                     	ds	2
   550  0000E0                     efgtoa@u:
   551                           	callstack 0
   552                           
   553                           ; 4 bytes @ 0x2E
   554  0000E0                     	ds	4
   555  0000E4                     vfpfcnvrt@done:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x32
   559  0000E4                     	ds	2
   560  0000E6                     vfpfcnvrt@f:
   561                           	callstack 0
   562                           
   563                           ; 4 bytes @ 0x34
   564  0000E6                     	ds	4
   565  0000EA                     vfpfcnvrt@ct:
   566                           	callstack 0
   567                           
   568                           ; 3 bytes @ 0x38
   569  0000EA                     	ds	3
   570  0000ED                     vfpfcnvrt@c:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x3B
   574  0000ED                     	ds	1
   575  0000EE                     ?_vfprintf:
   576                           	callstack 0
   577  0000EE                     vfprintf@fp:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x3C
   581  0000EE                     	ds	2
   582  0000F0                     vfprintf@fmt:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x3E
   586  0000F0                     	ds	2
   587  0000F2                     vfprintf@ap:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x40
   591  0000F2                     	ds	2
   592  0000F4                     vfprintf@cfmt:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x42
   596  0000F4                     	ds	2
   597  0000F6                     ?_printf:
   598                           	callstack 0
   599  0000F6                     printf@fmt:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x44
   603  0000F6                     	ds	6
   604                           
   605                           	psect	cstackCOMRAM
   606  000001                     __pcstackCOMRAM:
   607                           	callstack 0
   608  000001                     ??_INTERRUPT_InterruptManager:
   609  000001                     
   610                           ; 1 bytes @ 0x0
   611  000001                     	ds	4
   612  000005                     ?_strlen:
   613                           	callstack 0
   614  000005                     ?___fpclassifyf:
   615                           	callstack 0
   616  000005                     ?_isupper:
   617                           	callstack 0
   618  000005                     ?_isdigit:
   619                           	callstack 0
   620  000005                     ?_strncmp:
   621                           	callstack 0
   622  000005                     ?_isspace:
   623                           	callstack 0
   624  000005                     ?___wmul:
   625                           	callstack 0
   626  000005                     ?___awdiv:
   627                           	callstack 0
   628  000005                     ?___awmod:
   629                           	callstack 0
   630  000005                     ?___fladd:
   631                           	callstack 0
   632  000005                     ?___flmul:
   633                           	callstack 0
   634  000005                     ?___flneg:
   635                           	callstack 0
   636  000005                     ?___fltol:
   637                           	callstack 0
   638  000005                     ?___xxtofl:
   639                           	callstack 0
   640  000005                     EUSART_Write@txData:
   641                           	callstack 0
   642  000005                     sampleOneWirePin@result:
   643                           	callstack 0
   644  000005                     writeOneWireBit@WriteArg:
   645                           	callstack 0
   646  000005                     EUSART_SetFramingErrorHandler@interruptHandler:
   647                           	callstack 0
   648  000005                     EUSART_SetOverrunErrorHandler@interruptHandler:
   649                           	callstack 0
   650  000005                     EUSART_SetErrorHandler@interruptHandler:
   651                           	callstack 0
   652  000005                     EUSART_SetTxInterruptHandler@interruptHandler:
   653                           	callstack 0
   654  000005                     EUSART_SetRxInterruptHandler@interruptHandler:
   655                           	callstack 0
   656  000005                     ___wmul@multiplier:
   657                           	callstack 0
   658  000005                     ___awdiv@dividend:
   659                           	callstack 0
   660  000005                     ___awmod@dividend:
   661                           	callstack 0
   662  000005                     isdigit@c:
   663                           	callstack 0
   664  000005                     isspace@c:
   665                           	callstack 0
   666  000005                     isupper@c:
   667                           	callstack 0
   668  000005                     strcpy@dest:
   669                           	callstack 0
   670  000005                     strlen@s:
   671                           	callstack 0
   672  000005                     strncmp@_l:
   673                           	callstack 0
   674  000005                     ___fleq@ff1:
   675                           	callstack 0
   676  000005                     ___flneg@f1:
   677                           	callstack 0
   678  000005                     ___fltol@f1:
   679                           	callstack 0
   680  000005                     ___fladd@b:
   681                           	callstack 0
   682  000005                     ___flmul@b:
   683                           	callstack 0
   684  000005                     ___xxtofl@val:
   685                           	callstack 0
   686  000005                     ___fpclassifyf@x:
   687                           	callstack 0
   688                           
   689                           ; 4 bytes @ 0x4
   690  000005                     	ds	1
   691  000006                     putch@txData:
   692                           	callstack 0
   693  000006                     readOneWireBit@result:
   694                           	callstack 0
   695  000006                     resetOneWirePin@presence:
   696                           	callstack 0
   697  000006                     writeOneWireByte@data:
   698                           	callstack 0
   699                           
   700                           ; 1 bytes @ 0x5
   701  000006                     	ds	1
   702  000007                     ??_isupper:
   703  000007                     ??_isdigit:
   704  000007                     ??_isspace:
   705  000007                     readOneWireByte@data:
   706                           	callstack 0
   707  000007                     writeOneWireByte@i:
   708                           	callstack 0
   709  000007                     ___wmul@multiplicand:
   710                           	callstack 0
   711  000007                     ___awdiv@divisor:
   712                           	callstack 0
   713  000007                     ___awmod@divisor:
   714                           	callstack 0
   715  000007                     fputc@c:
   716                           	callstack 0
   717  000007                     strcpy@src:
   718                           	callstack 0
   719  000007                     strlen@a:
   720                           	callstack 0
   721  000007                     strncmp@_r:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x6
   725  000007                     	ds	1
   726  000008                     readOneWireByte@i:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x7
   730  000008                     	ds	1
   731  000009                     ??___fpclassifyf:
   732  000009                     ??_strcpy:
   733  000009                     ??___fltol:
   734  000009                     ??___xxtofl:
   735  000009                     ___awdiv@counter:
   736                           	callstack 0
   737  000009                     ___awmod@counter:
   738                           	callstack 0
   739  000009                     addressOneWireDevice@CurrentAdressedOneWireDevice:
   740                           	callstack 0
   741  000009                     ___wmul@product:
   742                           	callstack 0
   743  000009                     fputc@fp:
   744                           	callstack 0
   745  000009                     strncmp@n:
   746                           	callstack 0
   747  000009                     ___fleq@ff2:
   748                           	callstack 0
   749  000009                     ___fladd@a:
   750                           	callstack 0
   751  000009                     ___flmul@a:
   752                           	callstack 0
   753                           
   754                           ; 4 bytes @ 0x8
   755  000009                     	ds	1
   756  00000A                     ___awdiv@sign:
   757                           	callstack 0
   758  00000A                     ___awmod@sign:
   759                           	callstack 0
   760                           
   761                           ; 1 bytes @ 0x9
   762  00000A                     	ds	1
   763  00000B                     ??_fputc:
   764  00000B                     ??_strncmp:
   765  00000B                     ?_tolower:
   766                           	callstack 0
   767  00000B                     _isspace$2420:
   768                           	callstack 0
   769  00000B                     addressOneWireDevice@i:
   770                           	callstack 0
   771  00000B                     ___awdiv@quotient:
   772                           	callstack 0
   773  00000B                     strcpy@s:
   774                           	callstack 0
   775  00000B                     tolower@c:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0xA
   779  00000B                     	ds	1
   780  00000C                     ?_atoi:
   781                           	callstack 0
   782  00000C                     atoi@s:
   783                           	callstack 0
   784  00000C                     strncmp@l:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0xB
   788  00000C                     	ds	1
   789  00000D                     ??_searchOneWireDevicesROM:
   790  00000D                     ??___fladd:
   791  00000D                     ??___flmul:
   792  00000D                     ??_tolower:
   793  00000D                     ??___fleq:
   794  00000D                     ___fltol@sign1:
   795                           	callstack 0
   796  00000D                     ___xxtofl@sign:
   797                           	callstack 0
   798  00000D                     ___fpclassifyf@e:
   799                           	callstack 0
   800  00000D                     strcpy@d:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0xC
   804  00000D                     	ds	1
   805  00000E                     ??_atoi:
   806  00000E                     ___fltol@exp1:
   807                           	callstack 0
   808  00000E                     ___xxtofl@exp:
   809                           	callstack 0
   810  00000E                     strncmp@r:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0xD
   814  00000E                     	ds	1
   815  00000F                     ___xxtofl@arg:
   816                           	callstack 0
   817  00000F                     ___fpclassifyf@u:
   818                           	callstack 0
   819                           
   820                           ; 4 bytes @ 0xE
   821  00000F                     	ds	1
   822  000010                     fputs@s:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0xF
   826  000010                     	ds	1
   827  000011                     ___fladd@signs:
   828                           	callstack 0
   829  000011                     ___flmul@sign:
   830                           	callstack 0
   831  000011                     searchOneWireDevicesROM@SearchedROMDevice:
   832                           	callstack 0
   833                           
   834                           ; 8 bytes @ 0x10
   835  000011                     	ds	1
   836  000012                     ___fladd@aexp:
   837                           	callstack 0
   838  000012                     ___flmul@aexp:
   839                           	callstack 0
   840  000012                     atoi@neg:
   841                           	callstack 0
   842  000012                     fputs@fp:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x11
   846  000012                     	ds	1
   847  000013                     ?___fldiv:
   848                           	callstack 0
   849  000013                     ___fladd@bexp:
   850                           	callstack 0
   851  000013                     ___fldiv@b:
   852                           	callstack 0
   853  000013                     ___flmul@grs:
   854                           	callstack 0
   855                           
   856                           ; 4 bytes @ 0x12
   857  000013                     	ds	1
   858  000014                     ___fladd@grs:
   859                           	callstack 0
   860  000014                     fputs@c:
   861                           	callstack 0
   862  000014                     atoi@n:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x13
   866  000014                     	ds	1
   867  000015                     fputs@i:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x14
   871  000015                     	ds	2
   872  000017                     ?_pad:
   873                           	callstack 0
   874  000017                     ___flmul@bexp:
   875                           	callstack 0
   876  000017                     pad@fp:
   877                           	callstack 0
   878  000017                     ___fldiv@a:
   879                           	callstack 0
   880                           
   881                           ; 4 bytes @ 0x16
   882  000017                     	ds	1
   883  000018                     ___flmul@prod:
   884                           	callstack 0
   885                           
   886                           ; 4 bytes @ 0x17
   887  000018                     	ds	1
   888  000019                     searchOneWireDevicesROM@LastConflictBitNum:
   889                           	callstack 0
   890  000019                     pad@buf:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x18
   894  000019                     	ds	1
   895  00001A                     searchOneWireDevicesROM@CurrentConflictBitPos:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x19
   899  00001A                     	ds	1
   900  00001B                     ??___fldiv:
   901  00001B                     searchOneWireDevicesROM@mask:
   902                           	callstack 0
   903  00001B                     pad@p:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x1A
   907  00001B                     	ds	1
   908  00001C                     searchOneWireDevicesROM@SelectedBit:
   909                           	callstack 0
   910  00001C                     ___flmul@temp:
   911                           	callstack 0
   912                           
   913                           ; 2 bytes @ 0x1B
   914  00001C                     	ds	1
   915  00001D                     ??_pad:
   916  00001D                     searchOneWireDevicesROM@i:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x1C
   920  00001D                     	ds	1
   921  00001E                     ?___flsub:
   922                           	callstack 0
   923  00001E                     pad@i:
   924                           	callstack 0
   925  00001E                     ___flge@ff1:
   926                           	callstack 0
   927  00001E                     ___flsub@b:
   928                           	callstack 0
   929                           
   930                           ; 4 bytes @ 0x1D
   931  00001E                     	ds	1
   932  00001F                     searchOneWireDevicesROM@k:
   933                           	callstack 0
   934  00001F                     ___fldiv@rem:
   935                           	callstack 0
   936                           
   937                           ; 4 bytes @ 0x1E
   938  00001F                     	ds	1
   939  000020                     pad@w:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0x1F
   943  000020                     	ds	1
   944  000021                     searchOneWireDevicesROM@InputBitStatus:
   945                           	callstack 0
   946                           
   947                           ; 1 bytes @ 0x20
   948  000021                     	ds	1
   949  000022                     searchOneWireDevicesROM@j:
   950                           	callstack 0
   951  000022                     ___flge@ff2:
   952                           	callstack 0
   953  000022                     ___flsub@a:
   954                           	callstack 0
   955                           
   956                           ; 4 bytes @ 0x21
   957  000022                     	ds	1
   958  000023                     ___fldiv@sign:
   959                           	callstack 0
   960                           
   961                           ; 1 bytes @ 0x22
   962  000023                     	ds	1
   963  000024                     searchOneWireDevicesROM@bitnum:
   964                           	callstack 0
   965  000024                     ___fldiv@new_exp:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x23
   969  000024                     	ds	2
   970  000026                     ??___flge:
   971  000026                     ___fldiv@grs:
   972                           	callstack 0
   973                           
   974                           ; 4 bytes @ 0x25
   975  000026                     	ds	4
   976  00002A                     ___fldiv@bexp:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x29
   980  00002A                     	ds	1
   981  00002B                     ___fldiv@aexp:
   982                           	callstack 0
   983                           
   984                           ; 1 bytes @ 0x2A
   985  00002B                     	ds	1
   986  00002C                     ?_DS18B20_temp_GetValue:
   987                           	callstack 0
   988  00002C                     ?_floorf:
   989                           	callstack 0
   990  00002C                     floorf@x:
   991                           	callstack 0
   992                           
   993                           ; 4 bytes @ 0x2B
   994  00002C                     	ds	4
   995  000030                     ??_DS18B20_temp_GetValue:
   996  000030                     ??_floorf:
   997                           
   998                           ; 1 bytes @ 0x2F
   999  000030                     	ds	4
  1000  000034                     DS18B20_temp_GetValue@tempDataAnz:
  1001                           	callstack 0
  1002                           
  1003                           ; 4 bytes @ 0x33
  1004  000034                     	ds	2
  1005  000036                     floorf@m:
  1006                           	callstack 0
  1007                           
  1008                           ; 4 bytes @ 0x35
  1009  000036                     	ds	2
  1010  000038                     DS18B20_temp_GetValue@templ1:
  1011                           	callstack 0
  1012                           
  1013                           ; 1 bytes @ 0x37
  1014  000038                     	ds	1
  1015  000039                     DS18B20_temp_GetValue@temph1:
  1016                           	callstack 0
  1017                           
  1018                           ; 1 bytes @ 0x38
  1019  000039                     	ds	1
  1020  00003A                     DS18B20_temp_GetValue@prisutnost:
  1021                           	callstack 0
  1022  00003A                     floorf@e:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x39
  1026  00003A                     	ds	2
  1027  00003C                     floorf@u:
  1028                           	callstack 0
  1029                           
  1030                           ; 4 bytes @ 0x3B
  1031  00003C                     	ds	4
  1032  000040                     ?_efgtoa:
  1033                           	callstack 0
  1034  000040                     efgtoa@fp:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x3F
  1038  000040                     	ds	2
  1039  000042                     efgtoa@f:
  1040                           	callstack 0
  1041                           
  1042                           ; 4 bytes @ 0x41
  1043  000042                     	ds	4
  1044  000046                     efgtoa@c:
  1045                           	callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x45
  1048  000046                     	ds	1
  1049  000047                     ??_efgtoa:
  1050                           
  1051                           ; 1 bytes @ 0x46
  1052  000047                     	ds	5
  1053  00004C                     ?_vfpfcnvrt:
  1054                           	callstack 0
  1055  00004C                     vfpfcnvrt@fp:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x4B
  1059  00004C                     	ds	2
  1060  00004E                     vfpfcnvrt@fmt:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x4D
  1064  00004E                     	ds	2
  1065  000050                     vfpfcnvrt@ap:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x4F
  1069  000050                     	ds	2
  1070  000052                     ??_vfpfcnvrt:
  1071                           
  1072                           ; 1 bytes @ 0x51
  1073  000052                     	ds	4
  1074  000056                     
  1075                           ; 1 bytes @ 0x55
  1076 ;;
  1077 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1078 ;;
  1079 ;; *************** function _main *****************
  1080 ;; Defined at:
  1081 ;;		line 52 in file "main.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;		None
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;		None
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      void 
  1088 ;; Registers used:
  1089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1098 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1099 ;;Total ram usage:        2 bytes
  1100 ;; Hardware stack levels required when called: 13
  1101 ;; This function calls:
  1102 ;;		_DS18B20_init
  1103 ;;		_DS18B20_temp_GetValue
  1104 ;;		_SYSTEM_Initialize
  1105 ;;		_printf
  1106 ;; This function is called by:
  1107 ;;		Startup code after reset
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           	psect	text0
  1112  003E88                     __ptext0:
  1113                           	callstack 0
  1114  003E88                     _main:
  1115                           	callstack 18
  1116  003E88                     
  1117                           ;main.c: 54:     SYSTEM_Initialize();
  1118  003E88  EC9B  F022         	call	_SYSTEM_Initialize	;wreg free
  1119  003E8C                     
  1120                           ;main.c: 55:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1121  003E8C  0E06               	movlw	6
  1122  003E8E  0101               	movlb	1	; () banked
  1123  003E90  6F6B               	movwf	(??_main+1)& (0+255),b
  1124  003E92  0E13               	movlw	19
  1125  003E94  6F6A               	movwf	??_main& (0+255),b
  1126  003E96  0EAD               	movlw	173
  1127  003E98                     u8347:
  1128  003E98  2EE8               	decfsz	wreg,f,c
  1129  003E9A  D7FE               	bra	u8347
  1130  003E9C  2F6A               	decfsz	??_main& (0+255),f,b
  1131  003E9E  D7FC               	bra	u8347
  1132  003EA0  2F6B               	decfsz	(??_main+1)& (0+255),f,b
  1133  003EA2  D7FA               	bra	u8347
  1134  003EA4  F000 F000          	nop2	
  1135  003EA8                     
  1136                           ;main.c: 62:     (INTCONbits.GIE = 1);
  1137  003EA8  8EF2               	bsf	242,7,c	;volatile
  1138  003EAA                     
  1139                           ;main.c: 68:     (INTCONbits.PEIE = 1);
  1140  003EAA  8CF2               	bsf	242,6,c	;volatile
  1141  003EAC                     
  1142                           ;main.c: 73:     DS18B20_init();
  1143  003EAC  ECDA  F022         	call	_DS18B20_init	;wreg free
  1144  003EB0                     l7909:
  1145                           
  1146                           ;main.c: 75:         temperatur = DS18B20_temp_GetValue();
  1147  003EB0  ECBE  F01C         	call	_DS18B20_temp_GetValue	;wreg free
  1148  003EB4  C02C  F0A4         	movff	?_DS18B20_temp_GetValue,_temperatur
  1149  003EB8  C02D  F0A5         	movff	?_DS18B20_temp_GetValue+1,_temperatur+1
  1150  003EBC  C02E  F0A6         	movff	?_DS18B20_temp_GetValue+2,_temperatur+2
  1151  003EC0  C02F  F0A7         	movff	?_DS18B20_temp_GetValue+3,_temperatur+3
  1152  003EC4                     
  1153                           ;main.c: 76:         printf("Temperatur = %0.2fC\r\n",temperatur);
  1154  003EC4  0E21               	movlw	low STR_1
  1155  003EC6  0100               	movlb	0	; () banked
  1156  003EC8  6FF6               	movwf	printf@fmt& (0+255),b
  1157  003ECA  0E10               	movlw	high STR_1
  1158  003ECC  6FF7               	movwf	(printf@fmt+1)& (0+255),b
  1159  003ECE  C0A4  F0F8         	movff	_temperatur,?_printf+2
  1160  003ED2  C0A5  F0F9         	movff	_temperatur+1,?_printf+3
  1161  003ED6  C0A6  F0FA         	movff	_temperatur+2,?_printf+4
  1162  003EDA  C0A7  F0FB         	movff	_temperatur+3,?_printf+5
  1163  003EDE  EC4A  F022         	call	_printf	;wreg free
  1164  003EE2                     
  1165                           ;main.c: 77:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1166  003EE2  0E06               	movlw	6
  1167  003EE4  0101               	movlb	1	; () banked
  1168  003EE6  6F6B               	movwf	(??_main+1)& (0+255),b
  1169  003EE8  0E13               	movlw	19
  1170  003EEA  6F6A               	movwf	??_main& (0+255),b
  1171  003EEC  0EAD               	movlw	173
  1172  003EEE                     u8357:
  1173  003EEE  2EE8               	decfsz	wreg,f,c
  1174  003EF0  D7FE               	bra	u8357
  1175  003EF2  2F6A               	decfsz	??_main& (0+255),f,b
  1176  003EF4  D7FC               	bra	u8357
  1177  003EF6  2F6B               	decfsz	(??_main+1)& (0+255),f,b
  1178  003EF8  D7FA               	bra	u8357
  1179  003EFA  F000 F000          	nop2	
  1180  003EFE  EF58  F01F         	goto	l7909
  1181  003F02  EF58  F000         	goto	start
  1182  003F06                     __end_of_main:
  1183                           	callstack 0
  1184                           
  1185 ;; *************** function _printf *****************
  1186 ;; Defined at:
  1187 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\printf.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;  fmt             2   68[BANK0 ] PTR const unsigned char 
  1190 ;;		 -> STR_1(22), 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  ap              2    0[BANK1 ] PTR void [1]
  1193 ;;		 -> ?_printf(2), 
  1194 ;;  ret             2    0        int 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  2   68[BANK0 ] int 
  1197 ;; Registers used:
  1198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1204 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Totals:         0       6       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;Total ram usage:        8 bytes
  1209 ;; Hardware stack levels used: 1
  1210 ;; Hardware stack levels required when called: 12
  1211 ;; This function calls:
  1212 ;;		_vfprintf
  1213 ;; This function is called by:
  1214 ;;		_main
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text1
  1219  004494                     __ptext1:
  1220                           	callstack 0
  1221  004494                     _printf:
  1222                           	callstack 18
  1223  004494  0EF8               	movlw	low (?_printf+2)
  1224  004496  0101               	movlb	1	; () banked
  1225  004498  6F68               	movwf	printf@ap& (0+255),b
  1226  00449A  0E00               	movlw	high (?_printf+2)
  1227  00449C  6F69               	movwf	(printf@ap+1)& (0+255),b
  1228  00449E                     
  1229                           ; BSR set to: 1
  1230  00449E  0E00               	movlw	0
  1231  0044A0  0100               	movlb	0	; () banked
  1232  0044A2  6FEE               	movwf	vfprintf@fp& (0+255),b
  1233  0044A4  0E00               	movlw	0
  1234  0044A6  6FEF               	movwf	(vfprintf@fp+1)& (0+255),b
  1235  0044A8  C0F6  F0F0         	movff	printf@fmt,vfprintf@fmt
  1236  0044AC  C0F7  F0F1         	movff	printf@fmt+1,vfprintf@fmt+1
  1237  0044B0  0E68               	movlw	low printf@ap
  1238  0044B2  6FF2               	movwf	vfprintf@ap& (0+255),b
  1239  0044B4  0E01               	movlw	high printf@ap
  1240  0044B6  6FF3               	movwf	(vfprintf@ap+1)& (0+255),b
  1241  0044B8  ECBE  F01F         	call	_vfprintf	;wreg free
  1242  0044BC  0012               	return		;funcret
  1243  0044BE                     __end_of_printf:
  1244                           	callstack 0
  1245                           
  1246 ;; *************** function _vfprintf *****************
  1247 ;; Defined at:
  1248 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;  fp              2   60[BANK0 ] PTR struct _IO_FILE
  1251 ;;		 -> NULL(0), 
  1252 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  1253 ;;		 -> STR_1(22), 
  1254 ;;  ap              2   64[BANK0 ] PTR PTR void 
  1255 ;;		 -> printf@ap(2), 
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  cfmt            2   66[BANK0 ] PTR unsigned char 
  1258 ;;		 -> STR_1(22), 
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  2   60[BANK0 ] int 
  1261 ;; Registers used:
  1262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1268 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1272 ;;Total ram usage:        8 bytes
  1273 ;; Hardware stack levels used: 1
  1274 ;; Hardware stack levels required when called: 11
  1275 ;; This function calls:
  1276 ;;		_vfpfcnvrt
  1277 ;; This function is called by:
  1278 ;;		_printf
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text2
  1283  003F7C                     __ptext2:
  1284                           	callstack 0
  1285  003F7C                     _vfprintf:
  1286                           	callstack 18
  1287  003F7C                     
  1288                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1289  003F7C  C0F0  F0F4         	movff	vfprintf@fmt,vfprintf@cfmt
  1290  003F80  C0F1  F0F5         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1291  003F84                     
  1292                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1293  003F84  0E00               	movlw	0
  1294  003F86  0100               	movlb	0	; () banked
  1295  003F88  6FA9               	movwf	(_nout+1)& (0+255),b
  1296  003F8A  0E00               	movlw	0
  1297  003F8C  6FA8               	movwf	_nout& (0+255),b
  1298                           
  1299                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1300  003F8E  EFDC  F01F         	goto	l7861
  1301  003F92                     l7859:
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1305  003F92  C0EE  F04C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1306  003F96  C0EF  F04D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1307  003F9A  0EF4               	movlw	low vfprintf@cfmt
  1308  003F9C  6E4E               	movwf	vfpfcnvrt@fmt^0,c
  1309  003F9E  0E00               	movlw	high vfprintf@cfmt
  1310  003FA0  6E4F               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1311  003FA2  C0F2  F050         	movff	vfprintf@ap,vfpfcnvrt@ap
  1312  003FA6  C0F3  F051         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1313  003FAA  EC54  F00E         	call	_vfpfcnvrt	;wreg free
  1314  003FAE  504C               	movf	?_vfpfcnvrt^0,w,c
  1315  003FB0  0100               	movlb	0	; () banked
  1316  003FB2  27A8               	addwf	_nout& (0+255),f,b
  1317  003FB4  504D               	movf	(?_vfpfcnvrt+1)^0,w,c
  1318  003FB6  23A9               	addwfc	(_nout+1)& (0+255),f,b
  1319  003FB8                     l7861:
  1320                           
  1321                           ; BSR set to: 0
  1322                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1323  003FB8  C0F4  FFF6         	movff	vfprintf@cfmt,tblptrl
  1324  003FBC  C0F5  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1325  003FC0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1326  003FC0  6AF8               	clrf	tblptru,c
  1327  003FC2                     	endif
  1328  003FC2                     	if	0	;tblptru may be non-zero
  1329  003FC2                     	endif
  1330  003FC2  0008               	tblrd		*
  1331  003FC4  50F5               	movf	tablat,w,c
  1332  003FC6  0900               	iorlw	0
  1333  003FC8  A4D8               	btfss	status,2,c
  1334  003FCA  EFE9  F01F         	goto	u8321
  1335  003FCE  EFEB  F01F         	goto	u8320
  1336  003FD2                     u8321:
  1337  003FD2  EFC9  F01F         	goto	l7859
  1338  003FD6                     u8320:
  1339  003FD6                     
  1340                           ; BSR set to: 0
  1341                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1342  003FD6  C0A8  F0EE         	movff	_nout,?_vfprintf
  1343  003FDA  C0A9  F0EF         	movff	_nout+1,?_vfprintf+1
  1344  003FDE                     
  1345                           ; BSR set to: 0
  1346  003FDE  0012               	return		;funcret
  1347  003FE0                     __end_of_vfprintf:
  1348                           	callstack 0
  1349                           
  1350 ;; *************** function _vfpfcnvrt *****************
  1351 ;; Defined at:
  1352 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;  fp              2   75[COMRAM] PTR struct _IO_FILE
  1355 ;;		 -> NULL(0), 
  1356 ;;  fmt             2   77[COMRAM] PTR PTR unsigned char 
  1357 ;;		 -> vfprintf@cfmt(2), 
  1358 ;;  ap              2   79[COMRAM] PTR PTR void 
  1359 ;;		 -> printf@ap(2), 
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  llu             8    0        unsigned long long 
  1362 ;;  ll              8    0        long long 
  1363 ;;  f               4   52[BANK0 ] long long 
  1364 ;;  ct              3   56[BANK0 ] unsigned char [3]
  1365 ;;  vp              3    0        PTR void 
  1366 ;;  cp              3    0        PTR unsigned char 
  1367 ;;  done            2   50[BANK0 ] int 
  1368 ;;  i               2    0        int 
  1369 ;;  c               1   59[BANK0 ] unsigned char 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  2   75[COMRAM] int 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1379 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1380 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1381 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1382 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1383 ;;Total ram usage:       20 bytes
  1384 ;; Hardware stack levels used: 1
  1385 ;; Hardware stack levels required when called: 10
  1386 ;; This function calls:
  1387 ;;		_atoi
  1388 ;;		_efgtoa
  1389 ;;		_fputc
  1390 ;;		_isdigit
  1391 ;;		_isupper
  1392 ;;		_strncmp
  1393 ;;		_tolower
  1394 ;; This function is called by:
  1395 ;;		_vfprintf
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text3
  1400  001CA8                     __ptext3:
  1401                           	callstack 0
  1402  001CA8                     _vfpfcnvrt:
  1403                           	callstack 18
  1404  001CA8                     
  1405                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1406  001CA8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1407  001CAC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1408  001CB0  CFDE FFF6          	movff	postinc2,tblptrl
  1409  001CB4  CFDD FFF7          	movff	postdec2,tblptrh
  1410  001CB8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1411  001CB8  6AF8               	clrf	tblptru,c
  1412  001CBA                     	endif
  1413  001CBA                     	if	0	;tblptru may be non-zero
  1414  001CBA                     	endif
  1415  001CBA  0008               	tblrd		*
  1416  001CBC  50F5               	movf	tablat,w,c
  1417  001CBE  0A25               	xorlw	37
  1418  001CC0  A4D8               	btfss	status,2,c
  1419  001CC2  EF65  F00E         	goto	u8081
  1420  001CC6  EF67  F00E         	goto	u8080
  1421  001CCA                     u8081:
  1422  001CCA  EFCE  F010         	goto	l7749
  1423  001CCE                     u8080:
  1424  001CCE                     
  1425                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1426  001CCE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1427  001CD2  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1428  001CD6  2ADE               	incf	postinc2,f,c
  1429  001CD8  0E00               	movlw	0
  1430  001CDA  22DD               	addwfc	postdec2,f,c
  1431  001CDC                     
  1432                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1433  001CDC  0E00               	movlw	0
  1434  001CDE  0100               	movlb	0	; () banked
  1435  001CE0  6FAB               	movwf	(_width+1)& (0+255),b
  1436  001CE2  0E00               	movlw	0
  1437  001CE4  6FAA               	movwf	_width& (0+255),b
  1438  001CE6  C0AA  F0AE         	movff	_width,_flags
  1439  001CEA  C0AB  F0AF         	movff	_width+1,_flags+1
  1440  001CEE                     
  1441                           ; BSR set to: 0
  1442                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1443  001CEE  69AC               	setf	_prec& (0+255),b
  1444  001CF0  69AD               	setf	(_prec+1)& (0+255),b
  1445  001CF2                     
  1446                           ; BSR set to: 0
  1447                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1448  001CF2  0E00               	movlw	0
  1449  001CF4  6FE5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1450  001CF6  0E00               	movlw	0
  1451  001CF8  6FE4               	movwf	vfpfcnvrt@done& (0+255),b
  1452                           
  1453                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1454  001CFA  EFC6  F00E         	goto	l7673
  1455  001CFE                     l7647:
  1456                           
  1457                           ; BSR set to: 0
  1458                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1459  001CFE  81AE               	bsf	_flags& (0+255),0,b
  1460  001D00                     l7649:
  1461                           
  1462                           ; BSR set to: 0
  1463                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1464  001D00  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1465  001D04  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1466  001D08  2ADE               	incf	postinc2,f,c
  1467  001D0A  0E00               	movlw	0
  1468  001D0C  22DD               	addwfc	postdec2,f,c
  1469                           
  1470                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1471  001D0E  EFC6  F00E         	goto	l7673
  1472  001D12                     l7651:
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1476  001D12  83AE               	bsf	_flags& (0+255),1,b
  1477  001D14  EF80  F00E         	goto	l7649
  1478  001D18                     l7655:
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1482  001D18  85AE               	bsf	_flags& (0+255),2,b
  1483  001D1A  EF80  F00E         	goto	l7649
  1484  001D1E                     l7659:
  1485                           
  1486                           ; BSR set to: 0
  1487                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1488  001D1E  87AE               	bsf	_flags& (0+255),3,b
  1489  001D20  EF80  F00E         	goto	l7649
  1490  001D24                     l7663:
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1494  001D24  89AE               	bsf	_flags& (0+255),4,b
  1495  001D26  EF80  F00E         	goto	l7649
  1496  001D2A                     l7667:
  1497                           
  1498                           ; BSR set to: 0
  1499                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1500  001D2A  0E00               	movlw	0
  1501  001D2C  6FE5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1502  001D2E  0E01               	movlw	1
  1503  001D30  6FE4               	movwf	vfpfcnvrt@done& (0+255),b
  1504                           
  1505                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1506  001D32  EFC6  F00E         	goto	l7673
  1507  001D36                     l7671:
  1508                           
  1509                           ; BSR set to: 0
  1510  001D36  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1511  001D3A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1512  001D3E  CFDE FFF6          	movff	postinc2,tblptrl
  1513  001D42  CFDD FFF7          	movff	postdec2,tblptrh
  1514  001D46                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1515  001D46  6AF8               	clrf	tblptru,c
  1516  001D48                     	endif
  1517  001D48                     	if	0	;tblptru may be non-zero
  1518  001D48                     	endif
  1519  001D48  0008               	tblrd		*
  1520  001D4A  50F5               	movf	tablat,w,c
  1521  001D4C  6E52               	movwf	??_vfpfcnvrt^0,c
  1522  001D4E  6A53               	clrf	(??_vfpfcnvrt+1)^0,c
  1523                           
  1524                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1525                           ; Switch size 1, requested type "simple"
  1526                           ; Number of cases is 1, Range of values is 0 to 0
  1527                           ; switch strategies available:
  1528                           ; Name         Instructions Cycles
  1529                           ; simple_byte            4     3 (average)
  1530                           ;	Chosen strategy is simple_byte
  1531  001D50  5053               	movf	(??_vfpfcnvrt+1)^0,w,c
  1532  001D52  0A00               	xorlw	0	; case 0
  1533  001D54  B4D8               	btfsc	status,2,c
  1534  001D56  EFAF  F00E         	goto	l7965
  1535  001D5A  EF95  F00E         	goto	l7667
  1536  001D5E                     l7965:
  1537                           
  1538                           ; BSR set to: 0
  1539                           ; Switch size 1, requested type "simple"
  1540                           ; Number of cases is 5, Range of values is 32 to 48
  1541                           ; switch strategies available:
  1542                           ; Name         Instructions Cycles
  1543                           ; simple_byte           16     9 (average)
  1544                           ;	Chosen strategy is simple_byte
  1545  001D5E  5052               	movf	??_vfpfcnvrt^0,w,c
  1546  001D60  0A20               	xorlw	32	; case 32
  1547  001D62  B4D8               	btfsc	status,2,c
  1548  001D64  EF8F  F00E         	goto	l7659
  1549  001D68  0A03               	xorlw	3	; case 35
  1550  001D6A  B4D8               	btfsc	status,2,c
  1551  001D6C  EF92  F00E         	goto	l7663
  1552  001D70  0A08               	xorlw	8	; case 43
  1553  001D72  B4D8               	btfsc	status,2,c
  1554  001D74  EF8C  F00E         	goto	l7655
  1555  001D78  0A06               	xorlw	6	; case 45
  1556  001D7A  B4D8               	btfsc	status,2,c
  1557  001D7C  EF7F  F00E         	goto	l7647
  1558  001D80  0A1D               	xorlw	29	; case 48
  1559  001D82  B4D8               	btfsc	status,2,c
  1560  001D84  EF89  F00E         	goto	l7651
  1561  001D88  EF95  F00E         	goto	l7667
  1562  001D8C                     l7673:
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1566  001D8C  51E4               	movf	vfpfcnvrt@done& (0+255),w,b
  1567  001D8E  11E5               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1568  001D90  B4D8               	btfsc	status,2,c
  1569  001D92  EFCD  F00E         	goto	u8091
  1570  001D96  EFCF  F00E         	goto	u8090
  1571  001D9A                     u8091:
  1572  001D9A  EF9B  F00E         	goto	l7671
  1573  001D9E                     u8090:
  1574  001D9E                     
  1575                           ; BSR set to: 0
  1576                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1577  001D9E  A1AE               	btfss	_flags& (0+255),0,b
  1578  001DA0  EFD4  F00E         	goto	u8101
  1579  001DA4  EFD6  F00E         	goto	u8100
  1580  001DA8                     u8101:
  1581  001DA8  EFD7  F00E         	goto	l7677
  1582  001DAC                     u8100:
  1583  001DAC                     
  1584                           ; BSR set to: 0
  1585                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1586  001DAC  93AE               	bcf	_flags& (0+255),1,b
  1587  001DAE                     l7677:
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1591  001DAE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1592  001DB2  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1593  001DB6  CFDE FFF6          	movff	postinc2,tblptrl
  1594  001DBA  CFDD FFF7          	movff	postdec2,tblptrh
  1595  001DBE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1596  001DBE  6AF8               	clrf	tblptru,c
  1597  001DC0                     	endif
  1598  001DC0                     	if	0	;tblptru may be non-zero
  1599  001DC0                     	endif
  1600  001DC0  0008               	tblrd		*
  1601  001DC2  50F5               	movf	tablat,w,c
  1602  001DC4  0A2E               	xorlw	46
  1603  001DC6  A4D8               	btfss	status,2,c
  1604  001DC8  EFE8  F00E         	goto	u8111
  1605  001DCC  EFEA  F00E         	goto	u8110
  1606  001DD0                     u8111:
  1607  001DD0  EF5C  F00F         	goto	l7695
  1608  001DD4                     u8110:
  1609  001DD4                     
  1610                           ; BSR set to: 0
  1611                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1612  001DD4  0E00               	movlw	0
  1613  001DD6  6FAD               	movwf	(_prec+1)& (0+255),b
  1614  001DD8  0E00               	movlw	0
  1615  001DDA  6FAC               	movwf	_prec& (0+255),b
  1616  001DDC                     
  1617                           ; BSR set to: 0
  1618                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1619  001DDC  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1620  001DE0  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1621  001DE4  2ADE               	incf	postinc2,f,c
  1622  001DE6  0E00               	movlw	0
  1623  001DE8  22DD               	addwfc	postdec2,f,c
  1624  001DEA                     
  1625                           ; BSR set to: 0
  1626                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1627  001DEA  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1628  001DEE  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1629  001DF2  CFDE FFF6          	movff	postinc2,tblptrl
  1630  001DF6  CFDD FFF7          	movff	postdec2,tblptrh
  1631  001DFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1632  001DFA  6AF8               	clrf	tblptru,c
  1633  001DFC                     	endif
  1634  001DFC                     	if	0	;tblptru may be non-zero
  1635  001DFC                     	endif
  1636  001DFC  0008               	tblrd		*
  1637  001DFE  50F5               	movf	tablat,w,c
  1638  001E00  0A2A               	xorlw	42
  1639  001E02  A4D8               	btfss	status,2,c
  1640  001E04  EF06  F00F         	goto	u8121
  1641  001E08  EF08  F00F         	goto	u8120
  1642  001E0C                     u8121:
  1643  001E0C  EF25  F00F         	goto	l7687
  1644  001E10                     u8120:
  1645  001E10                     
  1646                           ; BSR set to: 0
  1647                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1648  001E10  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1649  001E14  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1650  001E18  2ADE               	incf	postinc2,f,c
  1651  001E1A  0E00               	movlw	0
  1652  001E1C  22DD               	addwfc	postdec2,f,c
  1653                           
  1654                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1655  001E1E  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1656  001E22  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1657  001E26  CFDF F052          	movff	indf2,??_vfpfcnvrt
  1658  001E2A  0E02               	movlw	2
  1659  001E2C  26DE               	addwf	postinc2,f,c
  1660  001E2E  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  1661  001E32  0E00               	movlw	0
  1662  001E34  22DD               	addwfc	postdec2,f,c
  1663  001E36  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1664  001E3A  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1665  001E3E  CFDE F0AC          	movff	postinc2,_prec
  1666  001E42  CFDD F0AD          	movff	postdec2,_prec+1
  1667                           
  1668                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1669  001E46  EF5C  F00F         	goto	l7695
  1670  001E4A                     l7687:
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1674  001E4A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1675  001E4E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1676  001E52  CFDE F00C          	movff	postinc2,atoi@s
  1677  001E56  CFDD F00D          	movff	postdec2,atoi@s+1
  1678  001E5A  EC1C  F01A         	call	_atoi	;wreg free
  1679  001E5E  C00C  F0AC         	movff	?_atoi,_prec
  1680  001E62  C00D  F0AD         	movff	?_atoi+1,_prec+1
  1681                           
  1682                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1683  001E66  EF3C  F00F         	goto	l7693
  1684  001E6A                     l7689:
  1685                           
  1686                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1687  001E6A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1688  001E6E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1689  001E72  2ADE               	incf	postinc2,f,c
  1690  001E74  0E00               	movlw	0
  1691  001E76  22DD               	addwfc	postdec2,f,c
  1692  001E78                     l7693:
  1693  001E78  0ED0               	movlw	208
  1694  001E7A  6E52               	movwf	??_vfpfcnvrt^0,c
  1695  001E7C  0EFF               	movlw	255
  1696  001E7E  6E53               	movwf	(??_vfpfcnvrt+1)^0,c
  1697  001E80  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1698  001E84  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1699  001E88  CFDE FFF6          	movff	postinc2,tblptrl
  1700  001E8C  CFDD FFF7          	movff	postdec2,tblptrh
  1701  001E90                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1702  001E90  6AF8               	clrf	tblptru,c
  1703  001E92                     	endif
  1704  001E92                     	if	0	;tblptru may be non-zero
  1705  001E92                     	endif
  1706  001E92  0008               	tblrd		*
  1707  001E94  50F5               	movf	tablat,w,c
  1708  001E96  6E54               	movwf	(??_vfpfcnvrt+2)^0,c
  1709  001E98  6A55               	clrf	(??_vfpfcnvrt+3)^0,c
  1710  001E9A  5052               	movf	??_vfpfcnvrt^0,w,c
  1711  001E9C  2654               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1712  001E9E  5053               	movf	(??_vfpfcnvrt+1)^0,w,c
  1713  001EA0  2255               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1714  001EA2  5055               	movf	(??_vfpfcnvrt+3)^0,w,c
  1715  001EA4  E109               	bnz	u8130
  1716  001EA6  0E0A               	movlw	10
  1717  001EA8  5C54               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1718  001EAA  A0D8               	btfss	status,0,c
  1719  001EAC  EF5A  F00F         	goto	u8131
  1720  001EB0  EF5C  F00F         	goto	u8130
  1721  001EB4                     u8131:
  1722  001EB4  EF35  F00F         	goto	l7689
  1723  001EB8                     u8130:
  1724  001EB8                     l7695:
  1725                           
  1726                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1727  001EB8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1728  001EBC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1729  001EC0  CFDE FFF6          	movff	postinc2,tblptrl
  1730  001EC4  CFDD FFF7          	movff	postdec2,tblptrh
  1731  001EC8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1732  001EC8  6AF8               	clrf	tblptru,c
  1733  001ECA                     	endif
  1734  001ECA                     	if	0	;tblptru may be non-zero
  1735  001ECA                     	endif
  1736  001ECA  0008               	tblrd		*
  1737  001ECC  50F5               	movf	tablat,w,c
  1738  001ECE  6E0B               	movwf	tolower@c^0,c
  1739  001ED0  6A0C               	clrf	(tolower@c+1)^0,c
  1740  001ED2  ECE8  F020         	call	_tolower	;wreg free
  1741  001ED6  500B               	movf	?_tolower^0,w,c
  1742  001ED8  0100               	movlb	0	; () banked
  1743  001EDA  6FEA               	movwf	vfpfcnvrt@ct& (0+255),b
  1744  001EDC                     
  1745                           ; BSR set to: 0
  1746                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1747  001EDC  51EA               	movf	vfpfcnvrt@ct& (0+255),w,b
  1748  001EDE  B4D8               	btfsc	status,2,c
  1749  001EE0  EF74  F00F         	goto	u8141
  1750  001EE4  EF76  F00F         	goto	u8140
  1751  001EE8                     u8141:
  1752  001EE8  EFB2  F00F         	goto	l7705
  1753  001EEC                     u8140:
  1754  001EEC                     
  1755                           ; BSR set to: 0
  1756                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1757  001EEC  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1758  001EF0  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1759  001EF4  CFDE F052          	movff	postinc2,??_vfpfcnvrt
  1760  001EF8  CFDD F053          	movff	postdec2,??_vfpfcnvrt+1
  1761  001EFC  0E01               	movlw	1
  1762  001EFE  2652               	addwf	??_vfpfcnvrt^0,f,c
  1763  001F00  0E00               	movlw	0
  1764  001F02  2253               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1765  001F04  C052  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1766  001F08  C053  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1767  001F0C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1768  001F0C  6AF8               	clrf	tblptru,c
  1769  001F0E                     	endif
  1770  001F0E                     	if	0	;tblptru may be non-zero
  1771  001F0E                     	endif
  1772  001F0E  0008               	tblrd		*
  1773  001F10  50F5               	movf	tablat,w,c
  1774  001F12  6E0B               	movwf	tolower@c^0,c
  1775  001F14  6A0C               	clrf	(tolower@c+1)^0,c
  1776  001F16  ECE8  F020         	call	_tolower	;wreg free
  1777  001F1A  500B               	movf	?_tolower^0,w,c
  1778  001F1C  0100               	movlb	0	; () banked
  1779  001F1E  6FEB               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1780  001F20                     
  1781                           ; BSR set to: 0
  1782                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1783  001F20  51EB               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1784  001F22  B4D8               	btfsc	status,2,c
  1785  001F24  EF96  F00F         	goto	u8151
  1786  001F28  EF98  F00F         	goto	u8150
  1787  001F2C                     u8151:
  1788  001F2C  EFB2  F00F         	goto	l7705
  1789  001F30                     u8150:
  1790  001F30                     
  1791                           ; BSR set to: 0
  1792                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1793  001F30  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1794  001F34  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1795  001F38  CFDE F052          	movff	postinc2,??_vfpfcnvrt
  1796  001F3C  CFDD F053          	movff	postdec2,??_vfpfcnvrt+1
  1797  001F40  0E02               	movlw	2
  1798  001F42  2652               	addwf	??_vfpfcnvrt^0,f,c
  1799  001F44  0E00               	movlw	0
  1800  001F46  2253               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1801  001F48  C052  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1802  001F4C  C053  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1803  001F50                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1804  001F50  6AF8               	clrf	tblptru,c
  1805  001F52                     	endif
  1806  001F52                     	if	0	;tblptru may be non-zero
  1807  001F52                     	endif
  1808  001F52  0008               	tblrd		*
  1809  001F54  50F5               	movf	tablat,w,c
  1810  001F56  6E0B               	movwf	tolower@c^0,c
  1811  001F58  6A0C               	clrf	(tolower@c+1)^0,c
  1812  001F5A  ECE8  F020         	call	_tolower	;wreg free
  1813  001F5E  500B               	movf	?_tolower^0,w,c
  1814  001F60  0100               	movlb	0	; () banked
  1815  001F62  6FEC               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1816  001F64                     l7705:
  1817                           
  1818                           ; BSR set to: 0
  1819                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1820  001F64  0E66               	movlw	102
  1821  001F66  19EA               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1822  001F68  A4D8               	btfss	status,2,c
  1823  001F6A  EFB9  F00F         	goto	u8161
  1824  001F6E  EFBB  F00F         	goto	u8160
  1825  001F72                     u8161:
  1826  001F72  EFFC  F00F         	goto	l7717
  1827  001F76                     u8160:
  1828  001F76                     
  1829                           ; BSR set to: 0
  1830                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1831  001F76  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1832  001F7A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1833  001F7E  CFDE FFF6          	movff	postinc2,tblptrl
  1834  001F82  CFDD FFF7          	movff	postdec2,tblptrh
  1835  001F86                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1836  001F86  6AF8               	clrf	tblptru,c
  1837  001F88                     	endif
  1838  001F88                     	if	0	;tblptru may be non-zero
  1839  001F88                     	endif
  1840  001F88  0008               	tblrd		*
  1841  001F8A  CFF5 F0ED          	movff	tablat,vfpfcnvrt@c
  1842  001F8E                     
  1843                           ; BSR set to: 0
  1844                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  1845  001F8E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1846  001F92  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1847  001F96  2ADE               	incf	postinc2,f,c
  1848  001F98  0E00               	movlw	0
  1849  001F9A  22DD               	addwfc	postdec2,f,c
  1850  001F9C                     
  1851                           ; BSR set to: 0
  1852                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1853  001F9C  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1854  001FA0  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1855  001FA4  CFDF F052          	movff	indf2,??_vfpfcnvrt
  1856  001FA8  0E04               	movlw	4
  1857  001FAA  26DE               	addwf	postinc2,f,c
  1858  001FAC  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  1859  001FB0  0E00               	movlw	0
  1860  001FB2  22DD               	addwfc	postdec2,f,c
  1861  001FB4  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1862  001FB8  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1863  001FBC  CFDE F0E6          	movff	postinc2,vfpfcnvrt@f
  1864  001FC0  CFDE F0E7          	movff	postinc2,vfpfcnvrt@f+1
  1865  001FC4  CFDE F0E8          	movff	postinc2,vfpfcnvrt@f+2
  1866  001FC8  CFDE F0E9          	movff	postinc2,vfpfcnvrt@f+3
  1867  001FCC                     
  1868                           ; BSR set to: 0
  1869                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  1870  001FCC  C04C  F040         	movff	vfpfcnvrt@fp,efgtoa@fp
  1871  001FD0  C04D  F041         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1872  001FD4  C0E6  F042         	movff	vfpfcnvrt@f,efgtoa@f
  1873  001FD8  C0E7  F043         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1874  001FDC  C0E8  F044         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1875  001FE0  C0E9  F045         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1876  001FE4  C0ED  F046         	movff	vfpfcnvrt@c,efgtoa@c
  1877  001FE8  EC26  F008         	call	_efgtoa	;wreg free
  1878  001FEC  C040  F04C         	movff	?_efgtoa,?_vfpfcnvrt
  1879  001FF0  C041  F04D         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1880  001FF4  EFEA  F010         	goto	l1632
  1881  001FF8                     l7717:
  1882                           
  1883                           ; BSR set to: 0
  1884                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1885  001FF8  0EEA               	movlw	low vfpfcnvrt@ct
  1886  001FFA  6E05               	movwf	strncmp@_l^0,c
  1887  001FFC  0E00               	movlw	high vfpfcnvrt@ct
  1888  001FFE  6E06               	movwf	(strncmp@_l+1)^0,c
  1889  002000  0E47               	movlw	low STR_10
  1890  002002  6E07               	movwf	strncmp@_r^0,c
  1891  002004  0E10               	movlw	high STR_10
  1892  002006  6E08               	movwf	(strncmp@_r+1)^0,c
  1893  002008  0E00               	movlw	0
  1894  00200A  6E0A               	movwf	(strncmp@n+1)^0,c
  1895  00200C  0E02               	movlw	2
  1896  00200E  6E09               	movwf	strncmp@n^0,c
  1897  002010  EC50  F01C         	call	_strncmp	;wreg free
  1898  002014  5005               	movf	?_strncmp^0,w,c
  1899  002016  1006               	iorwf	(?_strncmp+1)^0,w,c
  1900  002018  A4D8               	btfss	status,2,c
  1901  00201A  EF11  F010         	goto	u8171
  1902  00201E  EF13  F010         	goto	u8170
  1903  002022                     u8171:
  1904  002022  EF97  F010         	goto	l7733
  1905  002026                     u8170:
  1906  002026                     
  1907                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  1908  002026  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1909  00202A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1910  00202E  CFDE F052          	movff	postinc2,??_vfpfcnvrt
  1911  002032  CFDD F053          	movff	postdec2,??_vfpfcnvrt+1
  1912  002036  0E01               	movlw	1
  1913  002038  2652               	addwf	??_vfpfcnvrt^0,f,c
  1914  00203A  0E00               	movlw	0
  1915  00203C  2253               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1916  00203E  C052  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1917  002042  C053  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1918  002046                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1919  002046  6AF8               	clrf	tblptru,c
  1920  002048                     	endif
  1921  002048                     	if	0	;tblptru may be non-zero
  1922  002048                     	endif
  1923  002048  0008               	tblrd		*
  1924  00204A  CFF5 F0ED          	movff	tablat,vfpfcnvrt@c
  1925  00204E  0EBF               	movlw	191
  1926  002050  6E52               	movwf	??_vfpfcnvrt^0,c
  1927  002052  0EFF               	movlw	255
  1928  002054  6E53               	movwf	(??_vfpfcnvrt+1)^0,c
  1929  002056  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1930  00205A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1931  00205E  CFDE FFF6          	movff	postinc2,tblptrl
  1932  002062  CFDD FFF7          	movff	postdec2,tblptrh
  1933  002066                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1934  002066  6AF8               	clrf	tblptru,c
  1935  002068                     	endif
  1936  002068                     	if	0	;tblptru may be non-zero
  1937  002068                     	endif
  1938  002068  0008               	tblrd		*
  1939  00206A  50F5               	movf	tablat,w,c
  1940  00206C  6E54               	movwf	(??_vfpfcnvrt+2)^0,c
  1941  00206E  6A55               	clrf	(??_vfpfcnvrt+3)^0,c
  1942  002070  5052               	movf	??_vfpfcnvrt^0,w,c
  1943  002072  2654               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1944  002074  5053               	movf	(??_vfpfcnvrt+1)^0,w,c
  1945  002076  2255               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1946  002078  5055               	movf	(??_vfpfcnvrt+3)^0,w,c
  1947  00207A  E107               	bnz	u8181
  1948  00207C  0E1A               	movlw	26
  1949  00207E  5C54               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1950  002080  B0D8               	btfsc	status,0,c
  1951  002082  EF45  F010         	goto	u8181
  1952  002086  EF47  F010         	goto	u8180
  1953  00208A                     u8181:
  1954  00208A  EF61  F010         	goto	l7727
  1955  00208E                     u8180:
  1956  00208E                     
  1957                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1958  00208E  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1959  002092  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1960  002096  CFDF F052          	movff	indf2,??_vfpfcnvrt
  1961  00209A  0E04               	movlw	4
  1962  00209C  26DE               	addwf	postinc2,f,c
  1963  00209E  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  1964  0020A2  0E00               	movlw	0
  1965  0020A4  22DD               	addwfc	postdec2,f,c
  1966  0020A6  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1967  0020AA  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1968  0020AE  CFDE F0E6          	movff	postinc2,vfpfcnvrt@f
  1969  0020B2  CFDE F0E7          	movff	postinc2,vfpfcnvrt@f+1
  1970  0020B6  CFDE F0E8          	movff	postinc2,vfpfcnvrt@f+2
  1971  0020BA  CFDE F0E9          	movff	postinc2,vfpfcnvrt@f+3
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  1974  0020BE  EF79  F010         	goto	l1637
  1975  0020C2                     l7727:
  1976                           
  1977                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1978  0020C2  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1979  0020C6  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1980  0020CA  CFDF F052          	movff	indf2,??_vfpfcnvrt
  1981  0020CE  0E04               	movlw	4
  1982  0020D0  26DE               	addwf	postinc2,f,c
  1983  0020D2  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  1984  0020D6  0E00               	movlw	0
  1985  0020D8  22DD               	addwfc	postdec2,f,c
  1986  0020DA  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1987  0020DE  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1988  0020E2  CFDE F0E6          	movff	postinc2,vfpfcnvrt@f
  1989  0020E6  CFDE F0E7          	movff	postinc2,vfpfcnvrt@f+1
  1990  0020EA  CFDE F0E8          	movff	postinc2,vfpfcnvrt@f+2
  1991  0020EE  CFDE F0E9          	movff	postinc2,vfpfcnvrt@f+3
  1992  0020F2                     l1637:
  1993                           
  1994                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1995  0020F2  0E02               	movlw	2
  1996  0020F4  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1997  0020F8  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1998  0020FC  26DE               	addwf	postinc2,f,c
  1999  0020FE  0E00               	movlw	0
  2000  002100  22DD               	addwfc	postdec2,f,c
  2001  002102                     
  2002                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  2003  002102  C04C  F040         	movff	vfpfcnvrt@fp,efgtoa@fp
  2004  002106  C04D  F041         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2005  00210A  C0E6  F042         	movff	vfpfcnvrt@f,efgtoa@f
  2006  00210E  C0E7  F043         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2007  002112  C0E8  F044         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2008  002116  C0E9  F045         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2009  00211A  C0ED  F046         	movff	vfpfcnvrt@c,efgtoa@c
  2010  00211E  EC26  F008         	call	_efgtoa	;wreg free
  2011  002122  C040  F04C         	movff	?_efgtoa,?_vfpfcnvrt
  2012  002126  C041  F04D         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2013  00212A  EFEA  F010         	goto	l1632
  2014  00212E                     l7733:
  2015                           
  2016                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2017  00212E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2018  002132  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2019  002136  CFDE FFF6          	movff	postinc2,tblptrl
  2020  00213A  CFDD FFF7          	movff	postdec2,tblptrh
  2021  00213E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2022  00213E  6AF8               	clrf	tblptru,c
  2023  002140                     	endif
  2024  002140                     	if	0	;tblptru may be non-zero
  2025  002140                     	endif
  2026  002140  0008               	tblrd		*
  2027  002142  50F5               	movf	tablat,w,c
  2028  002144  0A25               	xorlw	37
  2029  002146  A4D8               	btfss	status,2,c
  2030  002148  EFA8  F010         	goto	u8191
  2031  00214C  EFAA  F010         	goto	u8190
  2032  002150                     u8191:
  2033  002150  EFC1  F010         	goto	l7743
  2034  002154                     u8190:
  2035  002154                     
  2036                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2037  002154  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2038  002158  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2039  00215C  2ADE               	incf	postinc2,f,c
  2040  00215E  0E00               	movlw	0
  2041  002160  22DD               	addwfc	postdec2,f,c
  2042  002162                     
  2043                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2044  002162  0E00               	movlw	0
  2045  002164  6E08               	movwf	(fputc@c+1)^0,c
  2046  002166  0E25               	movlw	37
  2047  002168  6E07               	movwf	fputc@c^0,c
  2048  00216A  C04C  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2049  00216E  C04D  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2050  002172  ECF9  F01E         	call	_fputc	;wreg free
  2051  002176                     l7739:
  2052                           
  2053                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2054  002176  0E00               	movlw	0
  2055  002178  6E4D               	movwf	(?_vfpfcnvrt+1)^0,c
  2056  00217A  0E01               	movlw	1
  2057  00217C  6E4C               	movwf	?_vfpfcnvrt^0,c
  2058  00217E  EFEA  F010         	goto	l1632
  2059  002182                     l7743:
  2060                           
  2061                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2062  002182  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2063  002186  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2064  00218A  2ADE               	incf	postinc2,f,c
  2065  00218C  0E00               	movlw	0
  2066  00218E  22DD               	addwfc	postdec2,f,c
  2067  002190                     
  2068                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2069  002190  0E00               	movlw	0
  2070  002192  6E4D               	movwf	(?_vfpfcnvrt+1)^0,c
  2071  002194  0E00               	movlw	0
  2072  002196  6E4C               	movwf	?_vfpfcnvrt^0,c
  2073  002198  EFEA  F010         	goto	l1632
  2074  00219C                     l7749:
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2077  00219C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2078  0021A0  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2079  0021A4  CFDE FFF6          	movff	postinc2,tblptrl
  2080  0021A8  CFDD FFF7          	movff	postdec2,tblptrh
  2081  0021AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2082  0021AC  6AF8               	clrf	tblptru,c
  2083  0021AE                     	endif
  2084  0021AE                     	if	0	;tblptru may be non-zero
  2085  0021AE                     	endif
  2086  0021AE  0008               	tblrd		*
  2087  0021B0  50F5               	movf	tablat,w,c
  2088  0021B2  6E07               	movwf	fputc@c^0,c
  2089  0021B4  6A08               	clrf	(fputc@c+1)^0,c
  2090  0021B6  C04C  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2091  0021BA  C04D  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2092  0021BE  ECF9  F01E         	call	_fputc	;wreg free
  2093  0021C2                     
  2094                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2095  0021C2  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2096  0021C6  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2097  0021CA  2ADE               	incf	postinc2,f,c
  2098  0021CC  0E00               	movlw	0
  2099  0021CE  22DD               	addwfc	postdec2,f,c
  2100  0021D0  EFBB  F010         	goto	l7739
  2101  0021D4                     l1632:
  2102  0021D4  0012               	return		;funcret
  2103  0021D6                     __end_of_vfpfcnvrt:
  2104                           	callstack 0
  2105                           
  2106 ;; *************** function _strncmp *****************
  2107 ;; Defined at:
  2108 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strncmp.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  _l              2    4[COMRAM] PTR const unsigned char 
  2111 ;;		 -> vfpfcnvrt@ct(3), 
  2112 ;;  _r              2    6[COMRAM] PTR const unsigned char 
  2113 ;;		 -> STR_12(3), 
  2114 ;;  n               2    8[COMRAM] unsigned int 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  r               2   13[COMRAM] PTR const unsigned char 
  2117 ;;		 -> STR_12(3), 
  2118 ;;  l               2   11[COMRAM] PTR const unsigned char 
  2119 ;;		 -> vfpfcnvrt@ct(3), 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  2    4[COMRAM] int 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2129 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;Total ram usage:       11 bytes
  2134 ;; Hardware stack levels used: 1
  2135 ;; Hardware stack levels required when called: 4
  2136 ;; This function calls:
  2137 ;;		Nothing
  2138 ;; This function is called by:
  2139 ;;		_vfpfcnvrt
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text4
  2144  0038A0                     __ptext4:
  2145                           	callstack 0
  2146  0038A0                     _strncmp:
  2147                           	callstack 23
  2148  0038A0  C005  F00C         	movff	strncmp@_l,strncmp@l
  2149  0038A4  C006  F00D         	movff	strncmp@_l+1,strncmp@l+1
  2150  0038A8  C007  F00E         	movff	strncmp@_r,strncmp@r
  2151  0038AC  C008  F00F         	movff	strncmp@_r+1,strncmp@r+1
  2152  0038B0  0609               	decf	strncmp@n^0,f,c
  2153  0038B2  A0D8               	btfss	status,0,c
  2154  0038B4  060A               	decf	(strncmp@n+1)^0,f,c
  2155  0038B6  2809               	incf	strncmp@n^0,w,c
  2156  0038B8  E106               	bnz	u8031
  2157  0038BA  280A               	incf	(strncmp@n+1)^0,w,c
  2158  0038BC  A4D8               	btfss	status,2,c
  2159  0038BE  EF63  F01C         	goto	u8031
  2160  0038C2  EF65  F01C         	goto	u8030
  2161  0038C6                     u8031:
  2162  0038C6  EF72  F01C         	goto	l7625
  2163  0038CA                     u8030:
  2164  0038CA  0E00               	movlw	0
  2165  0038CC  6E06               	movwf	(?_strncmp+1)^0,c
  2166  0038CE  0E00               	movlw	0
  2167  0038D0  6E05               	movwf	?_strncmp^0,c
  2168  0038D2  EFBD  F01C         	goto	l1749
  2169  0038D6                     l7623:
  2170  0038D6  4A0C               	infsnz	strncmp@l^0,f,c
  2171  0038D8  2A0D               	incf	(strncmp@l+1)^0,f,c
  2172  0038DA  4A0E               	infsnz	strncmp@r^0,f,c
  2173  0038DC  2A0F               	incf	(strncmp@r+1)^0,f,c
  2174  0038DE  0609               	decf	strncmp@n^0,f,c
  2175  0038E0  A0D8               	btfss	status,0,c
  2176  0038E2  060A               	decf	(strncmp@n+1)^0,f,c
  2177  0038E4                     l7625:
  2178  0038E4  C00C  FFD9         	movff	strncmp@l,fsr2l
  2179  0038E8  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2180  0038EC  50DF               	movf	indf2,w,c
  2181  0038EE  B4D8               	btfsc	status,2,c
  2182  0038F0  EF7C  F01C         	goto	u8041
  2183  0038F4  EF7E  F01C         	goto	u8040
  2184  0038F8                     u8041:
  2185  0038F8  EFAB  F01C         	goto	l7633
  2186  0038FC                     u8040:
  2187  0038FC  C00E  FFF6         	movff	strncmp@r,tblptrl
  2188  003900  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2189  003904                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2190  003904  6AF8               	clrf	tblptru,c
  2191  003906                     	endif
  2192  003906                     	if	0	;tblptru may be non-zero
  2193  003906                     	endif
  2194  003906  0008               	tblrd		*
  2195  003908  50F5               	movf	tablat,w,c
  2196  00390A  0900               	iorlw	0
  2197  00390C  B4D8               	btfsc	status,2,c
  2198  00390E  EF8B  F01C         	goto	u8051
  2199  003912  EF8D  F01C         	goto	u8050
  2200  003916                     u8051:
  2201  003916  EFAB  F01C         	goto	l7633
  2202  00391A                     u8050:
  2203  00391A  5009               	movf	strncmp@n^0,w,c
  2204  00391C  100A               	iorwf	(strncmp@n+1)^0,w,c
  2205  00391E  B4D8               	btfsc	status,2,c
  2206  003920  EF94  F01C         	goto	u8061
  2207  003924  EF96  F01C         	goto	u8060
  2208  003928                     u8061:
  2209  003928  EFAB  F01C         	goto	l7633
  2210  00392C                     u8060:
  2211  00392C  C00C  FFD9         	movff	strncmp@l,fsr2l
  2212  003930  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2213  003934  50DF               	movf	indf2,w,c
  2214  003936  6E0B               	movwf	??_strncmp^0,c
  2215  003938  C00E  FFF6         	movff	strncmp@r,tblptrl
  2216  00393C  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2217  003940                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2218  003940  6AF8               	clrf	tblptru,c
  2219  003942                     	endif
  2220  003942                     	if	0	;tblptru may be non-zero
  2221  003942                     	endif
  2222  003942  0008               	tblrd		*
  2223  003944  50F5               	movf	tablat,w,c
  2224  003946  180B               	xorwf	??_strncmp^0,w,c
  2225  003948  B4D8               	btfsc	status,2,c
  2226  00394A  EFA9  F01C         	goto	u8071
  2227  00394E  EFAB  F01C         	goto	u8070
  2228  003952                     u8071:
  2229  003952  EF6B  F01C         	goto	l7623
  2230  003956                     u8070:
  2231  003956                     l7633:
  2232  003956  C00C  FFD9         	movff	strncmp@l,fsr2l
  2233  00395A  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2234  00395E  50DF               	movf	indf2,w,c
  2235  003960  6E0B               	movwf	??_strncmp^0,c
  2236  003962  C00E  FFF6         	movff	strncmp@r,tblptrl
  2237  003966  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2238  00396A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2239  00396A  6AF8               	clrf	tblptru,c
  2240  00396C                     	endif
  2241  00396C                     	if	0	;tblptru may be non-zero
  2242  00396C                     	endif
  2243  00396C  0008               	tblrd		*
  2244  00396E  50F5               	movf	tablat,w,c
  2245  003970  5C0B               	subwf	??_strncmp^0,w,c
  2246  003972  6E05               	movwf	?_strncmp^0,c
  2247  003974  6A06               	clrf	(?_strncmp+1)^0,c
  2248  003976  A0D8               	btfss	status,0,c
  2249  003978  0606               	decf	(?_strncmp+1)^0,f,c
  2250  00397A                     l1749:
  2251  00397A  0012               	return		;funcret
  2252  00397C                     __end_of_strncmp:
  2253                           	callstack 0
  2254                           
  2255 ;; *************** function _efgtoa *****************
  2256 ;; Defined at:
  2257 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  2260 ;;		 -> NULL(0), 
  2261 ;;  f               4   65[COMRAM] PTR struct _IO_FILE
  2262 ;;  c               1   69[COMRAM] unsigned char 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  u               4   46[BANK0 ] unsigned char 
  2265 ;;  g               4   38[BANK0 ] unsigned char 
  2266 ;;  l               4   32[BANK0 ] unsigned char 
  2267 ;;  h               4   28[BANK0 ] unsigned char 
  2268 ;;  ou              4   14[BANK0 ] unsigned char 
  2269 ;;  n               2   44[BANK0 ] int 
  2270 ;;  e               2   42[BANK0 ] int 
  2271 ;;  i               2   36[BANK0 ] int 
  2272 ;;  w               2   24[BANK0 ] int 
  2273 ;;  p               2   22[BANK0 ] int 
  2274 ;;  sign            2   20[BANK0 ] int 
  2275 ;;  d               2   18[BANK0 ] int 
  2276 ;;  m               2   12[BANK0 ] int 
  2277 ;;  ne              2   10[BANK0 ] int 
  2278 ;;  pp              2    8[BANK0 ] int 
  2279 ;;  t               2    6[BANK0 ] int 
  2280 ;;  mode            1   27[BANK0 ] unsigned char 
  2281 ;;  nmode           1   26[BANK0 ] unsigned char 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  2   63[COMRAM] int 
  2284 ;; Registers used:
  2285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2291 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2292 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2293 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2294 ;;      Totals:        12      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;Total ram usage:       62 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; Hardware stack levels required when called: 9
  2298 ;; This function calls:
  2299 ;;		___awdiv
  2300 ;;		___awmod
  2301 ;;		___fladd
  2302 ;;		___fldiv
  2303 ;;		___fleq
  2304 ;;		___flge
  2305 ;;		___flmul
  2306 ;;		___flneg
  2307 ;;		___flsub
  2308 ;;		___fltol
  2309 ;;		___fpclassifyf
  2310 ;;		_floorf
  2311 ;;		_isupper
  2312 ;;		_pad
  2313 ;;		_strcpy
  2314 ;;		_tolower
  2315 ;; This function is called by:
  2316 ;;		_vfpfcnvrt
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           	psect	text5
  2321  00104C                     __ptext5:
  2322                           	callstack 0
  2323  00104C                     _efgtoa:
  2324                           	callstack 18
  2325  00104C                     
  2326                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.35\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2327  00104C  0E00               	movlw	0
  2328  00104E  0100               	movlb	0	; () banked
  2329  001050  6FC7               	movwf	(efgtoa@sign+1)& (0+255),b
  2330  001052  0E00               	movlw	0
  2331  001054  6FC6               	movwf	efgtoa@sign& (0+255),b
  2332  001056                     
  2333                           ; BSR set to: 0
  2334                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2335  001056  C042  F0D8         	movff	efgtoa@f,efgtoa@g
  2336  00105A  C043  F0D9         	movff	efgtoa@f+1,efgtoa@g+1
  2337  00105E  C044  F0DA         	movff	efgtoa@f+2,efgtoa@g+2
  2338  001062  C045  F0DB         	movff	efgtoa@f+3,efgtoa@g+3
  2339  001066                     
  2340                           ; BSR set to: 0
  2341                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2342  001066  BFDB               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2343  001068  EF3A  F008         	goto	u7510
  2344  00106C  EF38  F008         	goto	u7511
  2345  001070                     u7511:
  2346  001070  EF50  F008         	goto	l7289
  2347  001074                     u7510:
  2348  001074                     
  2349                           ; BSR set to: 0
  2350                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2351  001074  0E00               	movlw	0
  2352  001076  6FC7               	movwf	(efgtoa@sign+1)& (0+255),b
  2353  001078  0E01               	movlw	1
  2354  00107A  6FC6               	movwf	efgtoa@sign& (0+255),b
  2355  00107C                     
  2356                           ; BSR set to: 0
  2357                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2358  00107C  C0D8  F005         	movff	efgtoa@g,___flneg@f1
  2359  001080  C0D9  F006         	movff	efgtoa@g+1,___flneg@f1+1
  2360  001084  C0DA  F007         	movff	efgtoa@g+2,___flneg@f1+2
  2361  001088  C0DB  F008         	movff	efgtoa@g+3,___flneg@f1+3
  2362  00108C  ECAD  F021         	call	___flneg	;wreg free
  2363  001090  C005  F0D8         	movff	?___flneg,efgtoa@g
  2364  001094  C006  F0D9         	movff	?___flneg+1,efgtoa@g+1
  2365  001098  C007  F0DA         	movff	?___flneg+2,efgtoa@g+2
  2366  00109C  C008  F0DB         	movff	?___flneg+3,efgtoa@g+3
  2367  0010A0                     l7289:
  2368                           
  2369                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2370  0010A0  0E00               	movlw	0
  2371  0010A2  0100               	movlb	0	; () banked
  2372  0010A4  6FDF               	movwf	(efgtoa@n+1)& (0+255),b
  2373  0010A6  0E00               	movlw	0
  2374  0010A8  6FDE               	movwf	efgtoa@n& (0+255),b
  2375  0010AA                     
  2376                           ; BSR set to: 0
  2377                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2378  0010AA  C0AA  F0CA         	movff	_width,efgtoa@w
  2379  0010AE  C0AB  F0CB         	movff	_width+1,efgtoa@w+1
  2380  0010B2                     
  2381                           ; BSR set to: 0
  2382                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2383  0010B2  51C6               	movf	efgtoa@sign& (0+255),w,b
  2384  0010B4  11C7               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2385  0010B6  A4D8               	btfss	status,2,c
  2386  0010B8  EF60  F008         	goto	u7521
  2387  0010BC  EF62  F008         	goto	u7520
  2388  0010C0                     u7521:
  2389  0010C0  EF69  F008         	goto	l7297
  2390  0010C4                     u7520:
  2391  0010C4                     
  2392                           ; BSR set to: 0
  2393  0010C4  A5AE               	btfss	_flags& (0+255),2,b
  2394  0010C6  EF67  F008         	goto	u7531
  2395  0010CA  EF69  F008         	goto	u7530
  2396  0010CE                     u7531:
  2397  0010CE  EF83  F008         	goto	l7309
  2398  0010D2                     u7530:
  2399  0010D2                     l7297:
  2400                           
  2401                           ; BSR set to: 0
  2402                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2403  0010D2  51C6               	movf	efgtoa@sign& (0+255),w,b
  2404  0010D4  11C7               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2405  0010D6  A4D8               	btfss	status,2,c
  2406  0010D8  EF70  F008         	goto	u7541
  2407  0010DC  EF72  F008         	goto	u7540
  2408  0010E0                     u7541:
  2409  0010E0  EF78  F008         	goto	l7301
  2410  0010E4                     u7540:
  2411  0010E4                     
  2412                           ; BSR set to: 0
  2413  0010E4  0E00               	movlw	0
  2414  0010E6  6FB3               	movwf	(_efgtoa$2333+1)& (0+255),b
  2415  0010E8  0E2B               	movlw	43
  2416  0010EA  6FB2               	movwf	_efgtoa$2333& (0+255),b
  2417  0010EC  EF7C  F008         	goto	l7303
  2418  0010F0                     l7301:
  2419                           
  2420                           ; BSR set to: 0
  2421  0010F0  0E00               	movlw	0
  2422  0010F2  6FB3               	movwf	(_efgtoa$2333+1)& (0+255),b
  2423  0010F4  0E2D               	movlw	45
  2424  0010F6  6FB2               	movwf	_efgtoa$2333& (0+255),b
  2425  0010F8                     l7303:
  2426                           
  2427                           ; BSR set to: 0
  2428  0010F8  C0B2  F100         	movff	_efgtoa$2333,_dbuf
  2429  0010FC                     
  2430                           ; BSR set to: 0
  2431                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2432  0010FC  4BDE               	infsnz	efgtoa@n& (0+255),f,b
  2433  0010FE  2BDF               	incf	(efgtoa@n+1)& (0+255),f,b
  2434  001100                     
  2435                           ; BSR set to: 0
  2436                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 352:         --w;
  2437  001100  07CA               	decf	efgtoa@w& (0+255),f,b
  2438  001102  A0D8               	btfss	status,0,c
  2439  001104  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  2440  001106                     l7309:
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  2444  001106  C0D8  F005         	movff	efgtoa@g,___fpclassifyf@x
  2445  00110A  C0D9  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2446  00110E  C0DA  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2447  001112  C0DB  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2448  001116  ECD1  F01B         	call	___fpclassifyf	;wreg free
  2449  00111A  0405               	decf	?___fpclassifyf^0,w,c
  2450  00111C  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2451  00111E  A4D8               	btfss	status,2,c
  2452  001120  EF94  F008         	goto	u7551
  2453  001124  EF96  F008         	goto	u7550
  2454  001128                     u7551:
  2455  001128  EFE1  F008         	goto	l7327
  2456  00112C                     u7550:
  2457  00112C  0EBF               	movlw	191
  2458  00112E  6E47               	movwf	??_efgtoa^0,c
  2459  001130  0EFF               	movlw	255
  2460  001132  6E48               	movwf	(??_efgtoa+1)^0,c
  2461  001134  5046               	movf	efgtoa@c^0,w,c
  2462  001136  6E49               	movwf	(??_efgtoa+2)^0,c
  2463  001138  6A4A               	clrf	(??_efgtoa+3)^0,c
  2464  00113A  5047               	movf	??_efgtoa^0,w,c
  2465  00113C  2649               	addwf	(??_efgtoa+2)^0,f,c
  2466  00113E  5048               	movf	(??_efgtoa+1)^0,w,c
  2467  001140  224A               	addwfc	(??_efgtoa+3)^0,f,c
  2468  001142  504A               	movf	(??_efgtoa+3)^0,w,c
  2469  001144  E107               	bnz	u7561
  2470  001146  0E1A               	movlw	26
  2471  001148  5C49               	subwf	(??_efgtoa+2)^0,w,c
  2472  00114A  B0D8               	btfsc	status,0,c
  2473  00114C  EFAA  F008         	goto	u7561
  2474  001150  EFAC  F008         	goto	u7560
  2475  001154                     u7561:
  2476  001154  EFBB  F008         	goto	l7319
  2477  001158                     u7560:
  2478  001158                     
  2479                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2480  001158  0E00               	movlw	low _dbuf
  2481  00115A  0100               	movlb	0	; () banked
  2482  00115C  25DE               	addwf	efgtoa@n& (0+255),w,b
  2483  00115E  6E05               	movwf	strcpy@dest^0,c
  2484  001160  0E01               	movlw	high _dbuf
  2485  001162  21DF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2486  001164  6E06               	movwf	(strcpy@dest+1)^0,c
  2487  001166  0E37               	movlw	low STR_2
  2488  001168  6E07               	movwf	strcpy@src^0,c
  2489  00116A  0E10               	movlw	high STR_2
  2490  00116C  6E08               	movwf	(strcpy@src+1)^0,c
  2491  00116E  ECF0  F01F         	call	_strcpy	;wreg free
  2492                           
  2493                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2494  001172  EFC8  F008         	goto	l7321
  2495  001176                     l7319:
  2496                           
  2497                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2498  001176  0E00               	movlw	low _dbuf
  2499  001178  0100               	movlb	0	; () banked
  2500  00117A  25DE               	addwf	efgtoa@n& (0+255),w,b
  2501  00117C  6E05               	movwf	strcpy@dest^0,c
  2502  00117E  0E01               	movlw	high _dbuf
  2503  001180  21DF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2504  001182  6E06               	movwf	(strcpy@dest+1)^0,c
  2505  001184  0E3F               	movlw	low STR_3
  2506  001186  6E07               	movwf	strcpy@src^0,c
  2507  001188  0E10               	movlw	high STR_3
  2508  00118A  6E08               	movwf	(strcpy@src+1)^0,c
  2509  00118C  ECF0  F01F         	call	_strcpy	;wreg free
  2510  001190                     l7321:
  2511                           
  2512                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2513  001190  0100               	movlb	0	; () banked
  2514  001192  0EFD               	movlw	253
  2515  001194  27CA               	addwf	efgtoa@w& (0+255),f,b
  2516  001196  0EFF               	movlw	255
  2517  001198  23CB               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2518  00119A                     
  2519                           ; BSR set to: 0
  2520                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2521  00119A  C040  F017         	movff	efgtoa@fp,pad@fp
  2522  00119E  C041  F018         	movff	efgtoa@fp+1,pad@fp+1
  2523  0011A2  0E00               	movlw	low _dbuf
  2524  0011A4  6E19               	movwf	pad@buf^0,c
  2525  0011A6  0E01               	movlw	high _dbuf
  2526  0011A8  6E1A               	movwf	(pad@buf+1)^0,c
  2527  0011AA  C0CA  F01B         	movff	efgtoa@w,pad@p
  2528  0011AE  C0CB  F01C         	movff	efgtoa@w+1,pad@p+1
  2529  0011B2  EC27  F01D         	call	_pad	;wreg free
  2530  0011B6  C017  F040         	movff	?_pad,?_efgtoa
  2531  0011BA  C018  F041         	movff	?_pad+1,?_efgtoa+1
  2532  0011BE  EF53  F00E         	goto	l1534
  2533  0011C2                     l7327:
  2534                           
  2535                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  2536  0011C2  C0D8  F005         	movff	efgtoa@g,___fpclassifyf@x
  2537  0011C6  C0D9  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2538  0011CA  C0DA  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2539  0011CE  C0DB  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2540  0011D2  ECD1  F01B         	call	___fpclassifyf	;wreg free
  2541  0011D6  5005               	movf	?___fpclassifyf^0,w,c
  2542  0011D8  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2543  0011DA  A4D8               	btfss	status,2,c
  2544  0011DC  EFF2  F008         	goto	u7571
  2545  0011E0  EFF4  F008         	goto	u7570
  2546  0011E4                     u7571:
  2547  0011E4  EF3F  F009         	goto	l7345
  2548  0011E8                     u7570:
  2549  0011E8  0EBF               	movlw	191
  2550  0011EA  6E47               	movwf	??_efgtoa^0,c
  2551  0011EC  0EFF               	movlw	255
  2552  0011EE  6E48               	movwf	(??_efgtoa+1)^0,c
  2553  0011F0  5046               	movf	efgtoa@c^0,w,c
  2554  0011F2  6E49               	movwf	(??_efgtoa+2)^0,c
  2555  0011F4  6A4A               	clrf	(??_efgtoa+3)^0,c
  2556  0011F6  5047               	movf	??_efgtoa^0,w,c
  2557  0011F8  2649               	addwf	(??_efgtoa+2)^0,f,c
  2558  0011FA  5048               	movf	(??_efgtoa+1)^0,w,c
  2559  0011FC  224A               	addwfc	(??_efgtoa+3)^0,f,c
  2560  0011FE  504A               	movf	(??_efgtoa+3)^0,w,c
  2561  001200  E107               	bnz	u7581
  2562  001202  0E1A               	movlw	26
  2563  001204  5C49               	subwf	(??_efgtoa+2)^0,w,c
  2564  001206  B0D8               	btfsc	status,0,c
  2565  001208  EF08  F009         	goto	u7581
  2566  00120C  EF0A  F009         	goto	u7580
  2567  001210                     u7581:
  2568  001210  EF19  F009         	goto	l7337
  2569  001214                     u7580:
  2570  001214                     
  2571                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2572  001214  0E00               	movlw	low _dbuf
  2573  001216  0100               	movlb	0	; () banked
  2574  001218  25DE               	addwf	efgtoa@n& (0+255),w,b
  2575  00121A  6E05               	movwf	strcpy@dest^0,c
  2576  00121C  0E01               	movlw	high _dbuf
  2577  00121E  21DF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2578  001220  6E06               	movwf	(strcpy@dest+1)^0,c
  2579  001222  0E3B               	movlw	low STR_6
  2580  001224  6E07               	movwf	strcpy@src^0,c
  2581  001226  0E10               	movlw	high STR_6
  2582  001228  6E08               	movwf	(strcpy@src+1)^0,c
  2583  00122A  ECF0  F01F         	call	_strcpy	;wreg free
  2584                           
  2585                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2586  00122E  EF26  F009         	goto	l7339
  2587  001232                     l7337:
  2588                           
  2589                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2590  001232  0E00               	movlw	low _dbuf
  2591  001234  0100               	movlb	0	; () banked
  2592  001236  25DE               	addwf	efgtoa@n& (0+255),w,b
  2593  001238  6E05               	movwf	strcpy@dest^0,c
  2594  00123A  0E01               	movlw	high _dbuf
  2595  00123C  21DF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2596  00123E  6E06               	movwf	(strcpy@dest+1)^0,c
  2597  001240  0E43               	movlw	low STR_7
  2598  001242  6E07               	movwf	strcpy@src^0,c
  2599  001244  0E10               	movlw	high STR_7
  2600  001246  6E08               	movwf	(strcpy@src+1)^0,c
  2601  001248  ECF0  F01F         	call	_strcpy	;wreg free
  2602  00124C                     l7339:
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2605  00124C  0100               	movlb	0	; () banked
  2606  00124E  0EFD               	movlw	253
  2607  001250  27CA               	addwf	efgtoa@w& (0+255),f,b
  2608  001252  0EFF               	movlw	255
  2609  001254  23CB               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2610  001256                     
  2611                           ; BSR set to: 0
  2612                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2613  001256  C040  F017         	movff	efgtoa@fp,pad@fp
  2614  00125A  C041  F018         	movff	efgtoa@fp+1,pad@fp+1
  2615  00125E  0E00               	movlw	low _dbuf
  2616  001260  6E19               	movwf	pad@buf^0,c
  2617  001262  0E01               	movlw	high _dbuf
  2618  001264  6E1A               	movwf	(pad@buf+1)^0,c
  2619  001266  C0CA  F01B         	movff	efgtoa@w,pad@p
  2620  00126A  C0CB  F01C         	movff	efgtoa@w+1,pad@p+1
  2621  00126E  EC27  F01D         	call	_pad	;wreg free
  2622  001272  C017  F040         	movff	?_pad,?_efgtoa
  2623  001276  C018  F041         	movff	?_pad+1,?_efgtoa+1
  2624  00127A  EF53  F00E         	goto	l1534
  2625  00127E                     l7345:
  2626                           
  2627                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2628  00127E  0E00               	movlw	0
  2629  001280  0100               	movlb	0	; () banked
  2630  001282  6FE0               	movwf	efgtoa@u& (0+255),b
  2631  001284  0E00               	movlw	0
  2632  001286  6FE1               	movwf	(efgtoa@u+1)& (0+255),b
  2633  001288  0E80               	movlw	128
  2634  00128A  6FE2               	movwf	(efgtoa@u+2)& (0+255),b
  2635  00128C  0E3F               	movlw	63
  2636  00128E  6FE3               	movwf	(efgtoa@u+3)& (0+255),b
  2637                           
  2638                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2639  001290  0E00               	movlw	0
  2640  001292  6FDD               	movwf	(efgtoa@e+1)& (0+255),b
  2641  001294  0E00               	movlw	0
  2642  001296  6FDC               	movwf	efgtoa@e& (0+255),b
  2643  001298                     
  2644                           ; BSR set to: 0
  2645                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2646  001298  C0D8  F005         	movff	efgtoa@g,___fleq@ff1
  2647  00129C  C0D9  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2648  0012A0  C0DA  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2649  0012A4  C0DB  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2650  0012A8  0E00               	movlw	0
  2651  0012AA  6E09               	movwf	___fleq@ff2^0,c
  2652  0012AC  0E00               	movlw	0
  2653  0012AE  6E0A               	movwf	(___fleq@ff2+1)^0,c
  2654  0012B0  0E00               	movlw	0
  2655  0012B2  6E0B               	movwf	(___fleq@ff2+2)^0,c
  2656  0012B4  0E00               	movlw	0
  2657  0012B6  6E0C               	movwf	(___fleq@ff2+3)^0,c
  2658  0012B8  ECA4  F01E         	call	___fleq	;wreg free
  2659  0012BC  B0D8               	btfsc	status,0,c
  2660  0012BE  EF63  F009         	goto	u7591
  2661  0012C2  EF65  F009         	goto	u7590
  2662  0012C6                     u7591:
  2663  0012C6  EFE8  F009         	goto	l7363
  2664  0012CA                     u7590:
  2665  0012CA  EF84  F009         	goto	l7355
  2666  0012CE                     l7351:
  2667                           
  2668                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2669  0012CE  C0E0  F005         	movff	efgtoa@u,___flmul@b
  2670  0012D2  C0E1  F006         	movff	efgtoa@u+1,___flmul@b+1
  2671  0012D6  C0E2  F007         	movff	efgtoa@u+2,___flmul@b+2
  2672  0012DA  C0E3  F008         	movff	efgtoa@u+3,___flmul@b+3
  2673  0012DE  0E00               	movlw	0
  2674  0012E0  6E09               	movwf	___flmul@a^0,c
  2675  0012E2  0E00               	movlw	0
  2676  0012E4  6E0A               	movwf	(___flmul@a+1)^0,c
  2677  0012E6  0E20               	movlw	32
  2678  0012E8  6E0B               	movwf	(___flmul@a+2)^0,c
  2679  0012EA  0E41               	movlw	65
  2680  0012EC  6E0C               	movwf	(___flmul@a+3)^0,c
  2681  0012EE  EC4B  F013         	call	___flmul	;wreg free
  2682  0012F2  C005  F0E0         	movff	?___flmul,efgtoa@u
  2683  0012F6  C006  F0E1         	movff	?___flmul+1,efgtoa@u+1
  2684  0012FA  C007  F0E2         	movff	?___flmul+2,efgtoa@u+2
  2685  0012FE  C008  F0E3         	movff	?___flmul+3,efgtoa@u+3
  2686  001302                     
  2687                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2688  001302  0100               	movlb	0	; () banked
  2689  001304  4BDC               	infsnz	efgtoa@e& (0+255),f,b
  2690  001306  2BDD               	incf	(efgtoa@e+1)& (0+255),f,b
  2691  001308                     l7355:
  2692                           
  2693                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2694  001308  C0D8  F01E         	movff	efgtoa@g,___flge@ff1
  2695  00130C  C0D9  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  2696  001310  C0DA  F020         	movff	efgtoa@g+2,___flge@ff1+2
  2697  001314  C0DB  F021         	movff	efgtoa@g+3,___flge@ff1+3
  2698  001318  0E00               	movlw	0
  2699  00131A  6E09               	movwf	___flmul@a^0,c
  2700  00131C  0E00               	movlw	0
  2701  00131E  6E0A               	movwf	(___flmul@a+1)^0,c
  2702  001320  0E20               	movlw	32
  2703  001322  6E0B               	movwf	(___flmul@a+2)^0,c
  2704  001324  0E41               	movlw	65
  2705  001326  6E0C               	movwf	(___flmul@a+3)^0,c
  2706  001328  C0E0  F005         	movff	efgtoa@u,___flmul@b
  2707  00132C  C0E1  F006         	movff	efgtoa@u+1,___flmul@b+1
  2708  001330  C0E2  F007         	movff	efgtoa@u+2,___flmul@b+2
  2709  001334  C0E3  F008         	movff	efgtoa@u+3,___flmul@b+3
  2710  001338  EC4B  F013         	call	___flmul	;wreg free
  2711  00133C  C005  F022         	movff	?___flmul,___flge@ff2
  2712  001340  C006  F023         	movff	?___flmul+1,___flge@ff2+1
  2713  001344  C007  F024         	movff	?___flmul+2,___flge@ff2+2
  2714  001348  C008  F025         	movff	?___flmul+3,___flge@ff2+3
  2715  00134C  EC4F  F01B         	call	___flge	;wreg free
  2716  001350  B0D8               	btfsc	status,0,c
  2717  001352  EFAD  F009         	goto	u7601
  2718  001356  EFAF  F009         	goto	u7600
  2719  00135A                     u7601:
  2720  00135A  EF67  F009         	goto	l7351
  2721  00135E                     u7600:
  2722  00135E  EFCF  F009         	goto	l7361
  2723  001362                     l7357:
  2724                           
  2725                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2726  001362  C0E0  F013         	movff	efgtoa@u,___fldiv@b
  2727  001366  C0E1  F014         	movff	efgtoa@u+1,___fldiv@b+1
  2728  00136A  C0E2  F015         	movff	efgtoa@u+2,___fldiv@b+2
  2729  00136E  C0E3  F016         	movff	efgtoa@u+3,___fldiv@b+3
  2730  001372  0E00               	movlw	0
  2731  001374  6E17               	movwf	___fldiv@a^0,c
  2732  001376  0E00               	movlw	0
  2733  001378  6E18               	movwf	(___fldiv@a+1)^0,c
  2734  00137A  0E20               	movlw	32
  2735  00137C  6E19               	movwf	(___fldiv@a+2)^0,c
  2736  00137E  0E41               	movlw	65
  2737  001380  6E1A               	movwf	(___fldiv@a+3)^0,c
  2738  001382  EC60  F015         	call	___fldiv	;wreg free
  2739  001386  C013  F0E0         	movff	?___fldiv,efgtoa@u
  2740  00138A  C014  F0E1         	movff	?___fldiv+1,efgtoa@u+1
  2741  00138E  C015  F0E2         	movff	?___fldiv+2,efgtoa@u+2
  2742  001392  C016  F0E3         	movff	?___fldiv+3,efgtoa@u+3
  2743  001396                     
  2744                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2745  001396  0100               	movlb	0	; () banked
  2746  001398  07DC               	decf	efgtoa@e& (0+255),f,b
  2747  00139A  A0D8               	btfss	status,0,c
  2748  00139C  07DD               	decf	(efgtoa@e+1)& (0+255),f,b
  2749  00139E                     l7361:
  2750                           
  2751                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2752  00139E  C0D8  F01E         	movff	efgtoa@g,___flge@ff1
  2753  0013A2  C0D9  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  2754  0013A6  C0DA  F020         	movff	efgtoa@g+2,___flge@ff1+2
  2755  0013AA  C0DB  F021         	movff	efgtoa@g+3,___flge@ff1+3
  2756  0013AE  C0E0  F022         	movff	efgtoa@u,___flge@ff2
  2757  0013B2  C0E1  F023         	movff	efgtoa@u+1,___flge@ff2+1
  2758  0013B6  C0E2  F024         	movff	efgtoa@u+2,___flge@ff2+2
  2759  0013BA  C0E3  F025         	movff	efgtoa@u+3,___flge@ff2+3
  2760  0013BE  EC4F  F01B         	call	___flge	;wreg free
  2761  0013C2  A0D8               	btfss	status,0,c
  2762  0013C4  EFE6  F009         	goto	u7611
  2763  0013C8  EFE8  F009         	goto	u7610
  2764  0013CC                     u7611:
  2765  0013CC  EFB1  F009         	goto	l7357
  2766  0013D0                     u7610:
  2767  0013D0                     l7363:
  2768                           
  2769                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2770  0013D0  C046  F00B         	movff	efgtoa@c,tolower@c
  2771  0013D4  6A0C               	clrf	(tolower@c+1)^0,c
  2772  0013D6  ECE8  F020         	call	_tolower	;wreg free
  2773  0013DA  500B               	movf	?_tolower^0,w,c
  2774  0013DC  0100               	movlb	0	; () banked
  2775  0013DE  6FCD               	movwf	efgtoa@mode& (0+255),b
  2776  0013E0                     
  2777                           ; BSR set to: 0
  2778                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2779  0013E0  C0CD  F0CC         	movff	efgtoa@mode,efgtoa@nmode
  2780  0013E4                     
  2781                           ; BSR set to: 0
  2782                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2783  0013E4  0E67               	movlw	103
  2784  0013E6  19CD               	xorwf	efgtoa@mode& (0+255),w,b
  2785  0013E8  A4D8               	btfss	status,2,c
  2786  0013EA  EFF9  F009         	goto	u7621
  2787  0013EE  EFFB  F009         	goto	u7620
  2788  0013F2                     u7621:
  2789  0013F2  EF21  F00A         	goto	l7377
  2790  0013F6                     u7620:
  2791  0013F6                     
  2792                           ; BSR set to: 0
  2793                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2794  0013F6  51AC               	movf	_prec& (0+255),w,b
  2795  0013F8  11AD               	iorwf	(_prec+1)& (0+255),w,b
  2796  0013FA  A4D8               	btfss	status,2,c
  2797  0013FC  EF02  F00A         	goto	u7631
  2798  001400  EF04  F00A         	goto	u7630
  2799  001404                     u7631:
  2800  001404  EF08  F00A         	goto	l7373
  2801  001408                     u7630:
  2802  001408                     
  2803                           ; BSR set to: 0
  2804                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2805  001408  0E00               	movlw	0
  2806  00140A  6FAD               	movwf	(_prec+1)& (0+255),b
  2807  00140C  0E01               	movlw	1
  2808  00140E  6FAC               	movwf	_prec& (0+255),b
  2809  001410                     l7373:
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2813  001410  BFAD               	btfsc	(_prec+1)& (0+255),7,b
  2814  001412  EF15  F00A         	goto	u7640
  2815  001416  51AD               	movf	(_prec+1)& (0+255),w,b
  2816  001418  E106               	bnz	u7641
  2817  00141A  05AC               	decf	_prec& (0+255),w,b
  2818  00141C  B0D8               	btfsc	status,0,c
  2819  00141E  EF13  F00A         	goto	u7641
  2820  001422  EF15  F00A         	goto	u7640
  2821  001426                     u7641:
  2822  001426  EF1B  F00A         	goto	l1550
  2823  00142A                     u7640:
  2824  00142A                     l7375:
  2825                           
  2826                           ; BSR set to: 0
  2827  00142A  0E00               	movlw	0
  2828  00142C  6FC9               	movwf	(efgtoa@p+1)& (0+255),b
  2829  00142E  0E06               	movlw	6
  2830  001430  6FC8               	movwf	efgtoa@p& (0+255),b
  2831  001432  EF2A  F00A         	goto	l7383
  2832  001436                     l1550:
  2833                           
  2834                           ; BSR set to: 0
  2835  001436  C0AC  F0C8         	movff	_prec,efgtoa@p
  2836  00143A  C0AD  F0C9         	movff	_prec+1,efgtoa@p+1
  2837  00143E  EF2A  F00A         	goto	l7383
  2838  001442                     l7377:
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  2842  001442  BFAD               	btfsc	(_prec+1)& (0+255),7,b
  2843  001444  EF26  F00A         	goto	u7651
  2844  001448  EF28  F00A         	goto	u7650
  2845  00144C                     u7651:
  2846  00144C  EF15  F00A         	goto	l7375
  2847  001450                     u7650:
  2848  001450  EF1B  F00A         	goto	l1550
  2849  001454                     l7383:
  2850                           
  2851                           ; BSR set to: 0
  2852                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  2853  001454  0E67               	movlw	103
  2854  001456  19CD               	xorwf	efgtoa@mode& (0+255),w,b
  2855  001458  A4D8               	btfss	status,2,c
  2856  00145A  EF31  F00A         	goto	u7661
  2857  00145E  EF33  F00A         	goto	u7660
  2858  001462                     u7661:
  2859  001462  EF62  F00A         	goto	l7393
  2860  001466                     u7660:
  2861  001466                     
  2862                           ; BSR set to: 0
  2863                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2864  001466  AFDD               	btfss	(efgtoa@e+1)& (0+255),7,b
  2865  001468  EF41  F00A         	goto	u7670
  2866  00146C  0EFC               	movlw	252
  2867  00146E  5DDC               	subwf	efgtoa@e& (0+255),w,b
  2868  001470  0EFF               	movlw	255
  2869  001472  59DD               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2870  001474  A0D8               	btfss	status,0,c
  2871  001476  EF3F  F00A         	goto	u7671
  2872  00147A  EF41  F00A         	goto	u7670
  2873  00147E                     u7671:
  2874  00147E  EF60  F00A         	goto	l7391
  2875  001482                     u7670:
  2876  001482                     
  2877                           ; BSR set to: 0
  2878  001482  0EFF               	movlw	255
  2879  001484  6E47               	movwf	??_efgtoa^0,c
  2880  001486  0EFF               	movlw	255
  2881  001488  6E48               	movwf	(??_efgtoa+1)^0,c
  2882  00148A  C0C8  F049         	movff	efgtoa@p,??_efgtoa+2
  2883  00148E  C0C9  F04A         	movff	efgtoa@p+1,??_efgtoa+3
  2884  001492  5047               	movf	??_efgtoa^0,w,c
  2885  001494  2649               	addwf	(??_efgtoa+2)^0,f,c
  2886  001496  5048               	movf	(??_efgtoa+1)^0,w,c
  2887  001498  224A               	addwfc	(??_efgtoa+3)^0,f,c
  2888  00149A  51DC               	movf	efgtoa@e& (0+255),w,b
  2889  00149C  5C49               	subwf	(??_efgtoa+2)^0,w,c
  2890  00149E  504A               	movf	(??_efgtoa+3)^0,w,c
  2891  0014A0  0A80               	xorlw	128
  2892  0014A2  6E4B               	movwf	(??_efgtoa+4)^0,c
  2893  0014A4  51DD               	movf	(efgtoa@e+1)& (0+255),w,b
  2894  0014A6  0A80               	xorlw	128
  2895  0014A8  584B               	subwfb	(??_efgtoa+4)^0,w,c
  2896  0014AA  A0D8               	btfss	status,0,c
  2897  0014AC  EF5A  F00A         	goto	u7681
  2898  0014B0  EF5C  F00A         	goto	u7680
  2899  0014B4                     u7681:
  2900  0014B4  EF60  F00A         	goto	l7391
  2901  0014B8                     u7680:
  2902  0014B8                     
  2903                           ; BSR set to: 0
  2904                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  2905  0014B8  0E66               	movlw	102
  2906  0014BA  6FCC               	movwf	efgtoa@nmode& (0+255),b
  2907                           
  2908                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  2909  0014BC  EF62  F00A         	goto	l7393
  2910  0014C0                     l7391:
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  2914  0014C0  0E65               	movlw	101
  2915  0014C2  6FCC               	movwf	efgtoa@nmode& (0+255),b
  2916  0014C4                     l7393:
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 411:     m = p;
  2920  0014C4  C0C8  F0BE         	movff	efgtoa@p,efgtoa@m
  2921  0014C8  C0C9  F0BF         	movff	efgtoa@p+1,efgtoa@m+1
  2922  0014CC                     
  2923                           ; BSR set to: 0
  2924                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  2925  0014CC  0E67               	movlw	103
  2926  0014CE  19CD               	xorwf	efgtoa@mode& (0+255),w,b
  2927  0014D0  A4D8               	btfss	status,2,c
  2928  0014D2  EF6D  F00A         	goto	u7691
  2929  0014D6  EF6F  F00A         	goto	u7690
  2930  0014DA                     u7691:
  2931  0014DA  EF7F  F00A         	goto	l7401
  2932  0014DE                     u7690:
  2933  0014DE                     
  2934                           ; BSR set to: 0
  2935  0014DE  0E66               	movlw	102
  2936  0014E0  19CC               	xorwf	efgtoa@nmode& (0+255),w,b
  2937  0014E2  A4D8               	btfss	status,2,c
  2938  0014E4  EF76  F00A         	goto	u7701
  2939  0014E8  EF78  F00A         	goto	u7700
  2940  0014EC                     u7701:
  2941  0014EC  EF81  F00A         	goto	l7403
  2942  0014F0                     u7700:
  2943  0014F0                     
  2944                           ; BSR set to: 0
  2945  0014F0  BFDD               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2946  0014F2  EF7F  F00A         	goto	u7710
  2947  0014F6  EF7D  F00A         	goto	u7711
  2948  0014FA                     u7711:
  2949  0014FA  EF81  F00A         	goto	l7403
  2950  0014FE                     u7710:
  2951  0014FE                     l7401:
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 413:         ++m;
  2955  0014FE  4BBE               	infsnz	efgtoa@m& (0+255),f,b
  2956  001500  2BBF               	incf	(efgtoa@m+1)& (0+255),f,b
  2957  001502                     l7403:
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  2961  001502  0E66               	movlw	102
  2962  001504  19CC               	xorwf	efgtoa@nmode& (0+255),w,b
  2963  001506  A4D8               	btfss	status,2,c
  2964  001508  EF88  F00A         	goto	u7721
  2965  00150C  EF8A  F00A         	goto	u7720
  2966  001510                     u7721:
  2967  001510  EFAA  F00A         	goto	l7413
  2968  001514                     u7720:
  2969  001514                     
  2970                           ; BSR set to: 0
  2971                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  2972  001514  BFDD               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2973  001516  EF91  F00A         	goto	u7730
  2974  00151A  EF8F  F00A         	goto	u7731
  2975  00151E                     u7731:
  2976  00151E  EF9D  F00A         	goto	l7409
  2977  001522                     u7730:
  2978  001522                     
  2979                           ; BSR set to: 0
  2980                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  2981  001522  0E00               	movlw	0
  2982  001524  6FE0               	movwf	efgtoa@u& (0+255),b
  2983  001526  0E00               	movlw	0
  2984  001528  6FE1               	movwf	(efgtoa@u+1)& (0+255),b
  2985  00152A  0E80               	movlw	128
  2986  00152C  6FE2               	movwf	(efgtoa@u+2)& (0+255),b
  2987  00152E  0E3F               	movlw	63
  2988  001530  6FE3               	movwf	(efgtoa@u+3)& (0+255),b
  2989                           
  2990                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  2991  001532  0E00               	movlw	0
  2992  001534  6FDD               	movwf	(efgtoa@e+1)& (0+255),b
  2993  001536  0E00               	movlw	0
  2994  001538  6FDC               	movwf	efgtoa@e& (0+255),b
  2995  00153A                     l7409:
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  2999  00153A  0E67               	movlw	103
  3000  00153C  19CD               	xorwf	efgtoa@mode& (0+255),w,b
  3001  00153E  B4D8               	btfsc	status,2,c
  3002  001540  EFA4  F00A         	goto	u7741
  3003  001544  EFA6  F00A         	goto	u7740
  3004  001548                     u7741:
  3005  001548  EFAA  F00A         	goto	l7413
  3006  00154C                     u7740:
  3007  00154C                     
  3008                           ; BSR set to: 0
  3009                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3010  00154C  51DC               	movf	efgtoa@e& (0+255),w,b
  3011  00154E  27BE               	addwf	efgtoa@m& (0+255),f,b
  3012  001550  51DD               	movf	(efgtoa@e+1)& (0+255),w,b
  3013  001552  23BF               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3014  001554                     l7413:
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3018  001554  0E00               	movlw	0
  3019  001556  6FD7               	movwf	(efgtoa@i+1)& (0+255),b
  3020  001558  0E00               	movlw	0
  3021  00155A  6FD6               	movwf	efgtoa@i& (0+255),b
  3022  00155C                     
  3023                           ; BSR set to: 0
  3024                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3025  00155C  C0D8  F0CE         	movff	efgtoa@g,efgtoa@h
  3026  001560  C0D9  F0CF         	movff	efgtoa@g+1,efgtoa@h+1
  3027  001564  C0DA  F0D0         	movff	efgtoa@g+2,efgtoa@h+2
  3028  001568  C0DB  F0D1         	movff	efgtoa@g+3,efgtoa@h+3
  3029  00156C                     
  3030                           ; BSR set to: 0
  3031                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3032  00156C  C0E0  F0C0         	movff	efgtoa@u,efgtoa@ou
  3033  001570  C0E1  F0C1         	movff	efgtoa@u+1,efgtoa@ou+1
  3034  001574  C0E2  F0C2         	movff	efgtoa@u+2,efgtoa@ou+2
  3035  001578  C0E3  F0C3         	movff	efgtoa@u+3,efgtoa@ou+3
  3036                           
  3037                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3038  00157C  EF3B  F00B         	goto	l7427
  3039  001580                     l7419:
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3043  001580  C0CE  F013         	movff	efgtoa@h,___fldiv@b
  3044  001584  C0CF  F014         	movff	efgtoa@h+1,___fldiv@b+1
  3045  001588  C0D0  F015         	movff	efgtoa@h+2,___fldiv@b+2
  3046  00158C  C0D1  F016         	movff	efgtoa@h+3,___fldiv@b+3
  3047  001590  C0E0  F017         	movff	efgtoa@u,___fldiv@a
  3048  001594  C0E1  F018         	movff	efgtoa@u+1,___fldiv@a+1
  3049  001598  C0E2  F019         	movff	efgtoa@u+2,___fldiv@a+2
  3050  00159C  C0E3  F01A         	movff	efgtoa@u+3,___fldiv@a+3
  3051  0015A0  EC60  F015         	call	___fldiv	;wreg free
  3052  0015A4  C013  F02C         	movff	?___fldiv,floorf@x
  3053  0015A8  C014  F02D         	movff	?___fldiv+1,floorf@x+1
  3054  0015AC  C015  F02E         	movff	?___fldiv+2,floorf@x+2
  3055  0015B0  C016  F02F         	movff	?___fldiv+3,floorf@x+3
  3056  0015B4  EC39  F018         	call	_floorf	;wreg free
  3057  0015B8  C02C  F0D2         	movff	?_floorf,efgtoa@l
  3058  0015BC  C02D  F0D3         	movff	?_floorf+1,efgtoa@l+1
  3059  0015C0  C02E  F0D4         	movff	?_floorf+2,efgtoa@l+2
  3060  0015C4  C02F  F0D5         	movff	?_floorf+3,efgtoa@l+3
  3061                           
  3062                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3063  0015C8  C0D2  F005         	movff	efgtoa@l,___fltol@f1
  3064  0015CC  C0D3  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3065  0015D0  C0D4  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3066  0015D4  C0D5  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3067  0015D8  ECCC  F01A         	call	___fltol	;wreg free
  3068  0015DC  C005  F0C4         	movff	?___fltol,efgtoa@d
  3069  0015E0  C006  F0C5         	movff	?___fltol+1,efgtoa@d+1
  3070  0015E4                     
  3071                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3072  0015E4  C0CE  F01E         	movff	efgtoa@h,___flsub@b
  3073  0015E8  C0CF  F01F         	movff	efgtoa@h+1,___flsub@b+1
  3074  0015EC  C0D0  F020         	movff	efgtoa@h+2,___flsub@b+2
  3075  0015F0  C0D1  F021         	movff	efgtoa@h+3,___flsub@b+3
  3076  0015F4  C0E0  F009         	movff	efgtoa@u,___flmul@a
  3077  0015F8  C0E1  F00A         	movff	efgtoa@u+1,___flmul@a+1
  3078  0015FC  C0E2  F00B         	movff	efgtoa@u+2,___flmul@a+2
  3079  001600  C0E3  F00C         	movff	efgtoa@u+3,___flmul@a+3
  3080  001604  C0D2  F005         	movff	efgtoa@l,___flmul@b
  3081  001608  C0D3  F006         	movff	efgtoa@l+1,___flmul@b+1
  3082  00160C  C0D4  F007         	movff	efgtoa@l+2,___flmul@b+2
  3083  001610  C0D5  F008         	movff	efgtoa@l+3,___flmul@b+3
  3084  001614  EC4B  F013         	call	___flmul	;wreg free
  3085  001618  C005  F022         	movff	?___flmul,___flsub@a
  3086  00161C  C006  F023         	movff	?___flmul+1,___flsub@a+1
  3087  001620  C007  F024         	movff	?___flmul+2,___flsub@a+2
  3088  001624  C008  F025         	movff	?___flmul+3,___flsub@a+3
  3089  001628  EC0B  F021         	call	___flsub	;wreg free
  3090  00162C  C01E  F0CE         	movff	?___flsub,efgtoa@h
  3091  001630  C01F  F0CF         	movff	?___flsub+1,efgtoa@h+1
  3092  001634  C020  F0D0         	movff	?___flsub+2,efgtoa@h+2
  3093  001638  C021  F0D1         	movff	?___flsub+3,efgtoa@h+3
  3094  00163C                     
  3095                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3096  00163C  C0E0  F013         	movff	efgtoa@u,___fldiv@b
  3097  001640  C0E1  F014         	movff	efgtoa@u+1,___fldiv@b+1
  3098  001644  C0E2  F015         	movff	efgtoa@u+2,___fldiv@b+2
  3099  001648  C0E3  F016         	movff	efgtoa@u+3,___fldiv@b+3
  3100  00164C  0E00               	movlw	0
  3101  00164E  6E17               	movwf	___fldiv@a^0,c
  3102  001650  0E00               	movlw	0
  3103  001652  6E18               	movwf	(___fldiv@a+1)^0,c
  3104  001654  0E20               	movlw	32
  3105  001656  6E19               	movwf	(___fldiv@a+2)^0,c
  3106  001658  0E41               	movlw	65
  3107  00165A  6E1A               	movwf	(___fldiv@a+3)^0,c
  3108  00165C  EC60  F015         	call	___fldiv	;wreg free
  3109  001660  C013  F0E0         	movff	?___fldiv,efgtoa@u
  3110  001664  C014  F0E1         	movff	?___fldiv+1,efgtoa@u+1
  3111  001668  C015  F0E2         	movff	?___fldiv+2,efgtoa@u+2
  3112  00166C  C016  F0E3         	movff	?___fldiv+3,efgtoa@u+3
  3113  001670                     
  3114                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3115  001670  0100               	movlb	0	; () banked
  3116  001672  4BD6               	infsnz	efgtoa@i& (0+255),f,b
  3117  001674  2BD7               	incf	(efgtoa@i+1)& (0+255),f,b
  3118  001676                     l7427:
  3119                           
  3120                           ; BSR set to: 0
  3121                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3122  001676  51BE               	movf	efgtoa@m& (0+255),w,b
  3123  001678  5DD6               	subwf	efgtoa@i& (0+255),w,b
  3124  00167A  51D7               	movf	(efgtoa@i+1)& (0+255),w,b
  3125  00167C  0A80               	xorlw	128
  3126  00167E  6E47               	movwf	??_efgtoa^0,c
  3127  001680  51BF               	movf	(efgtoa@m+1)& (0+255),w,b
  3128  001682  0A80               	xorlw	128
  3129  001684  5847               	subwfb	??_efgtoa^0,w,c
  3130  001686  A0D8               	btfss	status,0,c
  3131  001688  EF48  F00B         	goto	u7751
  3132  00168C  EF4A  F00B         	goto	u7750
  3133  001690                     u7751:
  3134  001690  EFC0  F00A         	goto	l7419
  3135  001694                     u7750:
  3136  001694                     
  3137                           ; BSR set to: 0
  3138                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3139  001694  C0E0  F005         	movff	efgtoa@u,___flmul@b
  3140  001698  C0E1  F006         	movff	efgtoa@u+1,___flmul@b+1
  3141  00169C  C0E2  F007         	movff	efgtoa@u+2,___flmul@b+2
  3142  0016A0  C0E3  F008         	movff	efgtoa@u+3,___flmul@b+3
  3143  0016A4  0E00               	movlw	0
  3144  0016A6  6E09               	movwf	___flmul@a^0,c
  3145  0016A8  0E00               	movlw	0
  3146  0016AA  6E0A               	movwf	(___flmul@a+1)^0,c
  3147  0016AC  0EA0               	movlw	160
  3148  0016AE  6E0B               	movwf	(___flmul@a+2)^0,c
  3149  0016B0  0E40               	movlw	64
  3150  0016B2  6E0C               	movwf	(___flmul@a+3)^0,c
  3151  0016B4  EC4B  F013         	call	___flmul	;wreg free
  3152  0016B8  C005  F0D2         	movff	?___flmul,efgtoa@l
  3153  0016BC  C006  F0D3         	movff	?___flmul+1,efgtoa@l+1
  3154  0016C0  C007  F0D4         	movff	?___flmul+2,efgtoa@l+2
  3155  0016C4  C008  F0D5         	movff	?___flmul+3,efgtoa@l+3
  3156  0016C8                     
  3157                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3158  0016C8  C0CE  F01E         	movff	efgtoa@h,___flge@ff1
  3159  0016CC  C0CF  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  3160  0016D0  C0D0  F020         	movff	efgtoa@h+2,___flge@ff1+2
  3161  0016D4  C0D1  F021         	movff	efgtoa@h+3,___flge@ff1+3
  3162  0016D8  C0D2  F022         	movff	efgtoa@l,___flge@ff2
  3163  0016DC  C0D3  F023         	movff	efgtoa@l+1,___flge@ff2+1
  3164  0016E0  C0D4  F024         	movff	efgtoa@l+2,___flge@ff2+2
  3165  0016E4  C0D5  F025         	movff	efgtoa@l+3,___flge@ff2+3
  3166  0016E8  EC4F  F01B         	call	___flge	;wreg free
  3167  0016EC  B0D8               	btfsc	status,0,c
  3168  0016EE  EF7B  F00B         	goto	u7761
  3169  0016F2  EF7D  F00B         	goto	u7760
  3170  0016F6                     u7761:
  3171  0016F6  EF88  F00B         	goto	l7435
  3172  0016FA                     u7760:
  3173  0016FA                     
  3174                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3175  0016FA  0E00               	movlw	0
  3176  0016FC  0100               	movlb	0	; () banked
  3177  0016FE  6FD2               	movwf	efgtoa@l& (0+255),b
  3178  001700  0E00               	movlw	0
  3179  001702  6FD3               	movwf	(efgtoa@l+1)& (0+255),b
  3180  001704  0E00               	movlw	0
  3181  001706  6FD4               	movwf	(efgtoa@l+2)& (0+255),b
  3182  001708  0E00               	movlw	0
  3183  00170A  6FD5               	movwf	(efgtoa@l+3)& (0+255),b
  3184                           
  3185                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 443:     } else {
  3186  00170C  EFB1  F00B         	goto	l7441
  3187  001710                     l7435:
  3188                           
  3189                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3190  001710  C0CE  F005         	movff	efgtoa@h,___fleq@ff1
  3191  001714  C0CF  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  3192  001718  C0D0  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  3193  00171C  C0D1  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  3194  001720  C0D2  F009         	movff	efgtoa@l,___fleq@ff2
  3195  001724  C0D3  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  3196  001728  C0D4  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  3197  00172C  C0D5  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  3198  001730  ECA4  F01E         	call	___fleq	;wreg free
  3199  001734  A0D8               	btfss	status,0,c
  3200  001736  EF9F  F00B         	goto	u7771
  3201  00173A  EFA1  F00B         	goto	u7770
  3202  00173E                     u7771:
  3203  00173E  EFB1  F00B         	goto	l7441
  3204  001742                     u7770:
  3205  001742  0100               	movlb	0	; () banked
  3206  001744  B1C4               	btfsc	efgtoa@d& (0+255),0,b
  3207  001746  EFA7  F00B         	goto	u7781
  3208  00174A  EFA9  F00B         	goto	u7780
  3209  00174E                     u7781:
  3210  00174E  EFB1  F00B         	goto	l7441
  3211  001752                     u7780:
  3212  001752                     
  3213                           ; BSR set to: 0
  3214                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3215  001752  0E00               	movlw	0
  3216  001754  6FD2               	movwf	efgtoa@l& (0+255),b
  3217  001756  0E00               	movlw	0
  3218  001758  6FD3               	movwf	(efgtoa@l+1)& (0+255),b
  3219  00175A  0E00               	movlw	0
  3220  00175C  6FD4               	movwf	(efgtoa@l+2)& (0+255),b
  3221  00175E  0E00               	movlw	0
  3222  001760  6FD5               	movwf	(efgtoa@l+3)& (0+255),b
  3223  001762                     l7441:
  3224                           
  3225                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3226  001762  C0D8  F005         	movff	efgtoa@g,___fladd@b
  3227  001766  C0D9  F006         	movff	efgtoa@g+1,___fladd@b+1
  3228  00176A  C0DA  F007         	movff	efgtoa@g+2,___fladd@b+2
  3229  00176E  C0DB  F008         	movff	efgtoa@g+3,___fladd@b+3
  3230  001772  C0D2  F009         	movff	efgtoa@l,___fladd@a
  3231  001776  C0D3  F00A         	movff	efgtoa@l+1,___fladd@a+1
  3232  00177A  C0D4  F00B         	movff	efgtoa@l+2,___fladd@a+2
  3233  00177E  C0D5  F00C         	movff	efgtoa@l+3,___fladd@a+3
  3234  001782  ECEB  F010         	call	___fladd	;wreg free
  3235  001786  C005  F0CE         	movff	?___fladd,efgtoa@h
  3236  00178A  C006  F0CF         	movff	?___fladd+1,efgtoa@h+1
  3237  00178E  C007  F0D0         	movff	?___fladd+2,efgtoa@h+2
  3238  001792  C008  F0D1         	movff	?___fladd+3,efgtoa@h+3
  3239  001796                     
  3240                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3241  001796  C0CE  F01E         	movff	efgtoa@h,___flge@ff1
  3242  00179A  C0CF  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  3243  00179E  C0D0  F020         	movff	efgtoa@h+2,___flge@ff1+2
  3244  0017A2  C0D1  F021         	movff	efgtoa@h+3,___flge@ff1+3
  3245  0017A6  0E00               	movlw	0
  3246  0017A8  6E09               	movwf	___flmul@a^0,c
  3247  0017AA  0E00               	movlw	0
  3248  0017AC  6E0A               	movwf	(___flmul@a+1)^0,c
  3249  0017AE  0E20               	movlw	32
  3250  0017B0  6E0B               	movwf	(___flmul@a+2)^0,c
  3251  0017B2  0E41               	movlw	65
  3252  0017B4  6E0C               	movwf	(___flmul@a+3)^0,c
  3253  0017B6  C0C0  F005         	movff	efgtoa@ou,___flmul@b
  3254  0017BA  C0C1  F006         	movff	efgtoa@ou+1,___flmul@b+1
  3255  0017BE  C0C2  F007         	movff	efgtoa@ou+2,___flmul@b+2
  3256  0017C2  C0C3  F008         	movff	efgtoa@ou+3,___flmul@b+3
  3257  0017C6  EC4B  F013         	call	___flmul	;wreg free
  3258  0017CA  C005  F022         	movff	?___flmul,___flge@ff2
  3259  0017CE  C006  F023         	movff	?___flmul+1,___flge@ff2+1
  3260  0017D2  C007  F024         	movff	?___flmul+2,___flge@ff2+2
  3261  0017D6  C008  F025         	movff	?___flmul+3,___flge@ff2+3
  3262  0017DA  EC4F  F01B         	call	___flge	;wreg free
  3263  0017DE  A0D8               	btfss	status,0,c
  3264  0017E0  EFF4  F00B         	goto	u7791
  3265  0017E4  EFF6  F00B         	goto	u7790
  3266  0017E8                     u7791:
  3267  0017E8  EF1F  F00C         	goto	l7453
  3268  0017EC                     u7790:
  3269  0017EC                     
  3270                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 454:   e++;
  3271  0017EC  0100               	movlb	0	; () banked
  3272  0017EE  4BDC               	infsnz	efgtoa@e& (0+255),f,b
  3273  0017F0  2BDD               	incf	(efgtoa@e+1)& (0+255),f,b
  3274  0017F2                     
  3275                           ; BSR set to: 0
  3276                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3277  0017F2  C0C0  F005         	movff	efgtoa@ou,___flmul@b
  3278  0017F6  C0C1  F006         	movff	efgtoa@ou+1,___flmul@b+1
  3279  0017FA  C0C2  F007         	movff	efgtoa@ou+2,___flmul@b+2
  3280  0017FE  C0C3  F008         	movff	efgtoa@ou+3,___flmul@b+3
  3281  001802  0E00               	movlw	0
  3282  001804  6E09               	movwf	___flmul@a^0,c
  3283  001806  0E00               	movlw	0
  3284  001808  6E0A               	movwf	(___flmul@a+1)^0,c
  3285  00180A  0E20               	movlw	32
  3286  00180C  6E0B               	movwf	(___flmul@a+2)^0,c
  3287  00180E  0E41               	movlw	65
  3288  001810  6E0C               	movwf	(___flmul@a+3)^0,c
  3289  001812  EC4B  F013         	call	___flmul	;wreg free
  3290  001816  C005  F0C0         	movff	?___flmul,efgtoa@ou
  3291  00181A  C006  F0C1         	movff	?___flmul+1,efgtoa@ou+1
  3292  00181E  C007  F0C2         	movff	?___flmul+2,efgtoa@ou+2
  3293  001822  C008  F0C3         	movff	?___flmul+3,efgtoa@ou+3
  3294  001826                     
  3295                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3296  001826  0E66               	movlw	102
  3297  001828  0100               	movlb	0	; () banked
  3298  00182A  19CC               	xorwf	efgtoa@nmode& (0+255),w,b
  3299  00182C  A4D8               	btfss	status,2,c
  3300  00182E  EF1B  F00C         	goto	u7801
  3301  001832  EF1D  F00C         	goto	u7800
  3302  001836                     u7801:
  3303  001836  EF1F  F00C         	goto	l7453
  3304  00183A                     u7800:
  3305  00183A                     
  3306                           ; BSR set to: 0
  3307                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 458:    m++;
  3308  00183A  4BBE               	infsnz	efgtoa@m& (0+255),f,b
  3309  00183C  2BBF               	incf	(efgtoa@m+1)& (0+255),f,b
  3310  00183E                     l7453:
  3311                           
  3312                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3313  00183E  C0C0  F0E0         	movff	efgtoa@ou,efgtoa@u
  3314  001842  C0C1  F0E1         	movff	efgtoa@ou+1,efgtoa@u+1
  3315  001846  C0C2  F0E2         	movff	efgtoa@ou+2,efgtoa@u+2
  3316  00184A  C0C3  F0E3         	movff	efgtoa@ou+3,efgtoa@u+3
  3317  00184E                     
  3318                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3319  00184E  0E65               	movlw	101
  3320  001850  0100               	movlb	0	; () banked
  3321  001852  19CC               	xorwf	efgtoa@nmode& (0+255),w,b
  3322  001854  B4D8               	btfsc	status,2,c
  3323  001856  EF2F  F00C         	goto	u7811
  3324  00185A  EF31  F00C         	goto	u7810
  3325  00185E                     u7811:
  3326  00185E  EF37  F00C         	goto	l7459
  3327  001862                     u7810:
  3328  001862                     
  3329                           ; BSR set to: 0
  3330  001862  C0DC  F0BC         	movff	efgtoa@e,efgtoa@ne
  3331  001866  C0DD  F0BD         	movff	efgtoa@e+1,efgtoa@ne+1
  3332  00186A  EF3B  F00C         	goto	l1578
  3333  00186E                     l7459:
  3334                           
  3335                           ; BSR set to: 0
  3336  00186E  0E00               	movlw	0
  3337  001870  6FBD               	movwf	(efgtoa@ne+1)& (0+255),b
  3338  001872  0E00               	movlw	0
  3339  001874  6FBC               	movwf	efgtoa@ne& (0+255),b
  3340  001876                     l1578:
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3344  001876  0E00               	movlw	0
  3345  001878  6FBB               	movwf	(efgtoa@pp+1)& (0+255),b
  3346  00187A  0E00               	movlw	0
  3347  00187C  6FBA               	movwf	efgtoa@pp& (0+255),b
  3348                           
  3349                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3350  00187E  0E00               	movlw	0
  3351  001880  6FB9               	movwf	(efgtoa@t+1)& (0+255),b
  3352  001882  0E00               	movlw	0
  3353  001884  6FB8               	movwf	efgtoa@t& (0+255),b
  3354                           
  3355                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3356  001886  0E00               	movlw	0
  3357  001888  6FD7               	movwf	(efgtoa@i+1)& (0+255),b
  3358  00188A  0E00               	movlw	0
  3359  00188C  6FD6               	movwf	efgtoa@i& (0+255),b
  3360                           
  3361                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3362  00188E  EF36  F00D         	goto	l7509
  3363  001892                     l7461:
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3367  001892  C0CE  F013         	movff	efgtoa@h,___fldiv@b
  3368  001896  C0CF  F014         	movff	efgtoa@h+1,___fldiv@b+1
  3369  00189A  C0D0  F015         	movff	efgtoa@h+2,___fldiv@b+2
  3370  00189E  C0D1  F016         	movff	efgtoa@h+3,___fldiv@b+3
  3371  0018A2  C0E0  F017         	movff	efgtoa@u,___fldiv@a
  3372  0018A6  C0E1  F018         	movff	efgtoa@u+1,___fldiv@a+1
  3373  0018AA  C0E2  F019         	movff	efgtoa@u+2,___fldiv@a+2
  3374  0018AE  C0E3  F01A         	movff	efgtoa@u+3,___fldiv@a+3
  3375  0018B2  EC60  F015         	call	___fldiv	;wreg free
  3376  0018B6  C013  F02C         	movff	?___fldiv,floorf@x
  3377  0018BA  C014  F02D         	movff	?___fldiv+1,floorf@x+1
  3378  0018BE  C015  F02E         	movff	?___fldiv+2,floorf@x+2
  3379  0018C2  C016  F02F         	movff	?___fldiv+3,floorf@x+3
  3380  0018C6  EC39  F018         	call	_floorf	;wreg free
  3381  0018CA  C02C  F0D2         	movff	?_floorf,efgtoa@l
  3382  0018CE  C02D  F0D3         	movff	?_floorf+1,efgtoa@l+1
  3383  0018D2  C02E  F0D4         	movff	?_floorf+2,efgtoa@l+2
  3384  0018D6  C02F  F0D5         	movff	?_floorf+3,efgtoa@l+3
  3385                           
  3386                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3387  0018DA  C0D2  F005         	movff	efgtoa@l,___fltol@f1
  3388  0018DE  C0D3  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3389  0018E2  C0D4  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3390  0018E6  C0D5  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3391  0018EA  ECCC  F01A         	call	___fltol	;wreg free
  3392  0018EE  C005  F0C4         	movff	?___fltol,efgtoa@d
  3393  0018F2  C006  F0C5         	movff	?___fltol+1,efgtoa@d+1
  3394  0018F6                     
  3395                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3396  0018F6  0100               	movlb	0	; () banked
  3397  0018F8  B9AE               	btfsc	_flags& (0+255),4,b
  3398  0018FA  EF81  F00C         	goto	u7821
  3399  0018FE  EF83  F00C         	goto	u7820
  3400  001902                     u7821:
  3401  001902  EFA0  F00C         	goto	l7473
  3402  001906                     u7820:
  3403  001906                     
  3404                           ; BSR set to: 0
  3405  001906  51C4               	movf	efgtoa@d& (0+255),w,b
  3406  001908  11C5               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3407  00190A  A4D8               	btfss	status,2,c
  3408  00190C  EF8A  F00C         	goto	u7831
  3409  001910  EF8C  F00C         	goto	u7830
  3410  001914                     u7831:
  3411  001914  EFA0  F00C         	goto	l7473
  3412  001918                     u7830:
  3413  001918                     
  3414                           ; BSR set to: 0
  3415  001918  0E67               	movlw	103
  3416  00191A  19CD               	xorwf	efgtoa@mode& (0+255),w,b
  3417  00191C  A4D8               	btfss	status,2,c
  3418  00191E  EF93  F00C         	goto	u7841
  3419  001922  EF95  F00C         	goto	u7840
  3420  001926                     u7841:
  3421  001926  EFA0  F00C         	goto	l7473
  3422  00192A                     u7840:
  3423  00192A                     
  3424                           ; BSR set to: 0
  3425  00192A  BFBD               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3426  00192C  EF9C  F00C         	goto	u7850
  3427  001930  EF9A  F00C         	goto	u7851
  3428  001934                     u7851:
  3429  001934  EFA0  F00C         	goto	l7473
  3430  001938                     u7850:
  3431  001938                     
  3432                           ; BSR set to: 0
  3433                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3434  001938  4BB8               	infsnz	efgtoa@t& (0+255),f,b
  3435  00193A  2BB9               	incf	(efgtoa@t+1)& (0+255),f,b
  3436                           
  3437                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3438  00193C  EFEA  F00C         	goto	l7501
  3439  001940                     l7473:
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3443  001940  51BA               	movf	efgtoa@pp& (0+255),w,b
  3444  001942  11BB               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3445  001944  A4D8               	btfss	status,2,c
  3446  001946  EFA7  F00C         	goto	u7861
  3447  00194A  EFA9  F00C         	goto	u7860
  3448  00194E                     u7861:
  3449  00194E  EFD3  F00C         	goto	l7493
  3450  001952                     u7860:
  3451  001952                     
  3452                           ; BSR set to: 0
  3453  001952  BFBD               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3454  001954  EFB0  F00C         	goto	u7870
  3455  001958  EFAE  F00C         	goto	u7871
  3456  00195C                     u7871:
  3457  00195C  EFD3  F00C         	goto	l7493
  3458  001960                     u7870:
  3459  001960                     
  3460                           ; BSR set to: 0
  3461                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3462  001960  0E00               	movlw	low _dbuf
  3463  001962  25DE               	addwf	efgtoa@n& (0+255),w,b
  3464  001964  6ED9               	movwf	fsr2l,c
  3465  001966  0E01               	movlw	high _dbuf
  3466  001968  21DF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3467  00196A  6EDA               	movwf	fsr2h,c
  3468  00196C  0E2E               	movlw	46
  3469  00196E  6EDF               	movwf	indf2,c
  3470  001970                     
  3471                           ; BSR set to: 0
  3472  001970  4BDE               	infsnz	efgtoa@n& (0+255),f,b
  3473  001972  2BDF               	incf	(efgtoa@n+1)& (0+255),f,b
  3474  001974                     
  3475                           ; BSR set to: 0
  3476                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3477  001974  07CA               	decf	efgtoa@w& (0+255),f,b
  3478  001976  A0D8               	btfss	status,0,c
  3479  001978  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  3480  00197A                     
  3481                           ; BSR set to: 0
  3482                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3483  00197A  0E00               	movlw	0
  3484  00197C  6FBB               	movwf	(efgtoa@pp+1)& (0+255),b
  3485  00197E  0E01               	movlw	1
  3486  001980  6FBA               	movwf	efgtoa@pp& (0+255),b
  3487  001982  EFD3  F00C         	goto	l7493
  3488  001986                     l7485:
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3492  001986  0E00               	movlw	low _dbuf
  3493  001988  25DE               	addwf	efgtoa@n& (0+255),w,b
  3494  00198A  6ED9               	movwf	fsr2l,c
  3495  00198C  0E01               	movlw	high _dbuf
  3496  00198E  21DF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3497  001990  6EDA               	movwf	fsr2h,c
  3498  001992  0E30               	movlw	48
  3499  001994  6EDF               	movwf	indf2,c
  3500  001996                     
  3501                           ; BSR set to: 0
  3502  001996  4BDE               	infsnz	efgtoa@n& (0+255),f,b
  3503  001998  2BDF               	incf	(efgtoa@n+1)& (0+255),f,b
  3504  00199A                     
  3505                           ; BSR set to: 0
  3506                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3507  00199A  07CA               	decf	efgtoa@w& (0+255),f,b
  3508  00199C  A0D8               	btfss	status,0,c
  3509  00199E  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  3510  0019A0                     
  3511                           ; BSR set to: 0
  3512                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3513  0019A0  07B8               	decf	efgtoa@t& (0+255),f,b
  3514  0019A2  A0D8               	btfss	status,0,c
  3515  0019A4  07B9               	decf	(efgtoa@t+1)& (0+255),f,b
  3516  0019A6                     l7493:
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3520  0019A6  51B8               	movf	efgtoa@t& (0+255),w,b
  3521  0019A8  11B9               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3522  0019AA  A4D8               	btfss	status,2,c
  3523  0019AC  EFDA  F00C         	goto	u7881
  3524  0019B0  EFDC  F00C         	goto	u7880
  3525  0019B4                     u7881:
  3526  0019B4  EFC3  F00C         	goto	l7485
  3527  0019B8                     u7880:
  3528  0019B8                     
  3529                           ; BSR set to: 0
  3530                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3531  0019B8  0E00               	movlw	low _dbuf
  3532  0019BA  25DE               	addwf	efgtoa@n& (0+255),w,b
  3533  0019BC  6ED9               	movwf	fsr2l,c
  3534  0019BE  0E01               	movlw	high _dbuf
  3535  0019C0  21DF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3536  0019C2  6EDA               	movwf	fsr2h,c
  3537  0019C4  51C4               	movf	efgtoa@d& (0+255),w,b
  3538  0019C6  0F30               	addlw	48
  3539  0019C8  6EDF               	movwf	indf2,c
  3540  0019CA                     
  3541                           ; BSR set to: 0
  3542  0019CA  4BDE               	infsnz	efgtoa@n& (0+255),f,b
  3543  0019CC  2BDF               	incf	(efgtoa@n+1)& (0+255),f,b
  3544  0019CE                     
  3545                           ; BSR set to: 0
  3546                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3547  0019CE  07CA               	decf	efgtoa@w& (0+255),f,b
  3548  0019D0  A0D8               	btfss	status,0,c
  3549  0019D2  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  3550  0019D4                     l7501:
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3554  0019D4  C0CE  F01E         	movff	efgtoa@h,___flsub@b
  3555  0019D8  C0CF  F01F         	movff	efgtoa@h+1,___flsub@b+1
  3556  0019DC  C0D0  F020         	movff	efgtoa@h+2,___flsub@b+2
  3557  0019E0  C0D1  F021         	movff	efgtoa@h+3,___flsub@b+3
  3558  0019E4  C0E0  F009         	movff	efgtoa@u,___flmul@a
  3559  0019E8  C0E1  F00A         	movff	efgtoa@u+1,___flmul@a+1
  3560  0019EC  C0E2  F00B         	movff	efgtoa@u+2,___flmul@a+2
  3561  0019F0  C0E3  F00C         	movff	efgtoa@u+3,___flmul@a+3
  3562  0019F4  C0D2  F005         	movff	efgtoa@l,___flmul@b
  3563  0019F8  C0D3  F006         	movff	efgtoa@l+1,___flmul@b+1
  3564  0019FC  C0D4  F007         	movff	efgtoa@l+2,___flmul@b+2
  3565  001A00  C0D5  F008         	movff	efgtoa@l+3,___flmul@b+3
  3566  001A04  EC4B  F013         	call	___flmul	;wreg free
  3567  001A08  C005  F022         	movff	?___flmul,___flsub@a
  3568  001A0C  C006  F023         	movff	?___flmul+1,___flsub@a+1
  3569  001A10  C007  F024         	movff	?___flmul+2,___flsub@a+2
  3570  001A14  C008  F025         	movff	?___flmul+3,___flsub@a+3
  3571  001A18  EC0B  F021         	call	___flsub	;wreg free
  3572  001A1C  C01E  F0CE         	movff	?___flsub,efgtoa@h
  3573  001A20  C01F  F0CF         	movff	?___flsub+1,efgtoa@h+1
  3574  001A24  C020  F0D0         	movff	?___flsub+2,efgtoa@h+2
  3575  001A28  C021  F0D1         	movff	?___flsub+3,efgtoa@h+3
  3576  001A2C                     
  3577                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3578  001A2C  C0E0  F013         	movff	efgtoa@u,___fldiv@b
  3579  001A30  C0E1  F014         	movff	efgtoa@u+1,___fldiv@b+1
  3580  001A34  C0E2  F015         	movff	efgtoa@u+2,___fldiv@b+2
  3581  001A38  C0E3  F016         	movff	efgtoa@u+3,___fldiv@b+3
  3582  001A3C  0E00               	movlw	0
  3583  001A3E  6E17               	movwf	___fldiv@a^0,c
  3584  001A40  0E00               	movlw	0
  3585  001A42  6E18               	movwf	(___fldiv@a+1)^0,c
  3586  001A44  0E20               	movlw	32
  3587  001A46  6E19               	movwf	(___fldiv@a+2)^0,c
  3588  001A48  0E41               	movlw	65
  3589  001A4A  6E1A               	movwf	(___fldiv@a+3)^0,c
  3590  001A4C  EC60  F015         	call	___fldiv	;wreg free
  3591  001A50  C013  F0E0         	movff	?___fldiv,efgtoa@u
  3592  001A54  C014  F0E1         	movff	?___fldiv+1,efgtoa@u+1
  3593  001A58  C015  F0E2         	movff	?___fldiv+2,efgtoa@u+2
  3594  001A5C  C016  F0E3         	movff	?___fldiv+3,efgtoa@u+3
  3595  001A60                     
  3596                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3597  001A60  0100               	movlb	0	; () banked
  3598  001A62  07BC               	decf	efgtoa@ne& (0+255),f,b
  3599  001A64  A0D8               	btfss	status,0,c
  3600  001A66  07BD               	decf	(efgtoa@ne+1)& (0+255),f,b
  3601  001A68                     
  3602                           ; BSR set to: 0
  3603                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3604  001A68  4BD6               	infsnz	efgtoa@i& (0+255),f,b
  3605  001A6A  2BD7               	incf	(efgtoa@i+1)& (0+255),f,b
  3606  001A6C                     l7509:
  3607                           
  3608                           ; BSR set to: 0
  3609                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3610  001A6C  51BE               	movf	efgtoa@m& (0+255),w,b
  3611  001A6E  5DD6               	subwf	efgtoa@i& (0+255),w,b
  3612  001A70  51D7               	movf	(efgtoa@i+1)& (0+255),w,b
  3613  001A72  0A80               	xorlw	128
  3614  001A74  6E47               	movwf	??_efgtoa^0,c
  3615  001A76  51BF               	movf	(efgtoa@m+1)& (0+255),w,b
  3616  001A78  0A80               	xorlw	128
  3617  001A7A  5847               	subwfb	??_efgtoa^0,w,c
  3618  001A7C  B0D8               	btfsc	status,0,c
  3619  001A7E  EF43  F00D         	goto	u7891
  3620  001A82  EF45  F00D         	goto	u7890
  3621  001A86                     u7891:
  3622  001A86  EF53  F00D         	goto	l7513
  3623  001A8A                     u7890:
  3624  001A8A                     
  3625                           ; BSR set to: 0
  3626  001A8A  BFDF               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3627  001A8C  EF51  F00D         	goto	u7901
  3628  001A90  51DF               	movf	(efgtoa@n+1)& (0+255),w,b
  3629  001A92  E109               	bnz	u7900
  3630  001A94  0E4B               	movlw	75
  3631  001A96  5DDE               	subwf	efgtoa@n& (0+255),w,b
  3632  001A98  A0D8               	btfss	status,0,c
  3633  001A9A  EF51  F00D         	goto	u7901
  3634  001A9E  EF53  F00D         	goto	u7900
  3635  001AA2                     u7901:
  3636  001AA2  EF49  F00C         	goto	l7461
  3637  001AA6                     u7900:
  3638  001AA6                     l7513:
  3639                           
  3640                           ; BSR set to: 0
  3641                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3642  001AA6  51BA               	movf	efgtoa@pp& (0+255),w,b
  3643  001AA8  11BB               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3644  001AAA  A4D8               	btfss	status,2,c
  3645  001AAC  EF5A  F00D         	goto	u7911
  3646  001AB0  EF5C  F00D         	goto	u7910
  3647  001AB4                     u7911:
  3648  001AB4  EF6D  F00D         	goto	l7521
  3649  001AB8                     u7910:
  3650  001AB8                     
  3651                           ; BSR set to: 0
  3652  001AB8  A9AE               	btfss	_flags& (0+255),4,b
  3653  001ABA  EF61  F00D         	goto	u7921
  3654  001ABE  EF63  F00D         	goto	u7920
  3655  001AC2                     u7921:
  3656  001AC2  EF6D  F00D         	goto	l7521
  3657  001AC6                     u7920:
  3658  001AC6                     
  3659                           ; BSR set to: 0
  3660                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3661  001AC6  0E00               	movlw	low _dbuf
  3662  001AC8  25DE               	addwf	efgtoa@n& (0+255),w,b
  3663  001ACA  6ED9               	movwf	fsr2l,c
  3664  001ACC  0E01               	movlw	high _dbuf
  3665  001ACE  21DF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3666  001AD0  6EDA               	movwf	fsr2h,c
  3667  001AD2  0E2E               	movlw	46
  3668  001AD4  6EDF               	movwf	indf2,c
  3669  001AD6                     
  3670                           ; BSR set to: 0
  3671  001AD6  4BDE               	infsnz	efgtoa@n& (0+255),f,b
  3672  001AD8  2BDF               	incf	(efgtoa@n+1)& (0+255),f,b
  3673  001ADA                     l7521:
  3674                           
  3675                           ; BSR set to: 0
  3676                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3677  001ADA  0E00               	movlw	low _dbuf
  3678  001ADC  25DE               	addwf	efgtoa@n& (0+255),w,b
  3679  001ADE  6ED9               	movwf	fsr2l,c
  3680  001AE0  0E01               	movlw	high _dbuf
  3681  001AE2  21DF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3682  001AE4  6EDA               	movwf	fsr2h,c
  3683  001AE6  0E00               	movlw	0
  3684  001AE8  6EDF               	movwf	indf2,c
  3685  001AEA                     
  3686                           ; BSR set to: 0
  3687                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3688  001AEA  0E65               	movlw	101
  3689  001AEC  19CC               	xorwf	efgtoa@nmode& (0+255),w,b
  3690  001AEE  A4D8               	btfss	status,2,c
  3691  001AF0  EF7C  F00D         	goto	u7931
  3692  001AF4  EF7E  F00D         	goto	u7930
  3693  001AF8                     u7931:
  3694  001AF8  EF41  F00E         	goto	l7581
  3695  001AFC                     u7930:
  3696  001AFC                     
  3697                           ; BSR set to: 0
  3698                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3699  001AFC  0E00               	movlw	0
  3700  001AFE  6FD7               	movwf	(efgtoa@i+1)& (0+255),b
  3701  001B00  0E4F               	movlw	79
  3702  001B02  6FD6               	movwf	efgtoa@i& (0+255),b
  3703  001B04                     
  3704                           ; BSR set to: 0
  3705                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3706  001B04  0E00               	movlw	low _dbuf
  3707  001B06  25D6               	addwf	efgtoa@i& (0+255),w,b
  3708  001B08  6ED9               	movwf	fsr2l,c
  3709  001B0A  0E01               	movlw	high _dbuf
  3710  001B0C  21D7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3711  001B0E  6EDA               	movwf	fsr2h,c
  3712  001B10  0E00               	movlw	0
  3713  001B12  6EDF               	movwf	indf2,c
  3714  001B14                     
  3715                           ; BSR set to: 0
  3716                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3717  001B14  0E00               	movlw	0
  3718  001B16  6FC7               	movwf	(efgtoa@sign+1)& (0+255),b
  3719  001B18  0E00               	movlw	0
  3720  001B1A  6FC6               	movwf	efgtoa@sign& (0+255),b
  3721  001B1C                     
  3722                           ; BSR set to: 0
  3723                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3724  001B1C  BFDD               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3725  001B1E  EF95  F00D         	goto	u7940
  3726  001B22  EF93  F00D         	goto	u7941
  3727  001B26                     u7941:
  3728  001B26  EF9D  F00D         	goto	l7537
  3729  001B2A                     u7940:
  3730  001B2A                     
  3731                           ; BSR set to: 0
  3732                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3733  001B2A  0E00               	movlw	0
  3734  001B2C  6FC7               	movwf	(efgtoa@sign+1)& (0+255),b
  3735  001B2E  0E01               	movlw	1
  3736  001B30  6FC6               	movwf	efgtoa@sign& (0+255),b
  3737  001B32                     
  3738                           ; BSR set to: 0
  3739                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3740  001B32  6DDC               	negf	efgtoa@e& (0+255),b
  3741  001B34  1FDD               	comf	(efgtoa@e+1)& (0+255),f,b
  3742  001B36  B0D8               	btfsc	status,0,c
  3743  001B38  2BDD               	incf	(efgtoa@e+1)& (0+255),f,b
  3744  001B3A                     l7537:
  3745                           
  3746                           ; BSR set to: 0
  3747                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3748  001B3A  0E00               	movlw	0
  3749  001B3C  6FC9               	movwf	(efgtoa@p+1)& (0+255),b
  3750  001B3E  0E02               	movlw	2
  3751  001B40  6FC8               	movwf	efgtoa@p& (0+255),b
  3752                           
  3753                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3754  001B42  EFCE  F00D         	goto	l7549
  3755  001B46                     l7539:
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3759  001B46  07D6               	decf	efgtoa@i& (0+255),f,b
  3760  001B48  A0D8               	btfss	status,0,c
  3761  001B4A  07D7               	decf	(efgtoa@i+1)& (0+255),f,b
  3762  001B4C                     
  3763                           ; BSR set to: 0
  3764                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3765  001B4C  0E00               	movlw	low _dbuf
  3766  001B4E  25D6               	addwf	efgtoa@i& (0+255),w,b
  3767  001B50  6ED9               	movwf	fsr2l,c
  3768  001B52  0E01               	movlw	high _dbuf
  3769  001B54  21D7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3770  001B56  6EDA               	movwf	fsr2h,c
  3771  001B58  C0DC  F005         	movff	efgtoa@e,___awmod@dividend
  3772  001B5C  C0DD  F006         	movff	efgtoa@e+1,___awmod@dividend+1
  3773  001B60  0E00               	movlw	0
  3774  001B62  6E08               	movwf	(___awmod@divisor+1)^0,c
  3775  001B64  0E0A               	movlw	10
  3776  001B66  6E07               	movwf	___awmod@divisor^0,c
  3777  001B68  EC4C  F01E         	call	___awmod	;wreg free
  3778  001B6C  5005               	movf	?___awmod^0,w,c
  3779  001B6E  0F30               	addlw	48
  3780  001B70  6EDF               	movwf	indf2,c
  3781  001B72                     
  3782                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3783  001B72  C0DC  F005         	movff	efgtoa@e,___awdiv@dividend
  3784  001B76  C0DD  F006         	movff	efgtoa@e+1,___awdiv@dividend+1
  3785  001B7A  0E00               	movlw	0
  3786  001B7C  6E08               	movwf	(___awdiv@divisor+1)^0,c
  3787  001B7E  0E0A               	movlw	10
  3788  001B80  6E07               	movwf	___awdiv@divisor^0,c
  3789  001B82  EC8A  F01D         	call	___awdiv	;wreg free
  3790  001B86  C005  F0DC         	movff	?___awdiv,efgtoa@e
  3791  001B8A  C006  F0DD         	movff	?___awdiv+1,efgtoa@e+1
  3792  001B8E                     
  3793                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3794  001B8E  0100               	movlb	0	; () banked
  3795  001B90  07C8               	decf	efgtoa@p& (0+255),f,b
  3796  001B92  A0D8               	btfss	status,0,c
  3797  001B94  07C9               	decf	(efgtoa@p+1)& (0+255),f,b
  3798  001B96                     
  3799                           ; BSR set to: 0
  3800                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3801  001B96  07CA               	decf	efgtoa@w& (0+255),f,b
  3802  001B98  A0D8               	btfss	status,0,c
  3803  001B9A  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  3804  001B9C                     l7549:
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3808  001B9C  51DC               	movf	efgtoa@e& (0+255),w,b
  3809  001B9E  11DD               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3810  001BA0  A4D8               	btfss	status,2,c
  3811  001BA2  EFD5  F00D         	goto	u7951
  3812  001BA6  EFD7  F00D         	goto	u7950
  3813  001BAA                     u7951:
  3814  001BAA  EFA3  F00D         	goto	l7539
  3815  001BAE                     u7950:
  3816  001BAE                     
  3817                           ; BSR set to: 0
  3818  001BAE  BFC9               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3819  001BB0  EFE4  F00D         	goto	u7960
  3820  001BB4  51C9               	movf	(efgtoa@p+1)& (0+255),w,b
  3821  001BB6  E106               	bnz	u7961
  3822  001BB8  05C8               	decf	efgtoa@p& (0+255),w,b
  3823  001BBA  B0D8               	btfsc	status,0,c
  3824  001BBC  EFE2  F00D         	goto	u7961
  3825  001BC0  EFE4  F00D         	goto	u7960
  3826  001BC4                     u7961:
  3827  001BC4  EFA3  F00D         	goto	l7539
  3828  001BC8                     u7960:
  3829  001BC8                     
  3830                           ; BSR set to: 0
  3831                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 514:         --i;
  3832  001BC8  07D6               	decf	efgtoa@i& (0+255),f,b
  3833  001BCA  A0D8               	btfss	status,0,c
  3834  001BCC  07D7               	decf	(efgtoa@i+1)& (0+255),f,b
  3835  001BCE                     
  3836                           ; BSR set to: 0
  3837                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3838  001BCE  51C6               	movf	efgtoa@sign& (0+255),w,b
  3839  001BD0  11C7               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3840  001BD2  A4D8               	btfss	status,2,c
  3841  001BD4  EFEE  F00D         	goto	u7971
  3842  001BD8  EFF0  F00D         	goto	u7970
  3843  001BDC                     u7971:
  3844  001BDC  EFF6  F00D         	goto	l7559
  3845  001BE0                     u7970:
  3846  001BE0                     
  3847                           ; BSR set to: 0
  3848  001BE0  0E00               	movlw	0
  3849  001BE2  6FB5               	movwf	(_efgtoa$2341+1)& (0+255),b
  3850  001BE4  0E2B               	movlw	43
  3851  001BE6  6FB4               	movwf	_efgtoa$2341& (0+255),b
  3852  001BE8  EFFA  F00D         	goto	l7561
  3853  001BEC                     l7559:
  3854                           
  3855                           ; BSR set to: 0
  3856  001BEC  0E00               	movlw	0
  3857  001BEE  6FB5               	movwf	(_efgtoa$2341+1)& (0+255),b
  3858  001BF0  0E2D               	movlw	45
  3859  001BF2  6FB4               	movwf	_efgtoa$2341& (0+255),b
  3860  001BF4                     l7561:
  3861                           
  3862                           ; BSR set to: 0
  3863  001BF4  0E00               	movlw	low _dbuf
  3864  001BF6  25D6               	addwf	efgtoa@i& (0+255),w,b
  3865  001BF8  6ED9               	movwf	fsr2l,c
  3866  001BFA  0E01               	movlw	high _dbuf
  3867  001BFC  21D7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3868  001BFE  6EDA               	movwf	fsr2h,c
  3869  001C00  C0B4  FFDF         	movff	_efgtoa$2341,indf2
  3870  001C04                     
  3871                           ; BSR set to: 0
  3872                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 516:         --w;
  3873  001C04  07CA               	decf	efgtoa@w& (0+255),f,b
  3874  001C06  A0D8               	btfss	status,0,c
  3875  001C08  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  3876  001C0A                     
  3877                           ; BSR set to: 0
  3878                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 517:         --i;
  3879  001C0A  07D6               	decf	efgtoa@i& (0+255),f,b
  3880  001C0C  A0D8               	btfss	status,0,c
  3881  001C0E  07D7               	decf	(efgtoa@i+1)& (0+255),f,b
  3882  001C10                     
  3883                           ; BSR set to: 0
  3884  001C10  0EBF               	movlw	191
  3885  001C12  6E47               	movwf	??_efgtoa^0,c
  3886  001C14  0EFF               	movlw	255
  3887  001C16  6E48               	movwf	(??_efgtoa+1)^0,c
  3888  001C18  5046               	movf	efgtoa@c^0,w,c
  3889  001C1A  6E49               	movwf	(??_efgtoa+2)^0,c
  3890  001C1C  6A4A               	clrf	(??_efgtoa+3)^0,c
  3891  001C1E  5047               	movf	??_efgtoa^0,w,c
  3892  001C20  2649               	addwf	(??_efgtoa+2)^0,f,c
  3893  001C22  5048               	movf	(??_efgtoa+1)^0,w,c
  3894  001C24  224A               	addwfc	(??_efgtoa+3)^0,f,c
  3895  001C26  504A               	movf	(??_efgtoa+3)^0,w,c
  3896  001C28  E109               	bnz	u7980
  3897  001C2A  0E1A               	movlw	26
  3898  001C2C  5C49               	subwf	(??_efgtoa+2)^0,w,c
  3899  001C2E  A0D8               	btfss	status,0,c
  3900  001C30  EF1C  F00E         	goto	u7981
  3901  001C34  EF1E  F00E         	goto	u7980
  3902  001C38                     u7981:
  3903  001C38  EF24  F00E         	goto	l7573
  3904  001C3C                     u7980:
  3905  001C3C                     
  3906                           ; BSR set to: 0
  3907  001C3C  0E00               	movlw	0
  3908  001C3E  6FB7               	movwf	(_efgtoa$2342+1)& (0+255),b
  3909  001C40  0E65               	movlw	101
  3910  001C42  6FB6               	movwf	_efgtoa$2342& (0+255),b
  3911  001C44  EF28  F00E         	goto	l7575
  3912  001C48                     l7573:
  3913                           
  3914                           ; BSR set to: 0
  3915  001C48  0E00               	movlw	0
  3916  001C4A  6FB7               	movwf	(_efgtoa$2342+1)& (0+255),b
  3917  001C4C  0E45               	movlw	69
  3918  001C4E  6FB6               	movwf	_efgtoa$2342& (0+255),b
  3919  001C50                     l7575:
  3920                           
  3921                           ; BSR set to: 0
  3922  001C50  0E00               	movlw	low _dbuf
  3923  001C52  25D6               	addwf	efgtoa@i& (0+255),w,b
  3924  001C54  6ED9               	movwf	fsr2l,c
  3925  001C56  0E01               	movlw	high _dbuf
  3926  001C58  21D7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3927  001C5A  6EDA               	movwf	fsr2h,c
  3928  001C5C  C0B6  FFDF         	movff	_efgtoa$2342,indf2
  3929  001C60                     
  3930                           ; BSR set to: 0
  3931                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 519:         --w;
  3932  001C60  07CA               	decf	efgtoa@w& (0+255),f,b
  3933  001C62  A0D8               	btfss	status,0,c
  3934  001C64  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  3935  001C66                     
  3936                           ; BSR set to: 0
  3937                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  3938  001C66  0E00               	movlw	low _dbuf
  3939  001C68  25DE               	addwf	efgtoa@n& (0+255),w,b
  3940  001C6A  6E05               	movwf	strcpy@dest^0,c
  3941  001C6C  0E01               	movlw	high _dbuf
  3942  001C6E  21DF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3943  001C70  6E06               	movwf	(strcpy@dest+1)^0,c
  3944  001C72  0E00               	movlw	low _dbuf
  3945  001C74  25D6               	addwf	efgtoa@i& (0+255),w,b
  3946  001C76  6E07               	movwf	strcpy@src^0,c
  3947  001C78  0E01               	movlw	high _dbuf
  3948  001C7A  21D7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3949  001C7C  6E08               	movwf	(strcpy@src+1)^0,c
  3950  001C7E  ECF0  F01F         	call	_strcpy	;wreg free
  3951  001C82                     l7581:
  3952                           
  3953                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  3954  001C82  C040  F017         	movff	efgtoa@fp,pad@fp
  3955  001C86  C041  F018         	movff	efgtoa@fp+1,pad@fp+1
  3956  001C8A  0E00               	movlw	low _dbuf
  3957  001C8C  6E19               	movwf	pad@buf^0,c
  3958  001C8E  0E01               	movlw	high _dbuf
  3959  001C90  6E1A               	movwf	(pad@buf+1)^0,c
  3960  001C92  C0CA  F01B         	movff	efgtoa@w,pad@p
  3961  001C96  C0CB  F01C         	movff	efgtoa@w+1,pad@p+1
  3962  001C9A  EC27  F01D         	call	_pad	;wreg free
  3963  001C9E  C017  F040         	movff	?_pad,?_efgtoa
  3964  001CA2  C018  F041         	movff	?_pad+1,?_efgtoa+1
  3965  001CA6                     l1534:
  3966  001CA6  0012               	return		;funcret
  3967  001CA8                     __end_of_efgtoa:
  3968                           	callstack 0
  3969                           
  3970 ;; *************** function _tolower *****************
  3971 ;; Defined at:
  3972 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\tolower.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;  c               2   10[COMRAM] int 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;		None
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  2   10[COMRAM] int 
  3979 ;; Registers used:
  3980 ;;		wreg, status,2, status,0
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3986 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3988 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3989 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;Total ram usage:        6 bytes
  3991 ;; Hardware stack levels used: 1
  3992 ;; Hardware stack levels required when called: 5
  3993 ;; This function calls:
  3994 ;;		_isupper
  3995 ;; This function is called by:
  3996 ;;		_efgtoa
  3997 ;;		_vfpfcnvrt
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001                           	psect	text6
  4002  0041D0                     __ptext6:
  4003                           	callstack 0
  4004  0041D0                     _tolower:
  4005                           	callstack 22
  4006  0041D0  0EBF               	movlw	191
  4007  0041D2  6E0D               	movwf	??_tolower^0,c
  4008  0041D4  0EFF               	movlw	255
  4009  0041D6  6E0E               	movwf	(??_tolower+1)^0,c
  4010  0041D8  C00B  F00F         	movff	tolower@c,??_tolower+2
  4011  0041DC  C00C  F010         	movff	tolower@c+1,??_tolower+3
  4012  0041E0  500D               	movf	??_tolower^0,w,c
  4013  0041E2  260F               	addwf	(??_tolower+2)^0,f,c
  4014  0041E4  500E               	movf	(??_tolower+1)^0,w,c
  4015  0041E6  2210               	addwfc	(??_tolower+3)^0,f,c
  4016  0041E8  5010               	movf	(??_tolower+3)^0,w,c
  4017  0041EA  E107               	bnz	u7361
  4018  0041EC  0E1A               	movlw	26
  4019  0041EE  5C0F               	subwf	(??_tolower+2)^0,w,c
  4020  0041F0  B0D8               	btfsc	status,0,c
  4021  0041F2  EFFD  F020         	goto	u7361
  4022  0041F6  EFFF  F020         	goto	u7360
  4023  0041FA                     u7361:
  4024  0041FA  EF06  F021         	goto	l1759
  4025  0041FE                     u7360:
  4026  0041FE  0E20               	movlw	32
  4027  004200  100B               	iorwf	tolower@c^0,w,c
  4028  004202  6E0B               	movwf	?_tolower^0,c
  4029  004204  500C               	movf	(tolower@c+1)^0,w,c
  4030  004206  6E0C               	movwf	(?_tolower+1)^0,c
  4031  004208  EF0A  F021         	goto	l1762
  4032  00420C                     l1759:
  4033  00420C  C00B  F00B         	movff	tolower@c,?_tolower
  4034  004210  C00C  F00C         	movff	tolower@c+1,?_tolower+1
  4035  004214                     l1762:
  4036  004214  0012               	return		;funcret
  4037  004216                     __end_of_tolower:
  4038                           	callstack 0
  4039                           
  4040 ;; *************** function _isupper *****************
  4041 ;; Defined at:
  4042 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\isupper.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;  c               2    4[COMRAM] int 
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;		None
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  2    4[COMRAM] int 
  4049 ;; Registers used:
  4050 ;;		wreg, status,2, status,0
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4056 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4058 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4059 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4060 ;;Total ram usage:        6 bytes
  4061 ;; Hardware stack levels used: 1
  4062 ;; Hardware stack levels required when called: 4
  4063 ;; This function calls:
  4064 ;;		Nothing
  4065 ;; This function is called by:
  4066 ;;		_efgtoa
  4067 ;;		_vfpfcnvrt
  4068 ;;		_tolower
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           	psect	text7
  4073  004322                     __ptext7:
  4074                           	callstack 0
  4075  004322                     _isupper:
  4076                           	callstack 22
  4077  004322  0EBF               	movlw	191
  4078  004324  6E07               	movwf	??_isupper^0,c
  4079  004326  0EFF               	movlw	255
  4080  004328  6E08               	movwf	(??_isupper+1)^0,c
  4081  00432A  C005  F009         	movff	isupper@c,??_isupper+2
  4082  00432E  C006  F00A         	movff	isupper@c+1,??_isupper+3
  4083  004332  5007               	movf	??_isupper^0,w,c
  4084  004334  2609               	addwf	(??_isupper+2)^0,f,c
  4085  004336  5008               	movf	(??_isupper+1)^0,w,c
  4086  004338  220A               	addwfc	(??_isupper+3)^0,f,c
  4087  00433A  500A               	movf	(??_isupper+3)^0,w,c
  4088  00433C  E10A               	bnz	u6510
  4089  00433E  0E1A               	movlw	26
  4090  004340  5C09               	subwf	(??_isupper+2)^0,w,c
  4091  004342  A0D8               	btfss	status,0,c
  4092  004344  EFA6  F021         	goto	u6511
  4093  004348  EFA9  F021         	goto	u6510
  4094  00434C                     u6511:
  4095  00434C  0E01               	movlw	1
  4096  00434E  EFAA  F021         	goto	u6520
  4097  004352                     u6510:
  4098  004352  0E00               	movlw	0
  4099  004354                     u6520:
  4100  004354  6E05               	movwf	?_isupper^0,c
  4101  004356  6A06               	clrf	(?_isupper+1)^0,c
  4102  004358  0012               	return		;funcret
  4103  00435A                     __end_of_isupper:
  4104                           	callstack 0
  4105                           
  4106 ;; *************** function _strcpy *****************
  4107 ;; Defined at:
  4108 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strcpy.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;  dest            2    4[COMRAM] PTR unsigned char 
  4111 ;;		 -> dbuf(80), 
  4112 ;;  src             2    6[COMRAM] PTR const unsigned char 
  4113 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4114 ;;		 -> dbuf(80), 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;  d               2   12[COMRAM] PTR unsigned char 
  4117 ;;		 -> dbuf(80), 
  4118 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4119 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4120 ;;		 -> dbuf(80), 
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  2    4[COMRAM] PTR unsigned char 
  4123 ;; Registers used:
  4124 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4130 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4131 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4132 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4133 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4134 ;;Total ram usage:       10 bytes
  4135 ;; Hardware stack levels used: 1
  4136 ;; Hardware stack levels required when called: 4
  4137 ;; This function calls:
  4138 ;;		Nothing
  4139 ;; This function is called by:
  4140 ;;		_efgtoa
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           	psect	text8
  4145  003FE0                     __ptext8:
  4146                           	callstack 0
  4147  003FE0                     _strcpy:
  4148                           	callstack 22
  4149  003FE0  C007  F00B         	movff	strcpy@src,strcpy@s
  4150  003FE4  C008  F00C         	movff	strcpy@src+1,strcpy@s+1
  4151  003FE8  C005  F00D         	movff	strcpy@dest,strcpy@d
  4152  003FEC  C006  F00E         	movff	strcpy@dest+1,strcpy@d+1
  4153  003FF0                     l7223:
  4154  003FF0  500B               	movf	strcpy@s^0,w,c
  4155  003FF2  6E09               	movwf	??_strcpy^0,c
  4156  003FF4  500C               	movf	(strcpy@s+1)^0,w,c
  4157  003FF6  6E0A               	movwf	(??_strcpy+1)^0,c
  4158  003FF8  4A0B               	infsnz	strcpy@s^0,f,c
  4159  003FFA  2A0C               	incf	(strcpy@s+1)^0,f,c
  4160  003FFC  C009  FFF6         	movff	??_strcpy,tblptrl
  4161  004000  C00A  FFF7         	movff	??_strcpy+1,tblptrh
  4162  004004  0E00               	movlw	low (__smallconst shr (0+16))
  4163  004006  6EF8               	movwf	tblptru,c
  4164  004008  C00D  FFD9         	movff	strcpy@d,fsr2l
  4165  00400C  C00E  FFDA         	movff	strcpy@d+1,fsr2h
  4166  004010  4A0D               	infsnz	strcpy@d^0,f,c
  4167  004012  2A0E               	incf	(strcpy@d+1)^0,f,c
  4168  004014  0E0F               	movlw	(high __ramtop+-1)
  4169  004016  64F7               	cpfsgt	tblptrh,c
  4170  004018  D003               	bra	u7347
  4171  00401A  0008               	tblrd		*
  4172  00401C  50F5               	movf	tablat,w,c
  4173  00401E  D005               	bra	u7340
  4174  004020                     u7347:
  4175  004020  CFF6 FFE9          	movff	tblptrl,fsr0l
  4176  004024  CFF7 FFEA          	movff	tblptrh,fsr0h
  4177  004028  50EF               	movf	indf0,w,c
  4178  00402A                     u7340:
  4179  00402A  6EDF               	movwf	indf2,c
  4180  00402C  50DF               	movf	indf2,w,c
  4181  00402E  A4D8               	btfss	status,2,c
  4182  004030  EF1C  F020         	goto	u7351
  4183  004034  EF1E  F020         	goto	u7350
  4184  004038                     u7351:
  4185  004038  EFF8  F01F         	goto	l7223
  4186  00403C                     u7350:
  4187  00403C  0012               	return		;funcret
  4188  00403E                     __end_of_strcpy:
  4189                           	callstack 0
  4190                           
  4191 ;; *************** function _pad *****************
  4192 ;; Defined at:
  4193 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4196 ;;		 -> NULL(0), 
  4197 ;;  buf             2   24[COMRAM] PTR unsigned char 
  4198 ;;		 -> dbuf(80), 
  4199 ;;  p               2   26[COMRAM] int 
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;  w               2   31[COMRAM] int 
  4202 ;;  i               2   29[COMRAM] int 
  4203 ;; Return value:  Size  Location     Type
  4204 ;;                  2   22[COMRAM] int 
  4205 ;; Registers used:
  4206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4212 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4215 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4216 ;;Total ram usage:       11 bytes
  4217 ;; Hardware stack levels used: 1
  4218 ;; Hardware stack levels required when called: 8
  4219 ;; This function calls:
  4220 ;;		_fputc
  4221 ;;		_fputs
  4222 ;;		_strlen
  4223 ;; This function is called by:
  4224 ;;		_efgtoa
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           	psect	text9
  4229  003A4E                     __ptext9:
  4230                           	callstack 0
  4231  003A4E                     _pad:
  4232                           	callstack 18
  4233  003A4E                     
  4234                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4235  003A4E  0100               	movlb	0	; () banked
  4236  003A50  A1AE               	btfss	_flags& (0+255),0,b
  4237  003A52  EF2D  F01D         	goto	u7231
  4238  003A56  EF2F  F01D         	goto	u7230
  4239  003A5A                     u7231:
  4240  003A5A  EF39  F01D         	goto	l7181
  4241  003A5E                     u7230:
  4242  003A5E                     
  4243                           ; BSR set to: 0
  4244                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4245  003A5E  C019  F010         	movff	pad@buf,fputs@s
  4246  003A62  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4247  003A66  C017  F012         	movff	pad@fp,fputs@fp
  4248  003A6A  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4249  003A6E  EC2E  F021         	call	_fputs	;wreg free
  4250  003A72                     l7181:
  4251                           
  4252                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4253  003A72  BE1C               	btfsc	(pad@p+1)^0,7,c
  4254  003A74  EF3E  F01D         	goto	u7241
  4255  003A78  EF40  F01D         	goto	u7240
  4256  003A7C                     u7241:
  4257  003A7C  EF46  F01D         	goto	l7185
  4258  003A80                     u7240:
  4259  003A80  C01B  F020         	movff	pad@p,pad@w
  4260  003A84  C01C  F021         	movff	pad@p+1,pad@w+1
  4261  003A88  EF4A  F01D         	goto	l1513
  4262  003A8C                     l7185:
  4263  003A8C  0E00               	movlw	0
  4264  003A8E  6E21               	movwf	(pad@w+1)^0,c
  4265  003A90  0E00               	movlw	0
  4266  003A92  6E20               	movwf	pad@w^0,c
  4267  003A94                     l1513:
  4268                           
  4269                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4270  003A94  0E00               	movlw	0
  4271  003A96  6E1F               	movwf	(pad@i+1)^0,c
  4272  003A98  0E00               	movlw	0
  4273  003A9A  6E1E               	movwf	pad@i^0,c
  4274                           
  4275                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4276  003A9C  EF5C  F01D         	goto	l7191
  4277  003AA0                     l7187:
  4278                           
  4279                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4280  003AA0  0E00               	movlw	0
  4281  003AA2  6E08               	movwf	(fputc@c+1)^0,c
  4282  003AA4  0E20               	movlw	32
  4283  003AA6  6E07               	movwf	fputc@c^0,c
  4284  003AA8  C017  F009         	movff	pad@fp,fputc@fp
  4285  003AAC  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  4286  003AB0  ECF9  F01E         	call	_fputc	;wreg free
  4287  003AB4                     
  4288                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4289  003AB4  4A1E               	infsnz	pad@i^0,f,c
  4290  003AB6  2A1F               	incf	(pad@i+1)^0,f,c
  4291  003AB8                     l7191:
  4292                           
  4293                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4294  003AB8  5020               	movf	pad@w^0,w,c
  4295  003ABA  5C1E               	subwf	pad@i^0,w,c
  4296  003ABC  501F               	movf	(pad@i+1)^0,w,c
  4297  003ABE  0A80               	xorlw	128
  4298  003AC0  6E1D               	movwf	??_pad^0,c
  4299  003AC2  5021               	movf	(pad@w+1)^0,w,c
  4300  003AC4  0A80               	xorlw	128
  4301  003AC6  581D               	subwfb	??_pad^0,w,c
  4302  003AC8  A0D8               	btfss	status,0,c
  4303  003ACA  EF69  F01D         	goto	u7251
  4304  003ACE  EF6B  F01D         	goto	u7250
  4305  003AD2                     u7251:
  4306  003AD2  EF50  F01D         	goto	l7187
  4307  003AD6                     u7250:
  4308  003AD6                     
  4309                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4310  003AD6  0100               	movlb	0	; () banked
  4311  003AD8  B1AE               	btfsc	_flags& (0+255),0,b
  4312  003ADA  EF71  F01D         	goto	u7261
  4313  003ADE  EF73  F01D         	goto	u7260
  4314  003AE2                     u7261:
  4315  003AE2  EF7D  F01D         	goto	l7195
  4316  003AE6                     u7260:
  4317  003AE6                     
  4318                           ; BSR set to: 0
  4319                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4320  003AE6  C019  F010         	movff	pad@buf,fputs@s
  4321  003AEA  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4322  003AEE  C017  F012         	movff	pad@fp,fputs@fp
  4323  003AF2  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4324  003AF6  EC2E  F021         	call	_fputs	;wreg free
  4325  003AFA                     l7195:
  4326                           
  4327                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4328  003AFA  C019  F005         	movff	pad@buf,strlen@s
  4329  003AFE  C01A  F006         	movff	pad@buf+1,strlen@s+1
  4330  003B02  EC01  F022         	call	_strlen	;wreg free
  4331  003B06  5020               	movf	pad@w^0,w,c
  4332  003B08  2405               	addwf	?_strlen^0,w,c
  4333  003B0A  6E17               	movwf	?_pad^0,c
  4334  003B0C  5021               	movf	(pad@w+1)^0,w,c
  4335  003B0E  2006               	addwfc	(?_strlen+1)^0,w,c
  4336  003B10  6E18               	movwf	(?_pad+1)^0,c
  4337  003B12  0012               	return		;funcret
  4338  003B14                     __end_of_pad:
  4339                           	callstack 0
  4340                           
  4341 ;; *************** function _strlen *****************
  4342 ;; Defined at:
  4343 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4346 ;;		 -> dbuf(80), 
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4349 ;;		 -> dbuf(80), 
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  2    4[COMRAM] unsigned int 
  4352 ;; Registers used:
  4353 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4360 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4362 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4363 ;;Total ram usage:        4 bytes
  4364 ;; Hardware stack levels used: 1
  4365 ;; Hardware stack levels required when called: 4
  4366 ;; This function calls:
  4367 ;;		Nothing
  4368 ;; This function is called by:
  4369 ;;		_pad
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text10
  4374  004402                     __ptext10:
  4375                           	callstack 0
  4376  004402                     _strlen:
  4377                           	callstack 21
  4378  004402  C005  F007         	movff	strlen@s,strlen@a
  4379  004406  C006  F008         	movff	strlen@s+1,strlen@a+1
  4380  00440A  EF09  F022         	goto	l6717
  4381  00440E                     l6715:
  4382  00440E  4A05               	infsnz	strlen@s^0,f,c
  4383  004410  2A06               	incf	(strlen@s+1)^0,f,c
  4384  004412                     l6717:
  4385  004412  C005  FFD9         	movff	strlen@s,fsr2l
  4386  004416  C006  FFDA         	movff	strlen@s+1,fsr2h
  4387  00441A  50DF               	movf	indf2,w,c
  4388  00441C  A4D8               	btfss	status,2,c
  4389  00441E  EF13  F022         	goto	u6501
  4390  004422  EF15  F022         	goto	u6500
  4391  004426                     u6501:
  4392  004426  EF07  F022         	goto	l6715
  4393  00442A                     u6500:
  4394  00442A  5007               	movf	strlen@a^0,w,c
  4395  00442C  5C05               	subwf	strlen@s^0,w,c
  4396  00442E  6E05               	movwf	?_strlen^0,c
  4397  004430  5008               	movf	(strlen@a+1)^0,w,c
  4398  004432  5806               	subwfb	(strlen@s+1)^0,w,c
  4399  004434  6E06               	movwf	(?_strlen+1)^0,c
  4400  004436  0012               	return		;funcret
  4401  004438                     __end_of_strlen:
  4402                           	callstack 0
  4403                           
  4404 ;; *************** function _fputs *****************
  4405 ;; Defined at:
  4406 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4409 ;;		 -> dbuf(80), 
  4410 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4411 ;;		 -> NULL(0), 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;  i               2   20[COMRAM] int 
  4414 ;;  c               1   19[COMRAM] unsigned char 
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  2   15[COMRAM] int 
  4417 ;; Registers used:
  4418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4424 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4425 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4428 ;;Total ram usage:        7 bytes
  4429 ;; Hardware stack levels used: 1
  4430 ;; Hardware stack levels required when called: 7
  4431 ;; This function calls:
  4432 ;;		_fputc
  4433 ;; This function is called by:
  4434 ;;		_pad
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text11
  4439  00425C                     __ptext11:
  4440                           	callstack 0
  4441  00425C                     _fputs:
  4442                           	callstack 18
  4443  00425C  0E00               	movlw	0
  4444  00425E  6E16               	movwf	(fputs@i+1)^0,c
  4445  004260  0E00               	movlw	0
  4446  004262  6E15               	movwf	fputs@i^0,c
  4447  004264  EF3F  F021         	goto	l6711
  4448  004268                     l6707:
  4449  004268  C014  F007         	movff	fputs@c,fputc@c
  4450  00426C  6A08               	clrf	(fputc@c+1)^0,c
  4451  00426E  C012  F009         	movff	fputs@fp,fputc@fp
  4452  004272  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  4453  004276  ECF9  F01E         	call	_fputc	;wreg free
  4454  00427A  4A15               	infsnz	fputs@i^0,f,c
  4455  00427C  2A16               	incf	(fputs@i+1)^0,f,c
  4456  00427E                     l6711:
  4457  00427E  5015               	movf	fputs@i^0,w,c
  4458  004280  2410               	addwf	fputs@s^0,w,c
  4459  004282  6ED9               	movwf	fsr2l,c
  4460  004284  5016               	movf	(fputs@i+1)^0,w,c
  4461  004286  2011               	addwfc	(fputs@s+1)^0,w,c
  4462  004288  6EDA               	movwf	fsr2h,c
  4463  00428A  50DF               	movf	indf2,w,c
  4464  00428C  6E14               	movwf	fputs@c^0,c
  4465  00428E  5014               	movf	fputs@c^0,w,c
  4466  004290  A4D8               	btfss	status,2,c
  4467  004292  EF4D  F021         	goto	u6491
  4468  004296  EF4F  F021         	goto	u6490
  4469  00429A                     u6491:
  4470  00429A  EF34  F021         	goto	l6707
  4471  00429E                     u6490:
  4472  00429E  0012               	return		;funcret
  4473  0042A0                     __end_of_fputs:
  4474                           	callstack 0
  4475                           
  4476 ;; *************** function _fputc *****************
  4477 ;; Defined at:
  4478 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;  c               2    6[COMRAM] int 
  4481 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  4482 ;;		 -> NULL(0), 
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;		None
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  2    6[COMRAM] int 
  4487 ;; Registers used:
  4488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4494 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4496 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4497 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4498 ;;Total ram usage:        9 bytes
  4499 ;; Hardware stack levels used: 1
  4500 ;; Hardware stack levels required when called: 6
  4501 ;; This function calls:
  4502 ;;		_putch
  4503 ;; This function is called by:
  4504 ;;		_pad
  4505 ;;		_vfpfcnvrt
  4506 ;;		_fputs
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text12
  4511  003DF2                     __ptext12:
  4512                           	callstack 0
  4513  003DF2                     _fputc:
  4514                           	callstack 21
  4515  003DF2  5009               	movf	fputc@fp^0,w,c
  4516  003DF4  100A               	iorwf	(fputc@fp+1)^0,w,c
  4517  003DF6  B4D8               	btfsc	status,2,c
  4518  003DF8  EF00  F01F         	goto	u6061
  4519  003DFC  EF02  F01F         	goto	u6060
  4520  003E00                     u6061:
  4521  003E00  EF0B  F01F         	goto	l6493
  4522  003E04                     u6060:
  4523  003E04  5009               	movf	fputc@fp^0,w,c
  4524  003E06  100A               	iorwf	(fputc@fp+1)^0,w,c
  4525  003E08  A4D8               	btfss	status,2,c
  4526  003E0A  EF09  F01F         	goto	u6071
  4527  003E0E  EF0B  F01F         	goto	u6070
  4528  003E12                     u6071:
  4529  003E12  EF10  F01F         	goto	l6495
  4530  003E16                     u6070:
  4531  003E16                     l6493:
  4532  003E16  5007               	movf	fputc@c^0,w,c
  4533  003E18  ECB7  F022         	call	_putch
  4534  003E1C  EF43  F01F         	goto	l1725
  4535  003E20                     l6495:
  4536  003E20  EE20 F009          	lfsr	2,9
  4537  003E24  5009               	movf	fputc@fp^0,w,c
  4538  003E26  26D9               	addwf	fsr2l,f,c
  4539  003E28  500A               	movf	(fputc@fp+1)^0,w,c
  4540  003E2A  22DA               	addwfc	fsr2h,f,c
  4541  003E2C  50DE               	movf	postinc2,w,c
  4542  003E2E  10DE               	iorwf	postinc2,w,c
  4543  003E30  B4D8               	btfsc	status,2,c
  4544  003E32  EF1D  F01F         	goto	u6081
  4545  003E36  EF1F  F01F         	goto	u6080
  4546  003E3A                     u6081:
  4547  003E3A  EF3A  F01F         	goto	l6499
  4548  003E3E                     u6080:
  4549  003E3E  EE20 F009          	lfsr	2,9
  4550  003E42  5009               	movf	fputc@fp^0,w,c
  4551  003E44  26D9               	addwf	fsr2l,f,c
  4552  003E46  500A               	movf	(fputc@fp+1)^0,w,c
  4553  003E48  22DA               	addwfc	fsr2h,f,c
  4554  003E4A  EE10 F003          	lfsr	1,3
  4555  003E4E  5009               	movf	fputc@fp^0,w,c
  4556  003E50  26E1               	addwf	fsr1l,f,c
  4557  003E52  500A               	movf	(fputc@fp+1)^0,w,c
  4558  003E54  22E2               	addwfc	fsr1h,f,c
  4559  003E56  50DE               	movf	postinc2,w,c
  4560  003E58  5CE6               	subwf	postinc1,w,c
  4561  003E5A  50E6               	movf	postinc1,w,c
  4562  003E5C  0A80               	xorlw	128
  4563  003E5E  6E0F               	movwf	(??_fputc+4)^0,c
  4564  003E60  50DE               	movf	postinc2,w,c
  4565  003E62  0A80               	xorlw	128
  4566  003E64  580F               	subwfb	(??_fputc+4)^0,w,c
  4567  003E66  B0D8               	btfsc	status,0,c
  4568  003E68  EF38  F01F         	goto	u6091
  4569  003E6C  EF3A  F01F         	goto	u6090
  4570  003E70                     u6091:
  4571  003E70  EF43  F01F         	goto	l1725
  4572  003E74                     u6090:
  4573  003E74                     l6499:
  4574  003E74  EE20 F003          	lfsr	2,3
  4575  003E78  5009               	movf	fputc@fp^0,w,c
  4576  003E7A  26D9               	addwf	fsr2l,f,c
  4577  003E7C  500A               	movf	(fputc@fp+1)^0,w,c
  4578  003E7E  22DA               	addwfc	fsr2h,f,c
  4579  003E80  2ADE               	incf	postinc2,f,c
  4580  003E82  0E00               	movlw	0
  4581  003E84  22DD               	addwfc	postdec2,f,c
  4582  003E86                     l1725:
  4583  003E86  0012               	return		;funcret
  4584  003E88                     __end_of_fputc:
  4585                           	callstack 0
  4586                           
  4587 ;; *************** function _putch *****************
  4588 ;; Defined at:
  4589 ;;		line 201 in file "mcc_generated_files/eusart.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;  txData          1    wreg     unsigned char 
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;  txData          1    5[COMRAM] unsigned char 
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      void 
  4596 ;; Registers used:
  4597 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4606 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4607 ;;Total ram usage:        1 bytes
  4608 ;; Hardware stack levels used: 1
  4609 ;; Hardware stack levels required when called: 5
  4610 ;; This function calls:
  4611 ;;		_EUSART_Write
  4612 ;; This function is called by:
  4613 ;;		_fputc
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           	psect	text13
  4618  00456E                     __ptext13:
  4619                           	callstack 0
  4620  00456E                     _putch:
  4621                           	callstack 21
  4622                           
  4623                           ;incstack = 0
  4624                           ;putch@txData stored from wreg
  4625  00456E  6E06               	movwf	putch@txData^0,c
  4626  004570                     
  4627                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  4628  004570  5006               	movf	putch@txData^0,w,c
  4629  004572  EC1F  F020         	call	_EUSART_Write
  4630  004576  0012               	return		;funcret
  4631  004578                     __end_of_putch:
  4632                           	callstack 0
  4633                           
  4634 ;; *************** function _EUSART_Write *****************
  4635 ;; Defined at:
  4636 ;;		line 173 in file "mcc_generated_files/eusart.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;  txData          1    wreg     unsigned char 
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;  txData          1    4[COMRAM] unsigned char 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      void 
  4643 ;; Registers used:
  4644 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4653 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4654 ;;Total ram usage:        1 bytes
  4655 ;; Hardware stack levels used: 1
  4656 ;; Hardware stack levels required when called: 4
  4657 ;; This function calls:
  4658 ;;		Nothing
  4659 ;; This function is called by:
  4660 ;;		_putch
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           	psect	text14
  4665  00403E                     __ptext14:
  4666                           	callstack 0
  4667  00403E                     _EUSART_Write:
  4668                           	callstack 21
  4669                           
  4670                           ;incstack = 0
  4671                           ;EUSART_Write@txData stored from wreg
  4672  00403E  6E05               	movwf	EUSART_Write@txData^0,c
  4673  004040                     l6471:
  4674                           
  4675                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  4676  004040  0100               	movlb	0	; () banked
  4677  004042  51FE               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
  4678  004044  B4D8               	btfsc	status,2,c
  4679  004046  EF27  F020         	goto	u6031
  4680  00404A  EF29  F020         	goto	u6030
  4681  00404E                     u6031:
  4682  00404E  EF20  F020         	goto	l6471
  4683  004052                     u6030:
  4684  004052                     
  4685                           ; BSR set to: 0
  4686                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TX1IE)
  4687  004052  B89D               	btfsc	157,4,c	;volatile
  4688  004054  EF2E  F020         	goto	u6041
  4689  004058  EF30  F020         	goto	u6040
  4690  00405C                     u6041:
  4691  00405C  EF34  F020         	goto	l595
  4692  004060                     u6040:
  4693  004060                     
  4694                           ; BSR set to: 0
  4695                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  4696  004060  C005  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  4697                           
  4698                           ;mcc_generated_files/eusart.c: 182:     }
  4699  004064  EF49  F020         	goto	l6485
  4700  004068                     l595:
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TX1IE = 0;
  4704  004068  989D               	bcf	157,4,c	;volatile
  4705  00406A                     
  4706                           ; BSR set to: 0
  4707                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  4708  00406A  0E94               	movlw	low _eusartTxBuffer
  4709  00406C  245A               	addwf	_eusartTxHead^0,w,c	;volatile
  4710  00406E  6ED9               	movwf	fsr2l,c
  4711  004070  6ADA               	clrf	fsr2h,c
  4712  004072  0E00               	movlw	high _eusartTxBuffer
  4713  004074  22DA               	addwfc	fsr2h,f,c
  4714  004076  C005  FFDF         	movff	EUSART_Write@txData,indf2
  4715  00407A                     
  4716                           ; BSR set to: 0
  4717  00407A  2A5A               	incf	_eusartTxHead^0,f,c	;volatile
  4718  00407C                     
  4719                           ; BSR set to: 0
  4720                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4721  00407C  0E07               	movlw	7
  4722  00407E  645A               	cpfsgt	_eusartTxHead^0,c	;volatile
  4723  004080  EF44  F020         	goto	u6051
  4724  004084  EF46  F020         	goto	u6050
  4725  004088                     u6051:
  4726  004088  EF48  F020         	goto	l6483
  4727  00408C                     u6050:
  4728  00408C                     
  4729                           ; BSR set to: 0
  4730                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  4731  00408C  0E00               	movlw	0
  4732  00408E  6E5A               	movwf	_eusartTxHead^0,c	;volatile
  4733  004090                     l6483:
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  4737  004090  07FE               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
  4738  004092                     l6485:
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TX1IE = 1;
  4742  004092  889D               	bsf	157,4,c	;volatile
  4743  004094                     
  4744                           ; BSR set to: 0
  4745  004094  0012               	return		;funcret
  4746  004096                     __end_of_EUSART_Write:
  4747                           	callstack 0
  4748                           
  4749 ;; *************** function _floorf *****************
  4750 ;; Defined at:
  4751 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\floorf.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;  x               4   43[COMRAM] float 
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;  u               4   59[COMRAM] struct .
  4756 ;;  m               4   53[COMRAM] unsigned long 
  4757 ;;  e               2   57[COMRAM] int 
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  4   43[COMRAM] float 
  4760 ;; Registers used:
  4761 ;;		wreg, status,2, status,0
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4767 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4768 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4769 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;Total ram usage:       20 bytes
  4772 ;; Hardware stack levels used: 1
  4773 ;; Hardware stack levels required when called: 4
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_efgtoa
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text15
  4782  003072                     __ptext15:
  4783                           	callstack 0
  4784  003072                     _floorf:
  4785                           	callstack 22
  4786  003072  C09C  F03C         	movff	floorf@F526,floorf@u
  4787  003076  C09D  F03D         	movff	floorf@F526+1,floorf@u+1
  4788  00307A  C09E  F03E         	movff	floorf@F526+2,floorf@u+2
  4789  00307E  C09F  F03F         	movff	floorf@F526+3,floorf@u+3
  4790  003082  C02C  F03C         	movff	floorf@x,floorf@u
  4791  003086  C02D  F03D         	movff	floorf@x+1,floorf@u+1
  4792  00308A  C02E  F03E         	movff	floorf@x+2,floorf@u+2
  4793  00308E  C02F  F03F         	movff	floorf@x+3,floorf@u+3
  4794  003092  0E81               	movlw	129
  4795  003094  6E30               	movwf	??_floorf^0,c
  4796  003096  0EFF               	movlw	255
  4797  003098  6E31               	movwf	(??_floorf+1)^0,c
  4798  00309A  C03C  F032         	movff	floorf@u,??_floorf+2
  4799  00309E  C03D  F033         	movff	floorf@u+1,??_floorf+3
  4800  0030A2  C03E  F034         	movff	floorf@u+2,??_floorf+4
  4801  0030A6  C03F  F035         	movff	floorf@u+3,??_floorf+5
  4802  0030AA  0E18               	movlw	24
  4803  0030AC  EF5D  F018         	goto	u7370
  4804  0030B0                     u7375:
  4805  0030B0  90D8               	bcf	status,0,c
  4806  0030B2  3235               	rrcf	(??_floorf+5)^0,f,c
  4807  0030B4  3234               	rrcf	(??_floorf+4)^0,f,c
  4808  0030B6  3233               	rrcf	(??_floorf+3)^0,f,c
  4809  0030B8  3232               	rrcf	(??_floorf+2)^0,f,c
  4810  0030BA                     u7370:
  4811  0030BA  2EE8               	decfsz	wreg,f,c
  4812  0030BC  EF58  F018         	goto	u7375
  4813  0030C0  5032               	movf	(??_floorf+2)^0,w,c
  4814  0030C2  2430               	addwf	??_floorf^0,w,c
  4815  0030C4  6E3A               	movwf	floorf@e^0,c
  4816  0030C6  0E00               	movlw	0
  4817  0030C8  2031               	addwfc	(??_floorf+1)^0,w,c
  4818  0030CA  6E3B               	movwf	(floorf@e+1)^0,c
  4819  0030CC  BE3B               	btfsc	(floorf@e+1)^0,7,c
  4820  0030CE  EF72  F018         	goto	u7381
  4821  0030D2  503B               	movf	(floorf@e+1)^0,w,c
  4822  0030D4  E109               	bnz	u7380
  4823  0030D6  0E17               	movlw	23
  4824  0030D8  5C3A               	subwf	floorf@e^0,w,c
  4825  0030DA  A0D8               	btfss	status,0,c
  4826  0030DC  EF72  F018         	goto	u7381
  4827  0030E0  EF74  F018         	goto	u7380
  4828  0030E4                     u7381:
  4829  0030E4  EF7E  F018         	goto	l7241
  4830  0030E8                     u7380:
  4831  0030E8                     l7239:
  4832  0030E8  C02C  F02C         	movff	floorf@x,?_floorf
  4833  0030EC  C02D  F02D         	movff	floorf@x+1,?_floorf+1
  4834  0030F0  C02E  F02E         	movff	floorf@x+2,?_floorf+2
  4835  0030F4  C02F  F02F         	movff	floorf@x+3,?_floorf+3
  4836  0030F8  EF41  F019         	goto	l1686
  4837  0030FC                     l7241:
  4838  0030FC  BE3B               	btfsc	(floorf@e+1)^0,7,c
  4839  0030FE  EF83  F018         	goto	u7391
  4840  003102  EF85  F018         	goto	u7390
  4841  003106                     u7391:
  4842  003106  EFF5  F018         	goto	l7251
  4843  00310A                     u7390:
  4844  00310A  C03A  F030         	movff	floorf@e,??_floorf
  4845  00310E  0EFF               	movlw	255
  4846  003110  6E31               	movwf	(??_floorf+1)^0,c
  4847  003112  0EFF               	movlw	255
  4848  003114  6E32               	movwf	(??_floorf+2)^0,c
  4849  003116  0E7F               	movlw	127
  4850  003118  6E33               	movwf	(??_floorf+3)^0,c
  4851  00311A  0E00               	movlw	0
  4852  00311C  6E34               	movwf	(??_floorf+4)^0,c
  4853  00311E                     u7405:
  4854  00311E  6630               	tstfsz	??_floorf^0,c
  4855  003120  EF94  F018         	goto	u7406
  4856  003124  EF9C  F018         	goto	u7407
  4857  003128                     u7406:
  4858  003128  3434               	rlcf	(??_floorf+4)^0,w,c
  4859  00312A  3234               	rrcf	(??_floorf+4)^0,f,c
  4860  00312C  3233               	rrcf	(??_floorf+3)^0,f,c
  4861  00312E  3232               	rrcf	(??_floorf+2)^0,f,c
  4862  003130  3231               	rrcf	(??_floorf+1)^0,f,c
  4863  003132  2E30               	decfsz	??_floorf^0,f,c
  4864  003134  EF8F  F018         	goto	u7405
  4865  003138                     u7407:
  4866  003138  C031  F036         	movff	??_floorf+1,floorf@m
  4867  00313C  C032  F037         	movff	??_floorf+2,floorf@m+1
  4868  003140  C033  F038         	movff	??_floorf+3,floorf@m+2
  4869  003144  C034  F039         	movff	??_floorf+4,floorf@m+3
  4870  003148  5036               	movf	floorf@m^0,w,c
  4871  00314A  143C               	andwf	floorf@u^0,w,c
  4872  00314C  6E30               	movwf	??_floorf^0,c
  4873  00314E  5037               	movf	(floorf@m+1)^0,w,c
  4874  003150  143D               	andwf	(floorf@u+1)^0,w,c
  4875  003152  6E31               	movwf	(??_floorf+1)^0,c
  4876  003154  5038               	movf	(floorf@m+2)^0,w,c
  4877  003156  143E               	andwf	(floorf@u+2)^0,w,c
  4878  003158  6E32               	movwf	(??_floorf+2)^0,c
  4879  00315A  5039               	movf	(floorf@m+3)^0,w,c
  4880  00315C  143F               	andwf	(floorf@u+3)^0,w,c
  4881  00315E  6E33               	movwf	(??_floorf+3)^0,c
  4882  003160  5030               	movf	??_floorf^0,w,c
  4883  003162  1031               	iorwf	(??_floorf+1)^0,w,c
  4884  003164  1032               	iorwf	(??_floorf+2)^0,w,c
  4885  003166  1033               	iorwf	(??_floorf+3)^0,w,c
  4886  003168  A4D8               	btfss	status,2,c
  4887  00316A  EFB9  F018         	goto	u7411
  4888  00316E  EFBB  F018         	goto	u7410
  4889  003172                     u7411:
  4890  003172  EFBD  F018         	goto	l7247
  4891  003176                     u7410:
  4892  003176  EF74  F018         	goto	l7239
  4893  00317A                     l7247:
  4894  00317A  C03C  F030         	movff	floorf@u,??_floorf
  4895  00317E  C03D  F031         	movff	floorf@u+1,??_floorf+1
  4896  003182  C03E  F032         	movff	floorf@u+2,??_floorf+2
  4897  003186  C03F  F033         	movff	floorf@u+3,??_floorf+3
  4898  00318A  0E20               	movlw	32
  4899  00318C  EFCD  F018         	goto	u7420
  4900  003190                     u7425:
  4901  003190  90D8               	bcf	status,0,c
  4902  003192  3233               	rrcf	(??_floorf+3)^0,f,c
  4903  003194  3232               	rrcf	(??_floorf+2)^0,f,c
  4904  003196  3231               	rrcf	(??_floorf+1)^0,f,c
  4905  003198  3230               	rrcf	??_floorf^0,f,c
  4906  00319A                     u7420:
  4907  00319A  2EE8               	decfsz	wreg,f,c
  4908  00319C  EFC8  F018         	goto	u7425
  4909  0031A0  5030               	movf	??_floorf^0,w,c
  4910  0031A2  1031               	iorwf	(??_floorf+1)^0,w,c
  4911  0031A4  1032               	iorwf	(??_floorf+2)^0,w,c
  4912  0031A6  1033               	iorwf	(??_floorf+3)^0,w,c
  4913  0031A8  B4D8               	btfsc	status,2,c
  4914  0031AA  EFD9  F018         	goto	u7431
  4915  0031AE  EFDB  F018         	goto	u7430
  4916  0031B2                     u7431:
  4917  0031B2  EFE3  F018         	goto	l1689
  4918  0031B6                     u7430:
  4919  0031B6  5036               	movf	floorf@m^0,w,c
  4920  0031B8  263C               	addwf	floorf@u^0,f,c
  4921  0031BA  5037               	movf	(floorf@m+1)^0,w,c
  4922  0031BC  223D               	addwfc	(floorf@u+1)^0,f,c
  4923  0031BE  5038               	movf	(floorf@m+2)^0,w,c
  4924  0031C0  223E               	addwfc	(floorf@u+2)^0,f,c
  4925  0031C2  5039               	movf	(floorf@m+3)^0,w,c
  4926  0031C4  223F               	addwfc	(floorf@u+3)^0,f,c
  4927  0031C6                     l1689:
  4928  0031C6  1C36               	comf	floorf@m^0,w,c
  4929  0031C8  6E30               	movwf	??_floorf^0,c
  4930  0031CA  1C37               	comf	(floorf@m+1)^0,w,c
  4931  0031CC  6E31               	movwf	(??_floorf+1)^0,c
  4932  0031CE  1C38               	comf	(floorf@m+2)^0,w,c
  4933  0031D0  6E32               	movwf	(??_floorf+2)^0,c
  4934  0031D2  1C39               	comf	(floorf@m+3)^0,w,c
  4935  0031D4  6E33               	movwf	(??_floorf+3)^0,c
  4936  0031D6  5030               	movf	??_floorf^0,w,c
  4937  0031D8  163C               	andwf	floorf@u^0,f,c
  4938  0031DA  5031               	movf	(??_floorf+1)^0,w,c
  4939  0031DC  163D               	andwf	(floorf@u+1)^0,f,c
  4940  0031DE  5032               	movf	(??_floorf+2)^0,w,c
  4941  0031E0  163E               	andwf	(floorf@u+2)^0,f,c
  4942  0031E2  5033               	movf	(??_floorf+3)^0,w,c
  4943  0031E4  163F               	andwf	(floorf@u+3)^0,f,c
  4944  0031E6  EF39  F019         	goto	l7259
  4945  0031EA                     l7251:
  4946  0031EA  C03C  F030         	movff	floorf@u,??_floorf
  4947  0031EE  C03D  F031         	movff	floorf@u+1,??_floorf+1
  4948  0031F2  C03E  F032         	movff	floorf@u+2,??_floorf+2
  4949  0031F6  C03F  F033         	movff	floorf@u+3,??_floorf+3
  4950  0031FA  0E20               	movlw	32
  4951  0031FC  EF05  F019         	goto	u7440
  4952  003200                     u7445:
  4953  003200  90D8               	bcf	status,0,c
  4954  003202  3233               	rrcf	(??_floorf+3)^0,f,c
  4955  003204  3232               	rrcf	(??_floorf+2)^0,f,c
  4956  003206  3231               	rrcf	(??_floorf+1)^0,f,c
  4957  003208  3230               	rrcf	??_floorf^0,f,c
  4958  00320A                     u7440:
  4959  00320A  2EE8               	decfsz	wreg,f,c
  4960  00320C  EF00  F019         	goto	u7445
  4961  003210  5030               	movf	??_floorf^0,w,c
  4962  003212  1031               	iorwf	(??_floorf+1)^0,w,c
  4963  003214  1032               	iorwf	(??_floorf+2)^0,w,c
  4964  003216  1033               	iorwf	(??_floorf+3)^0,w,c
  4965  003218  A4D8               	btfss	status,2,c
  4966  00321A  EF11  F019         	goto	u7451
  4967  00321E  EF13  F019         	goto	u7450
  4968  003222                     u7451:
  4969  003222  EF1D  F019         	goto	l7255
  4970  003226                     u7450:
  4971  003226  0E00               	movlw	0
  4972  003228  6E3C               	movwf	floorf@u^0,c
  4973  00322A  0E00               	movlw	0
  4974  00322C  6E3D               	movwf	(floorf@u+1)^0,c
  4975  00322E  0E00               	movlw	0
  4976  003230  6E3E               	movwf	(floorf@u+2)^0,c
  4977  003232  0E00               	movlw	0
  4978  003234  6E3F               	movwf	(floorf@u+3)^0,c
  4979  003236  EF39  F019         	goto	l7259
  4980  00323A                     l7255:
  4981  00323A  90D8               	bcf	status,0,c
  4982  00323C  343C               	rlcf	floorf@u^0,w,c
  4983  00323E  6E30               	movwf	??_floorf^0,c
  4984  003240  343D               	rlcf	(floorf@u+1)^0,w,c
  4985  003242  6E31               	movwf	(??_floorf+1)^0,c
  4986  003244  343E               	rlcf	(floorf@u+2)^0,w,c
  4987  003246  6E32               	movwf	(??_floorf+2)^0,c
  4988  003248  343F               	rlcf	(floorf@u+3)^0,w,c
  4989  00324A  6E33               	movwf	(??_floorf+3)^0,c
  4990  00324C  5030               	movf	??_floorf^0,w,c
  4991  00324E  1031               	iorwf	(??_floorf+1)^0,w,c
  4992  003250  1032               	iorwf	(??_floorf+2)^0,w,c
  4993  003252  1033               	iorwf	(??_floorf+3)^0,w,c
  4994  003254  B4D8               	btfsc	status,2,c
  4995  003256  EF2F  F019         	goto	u7461
  4996  00325A  EF31  F019         	goto	u7460
  4997  00325E                     u7461:
  4998  00325E  EF39  F019         	goto	l7259
  4999  003262                     u7460:
  5000  003262  0E00               	movlw	0
  5001  003264  6E3C               	movwf	floorf@u^0,c
  5002  003266  0E00               	movlw	0
  5003  003268  6E3D               	movwf	(floorf@u+1)^0,c
  5004  00326A  0E80               	movlw	128
  5005  00326C  6E3E               	movwf	(floorf@u+2)^0,c
  5006  00326E  0EBF               	movlw	191
  5007  003270  6E3F               	movwf	(floorf@u+3)^0,c
  5008  003272                     l7259:
  5009  003272  C03C  F02C         	movff	floorf@u,?_floorf
  5010  003276  C03D  F02D         	movff	floorf@u+1,?_floorf+1
  5011  00327A  C03E  F02E         	movff	floorf@u+2,?_floorf+2
  5012  00327E  C03F  F02F         	movff	floorf@u+3,?_floorf+3
  5013  003282                     l1686:
  5014  003282  0012               	return		;funcret
  5015  003284                     __end_of_floorf:
  5016                           	callstack 0
  5017                           
  5018 ;; *************** function ___fpclassifyf *****************
  5019 ;; Defined at:
  5020 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\__fpclassifyf.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;  x               4    4[COMRAM] float 
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;  u               4   14[COMRAM] struct .
  5025 ;;  e               2   12[COMRAM] int 
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  2    4[COMRAM] int 
  5028 ;; Registers used:
  5029 ;;		wreg, status,2, status,0
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5035 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5036 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5037 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5038 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;Total ram usage:       14 bytes
  5040 ;; Hardware stack levels used: 1
  5041 ;; Hardware stack levels required when called: 4
  5042 ;; This function calls:
  5043 ;;		Nothing
  5044 ;; This function is called by:
  5045 ;;		_efgtoa
  5046 ;; This function uses a non-reentrant model
  5047 ;;
  5048                           
  5049                           	psect	text16
  5050  0037A2                     __ptext16:
  5051                           	callstack 0
  5052  0037A2                     ___fpclassifyf:
  5053                           	callstack 22
  5054  0037A2  C0A0  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5055  0037A6  C0A1  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5056  0037AA  C0A2  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5057  0037AE  C0A3  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5058  0037B2  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  5059  0037B6  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5060  0037BA  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5061  0037BE  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5062  0037C2  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5063  0037C6  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5064  0037CA  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5065  0037CE  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5066  0037D2  0E18               	movlw	24
  5067  0037D4  EFF1  F01B         	goto	u7270
  5068  0037D8                     u7275:
  5069  0037D8  90D8               	bcf	status,0,c
  5070  0037DA  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  5071  0037DC  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  5072  0037DE  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  5073  0037E0  3209               	rrcf	??___fpclassifyf^0,f,c
  5074  0037E2                     u7270:
  5075  0037E2  2EE8               	decfsz	wreg,f,c
  5076  0037E4  EFEC  F01B         	goto	u7275
  5077  0037E8  5009               	movf	??___fpclassifyf^0,w,c
  5078  0037EA  6E0D               	movwf	___fpclassifyf@e^0,c
  5079  0037EC  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  5080  0037EE  500D               	movf	___fpclassifyf@e^0,w,c
  5081  0037F0  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5082  0037F2  A4D8               	btfss	status,2,c
  5083  0037F4  EFFE  F01B         	goto	u7281
  5084  0037F8  EF00  F01C         	goto	u7280
  5085  0037FC                     u7281:
  5086  0037FC  EF20  F01C         	goto	l7211
  5087  003800                     u7280:
  5088  003800  90D8               	bcf	status,0,c
  5089  003802  340F               	rlcf	___fpclassifyf@u^0,w,c
  5090  003804  6E09               	movwf	??___fpclassifyf^0,c
  5091  003806  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5092  003808  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  5093  00380A  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5094  00380C  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  5095  00380E  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5096  003810  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  5097  003812  5009               	movf	??___fpclassifyf^0,w,c
  5098  003814  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5099  003816  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5100  003818  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5101  00381A  A4D8               	btfss	status,2,c
  5102  00381C  EF12  F01C         	goto	u7291
  5103  003820  EF14  F01C         	goto	u7290
  5104  003824                     u7291:
  5105  003824  EF1A  F01C         	goto	l7207
  5106  003828                     u7290:
  5107  003828  0E00               	movlw	0
  5108  00382A  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5109  00382C  0E02               	movlw	2
  5110  00382E  6E05               	movwf	?___fpclassifyf^0,c
  5111  003830  EF4F  F01C         	goto	l1654
  5112  003834                     l7207:
  5113  003834  0E00               	movlw	0
  5114  003836  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5115  003838  0E03               	movlw	3
  5116  00383A  6E05               	movwf	?___fpclassifyf^0,c
  5117  00383C  EF4F  F01C         	goto	l1654
  5118  003840                     l7211:
  5119  003840  280D               	incf	___fpclassifyf@e^0,w,c
  5120  003842  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5121  003844  A4D8               	btfss	status,2,c
  5122  003846  EF27  F01C         	goto	u7301
  5123  00384A  EF29  F01C         	goto	u7300
  5124  00384E                     u7301:
  5125  00384E  EF4B  F01C         	goto	l7217
  5126  003852                     u7300:
  5127  003852  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5128  003856  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5129  00385A  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5130  00385E  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5131  003862  0E09               	movlw	9
  5132  003864                     u7315:
  5133  003864  90D8               	bcf	status,0,c
  5134  003866  3609               	rlcf	??___fpclassifyf^0,f,c
  5135  003868  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  5136  00386A  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  5137  00386C  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  5138  00386E  2EE8               	decfsz	wreg,f,c
  5139  003870  EF32  F01C         	goto	u7315
  5140  003874  5009               	movf	??___fpclassifyf^0,w,c
  5141  003876  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5142  003878  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5143  00387A  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5144  00387C  B4D8               	btfsc	status,2,c
  5145  00387E  EF43  F01C         	goto	u7321
  5146  003882  EF46  F01C         	goto	u7320
  5147  003886                     u7321:
  5148  003886  0E01               	movlw	1
  5149  003888  EF47  F01C         	goto	u7330
  5150  00388C                     u7320:
  5151  00388C  0E00               	movlw	0
  5152  00388E                     u7330:
  5153  00388E  6E05               	movwf	?___fpclassifyf^0,c
  5154  003890  6A06               	clrf	(?___fpclassifyf+1)^0,c
  5155  003892  EF4F  F01C         	goto	l1654
  5156  003896                     l7217:
  5157  003896  0E00               	movlw	0
  5158  003898  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5159  00389A  0E04               	movlw	4
  5160  00389C  6E05               	movwf	?___fpclassifyf^0,c
  5161  00389E                     l1654:
  5162  00389E  0012               	return		;funcret
  5163  0038A0                     __end_of___fpclassifyf:
  5164                           	callstack 0
  5165                           
  5166 ;; *************** function ___fltol *****************
  5167 ;; Defined at:
  5168 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;  f1              4    4[COMRAM] int 
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;  exp1            1   13[COMRAM] unsigned char 
  5173 ;;  sign1           1   12[COMRAM] unsigned char 
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  4    4[COMRAM] long 
  5176 ;; Registers used:
  5177 ;;		wreg, status,2, status,0
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5183 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5184 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5185 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5186 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5187 ;;Total ram usage:       10 bytes
  5188 ;; Hardware stack levels used: 1
  5189 ;; Hardware stack levels required when called: 4
  5190 ;; This function calls:
  5191 ;;		Nothing
  5192 ;; This function is called by:
  5193 ;;		_efgtoa
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           	psect	text17
  5198  003598                     __ptext17:
  5199                           	callstack 0
  5200  003598                     ___fltol:
  5201                           	callstack 22
  5202  003598  3407               	rlcf	(___fltol@f1+2)^0,w,c
  5203  00359A  3408               	rlcf	(___fltol@f1+3)^0,w,c
  5204  00359C  6E0E               	movwf	___fltol@exp1^0,c
  5205  00359E  500E               	movf	___fltol@exp1^0,w,c
  5206  0035A0  A4D8               	btfss	status,2,c
  5207  0035A2  EFD5  F01A         	goto	u7161
  5208  0035A6  EFD7  F01A         	goto	u7160
  5209  0035AA                     u7161:
  5210  0035AA  EFE1  F01A         	goto	l7139
  5211  0035AE                     u7160:
  5212  0035AE                     l7135:
  5213  0035AE  0E00               	movlw	0
  5214  0035B0  6E05               	movwf	?___fltol^0,c
  5215  0035B2  0E00               	movlw	0
  5216  0035B4  6E06               	movwf	(?___fltol+1)^0,c
  5217  0035B6  0E00               	movlw	0
  5218  0035B8  6E07               	movwf	(?___fltol+2)^0,c
  5219  0035BA  0E00               	movlw	0
  5220  0035BC  6E08               	movwf	(?___fltol+3)^0,c
  5221  0035BE  EF4E  F01B         	goto	l1091
  5222  0035C2                     l7139:
  5223  0035C2  C005  F009         	movff	___fltol@f1,??___fltol
  5224  0035C6  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  5225  0035CA  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  5226  0035CE  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  5227  0035D2  0E20               	movlw	32
  5228  0035D4  EFF1  F01A         	goto	u7170
  5229  0035D8                     u7175:
  5230  0035D8  90D8               	bcf	status,0,c
  5231  0035DA  320C               	rrcf	(??___fltol+3)^0,f,c
  5232  0035DC  320B               	rrcf	(??___fltol+2)^0,f,c
  5233  0035DE  320A               	rrcf	(??___fltol+1)^0,f,c
  5234  0035E0  3209               	rrcf	??___fltol^0,f,c
  5235  0035E2                     u7170:
  5236  0035E2  2EE8               	decfsz	wreg,f,c
  5237  0035E4  EFEC  F01A         	goto	u7175
  5238  0035E8  5009               	movf	??___fltol^0,w,c
  5239  0035EA  6E0D               	movwf	___fltol@sign1^0,c
  5240  0035EC  8E07               	bsf	(___fltol@f1+2)^0,7,c
  5241  0035EE  0EFF               	movlw	255
  5242  0035F0  1605               	andwf	___fltol@f1^0,f,c
  5243  0035F2  0EFF               	movlw	255
  5244  0035F4  1606               	andwf	(___fltol@f1+1)^0,f,c
  5245  0035F6  0EFF               	movlw	255
  5246  0035F8  1607               	andwf	(___fltol@f1+2)^0,f,c
  5247  0035FA  0E00               	movlw	0
  5248  0035FC  1608               	andwf	(___fltol@f1+3)^0,f,c
  5249  0035FE  0E96               	movlw	150
  5250  003600  5E0E               	subwf	___fltol@exp1^0,f,c
  5251  003602  BE0E               	btfsc	___fltol@exp1^0,7,c
  5252  003604  EF08  F01B         	goto	u7180
  5253  003608  EF06  F01B         	goto	u7181
  5254  00360C                     u7181:
  5255  00360C  EF1E  F01B         	goto	l7159
  5256  003610                     u7180:
  5257  003610  500E               	movf	___fltol@exp1^0,w,c
  5258  003612  0A80               	xorlw	128
  5259  003614  0F97               	addlw	151
  5260  003616  B0D8               	btfsc	status,0,c
  5261  003618  EF10  F01B         	goto	u7191
  5262  00361C  EF12  F01B         	goto	u7190
  5263  003620                     u7191:
  5264  003620  EF14  F01B         	goto	l7155
  5265  003624                     u7190:
  5266  003624  EFD7  F01A         	goto	l7135
  5267  003628                     l7155:
  5268  003628  90D8               	bcf	status,0,c
  5269  00362A  3208               	rrcf	(___fltol@f1+3)^0,f,c
  5270  00362C  3207               	rrcf	(___fltol@f1+2)^0,f,c
  5271  00362E  3206               	rrcf	(___fltol@f1+1)^0,f,c
  5272  003630  3205               	rrcf	___fltol@f1^0,f,c
  5273  003632  3E0E               	incfsz	___fltol@exp1^0,f,c
  5274  003634  EF14  F01B         	goto	l7155
  5275  003638  EF36  F01B         	goto	l7169
  5276  00363C                     l7159:
  5277  00363C  0E1F               	movlw	31
  5278  00363E  640E               	cpfsgt	___fltol@exp1^0,c
  5279  003640  EF24  F01B         	goto	u7201
  5280  003644  EF26  F01B         	goto	u7200
  5281  003648                     u7201:
  5282  003648  EF2E  F01B         	goto	l7167
  5283  00364C                     u7200:
  5284  00364C  EFD7  F01A         	goto	l7135
  5285  003650                     l7165:
  5286  003650  90D8               	bcf	status,0,c
  5287  003652  3605               	rlcf	___fltol@f1^0,f,c
  5288  003654  3606               	rlcf	(___fltol@f1+1)^0,f,c
  5289  003656  3607               	rlcf	(___fltol@f1+2)^0,f,c
  5290  003658  3608               	rlcf	(___fltol@f1+3)^0,f,c
  5291  00365A  060E               	decf	___fltol@exp1^0,f,c
  5292  00365C                     l7167:
  5293  00365C  500E               	movf	___fltol@exp1^0,w,c
  5294  00365E  A4D8               	btfss	status,2,c
  5295  003660  EF34  F01B         	goto	u7211
  5296  003664  EF36  F01B         	goto	u7210
  5297  003668                     u7211:
  5298  003668  EF28  F01B         	goto	l7165
  5299  00366C                     u7210:
  5300  00366C                     l7169:
  5301  00366C  500D               	movf	___fltol@sign1^0,w,c
  5302  00366E  B4D8               	btfsc	status,2,c
  5303  003670  EF3C  F01B         	goto	u7221
  5304  003674  EF3E  F01B         	goto	u7220
  5305  003678                     u7221:
  5306  003678  EF46  F01B         	goto	l7173
  5307  00367C                     u7220:
  5308  00367C  1E08               	comf	(___fltol@f1+3)^0,f,c
  5309  00367E  1E07               	comf	(___fltol@f1+2)^0,f,c
  5310  003680  1E06               	comf	(___fltol@f1+1)^0,f,c
  5311  003682  6C05               	negf	___fltol@f1^0,c
  5312  003684  0E00               	movlw	0
  5313  003686  2206               	addwfc	(___fltol@f1+1)^0,f,c
  5314  003688  2207               	addwfc	(___fltol@f1+2)^0,f,c
  5315  00368A  2208               	addwfc	(___fltol@f1+3)^0,f,c
  5316  00368C                     l7173:
  5317  00368C  C005  F005         	movff	___fltol@f1,?___fltol
  5318  003690  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  5319  003694  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  5320  003698  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  5321  00369C                     l1091:
  5322  00369C  0012               	return		;funcret
  5323  00369E                     __end_of___fltol:
  5324                           	callstack 0
  5325                           
  5326 ;; *************** function ___flsub *****************
  5327 ;; Defined at:
  5328 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;  b               4   29[COMRAM] long 
  5331 ;;  a               4   33[COMRAM] long 
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;		None
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  4   29[COMRAM] long 
  5336 ;; Registers used:
  5337 ;;		wreg, status,2, status,0, cstack
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5343 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5346 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5347 ;;Total ram usage:        8 bytes
  5348 ;; Hardware stack levels used: 1
  5349 ;; Hardware stack levels required when called: 5
  5350 ;; This function calls:
  5351 ;;		___fladd
  5352 ;; This function is called by:
  5353 ;;		_efgtoa
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           	psect	text18
  5358  004216                     __ptext18:
  5359                           	callstack 0
  5360  004216                     ___flsub:
  5361                           	callstack 21
  5362  004216  0E00               	movlw	0
  5363  004218  1A22               	xorwf	___flsub@a^0,f,c
  5364  00421A  0E00               	movlw	0
  5365  00421C  1A23               	xorwf	(___flsub@a+1)^0,f,c
  5366  00421E  0E00               	movlw	0
  5367  004220  1A24               	xorwf	(___flsub@a+2)^0,f,c
  5368  004222  0E80               	movlw	128
  5369  004224  1A25               	xorwf	(___flsub@a+3)^0,f,c
  5370  004226  C01E  F005         	movff	___flsub@b,___fladd@b
  5371  00422A  C01F  F006         	movff	___flsub@b+1,___fladd@b+1
  5372  00422E  C020  F007         	movff	___flsub@b+2,___fladd@b+2
  5373  004232  C021  F008         	movff	___flsub@b+3,___fladd@b+3
  5374  004236  C022  F009         	movff	___flsub@a,___fladd@a
  5375  00423A  C023  F00A         	movff	___flsub@a+1,___fladd@a+1
  5376  00423E  C024  F00B         	movff	___flsub@a+2,___fladd@a+2
  5377  004242  C025  F00C         	movff	___flsub@a+3,___fladd@a+3
  5378  004246  ECEB  F010         	call	___fladd	;wreg free
  5379  00424A  C005  F01E         	movff	?___fladd,?___flsub
  5380  00424E  C006  F01F         	movff	?___fladd+1,?___flsub+1
  5381  004252  C007  F020         	movff	?___fladd+2,?___flsub+2
  5382  004256  C008  F021         	movff	?___fladd+3,?___flsub+3
  5383  00425A  0012               	return		;funcret
  5384  00425C                     __end_of___flsub:
  5385                           	callstack 0
  5386                           
  5387 ;; *************** function ___fladd *****************
  5388 ;; Defined at:
  5389 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;  b               4    4[COMRAM] long 
  5392 ;;  a               4    8[COMRAM] long 
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;  grs             1   19[COMRAM] unsigned char 
  5395 ;;  bexp            1   18[COMRAM] unsigned char 
  5396 ;;  aexp            1   17[COMRAM] unsigned char 
  5397 ;;  signs           1   16[COMRAM] unsigned char 
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  4    4[COMRAM] unsigned char 
  5400 ;; Registers used:
  5401 ;;		wreg, status,2, status,0
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5407 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5408 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5409 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5410 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5411 ;;Total ram usage:       16 bytes
  5412 ;; Hardware stack levels used: 1
  5413 ;; Hardware stack levels required when called: 4
  5414 ;; This function calls:
  5415 ;;		Nothing
  5416 ;; This function is called by:
  5417 ;;		___flsub
  5418 ;;		_efgtoa
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           	psect	text19
  5423  0021D6                     __ptext19:
  5424                           	callstack 0
  5425  0021D6                     ___fladd:
  5426                           	callstack 21
  5427  0021D6  5008               	movf	(___fladd@b+3)^0,w,c
  5428  0021D8  0B80               	andlw	128
  5429  0021DA  6E11               	movwf	___fladd@signs^0,c
  5430  0021DC  5008               	movf	(___fladd@b+3)^0,w,c
  5431  0021DE  2408               	addwf	(___fladd@b+3)^0,w,c
  5432  0021E0  6E13               	movwf	___fladd@bexp^0,c
  5433  0021E2  AE07               	btfss	(___fladd@b+2)^0,7,c
  5434  0021E4  EFF6  F010         	goto	u6101
  5435  0021E8  EFF8  F010         	goto	u6100
  5436  0021EC                     u6101:
  5437  0021EC  EFF9  F010         	goto	l6509
  5438  0021F0                     u6100:
  5439  0021F0  8013               	bsf	___fladd@bexp^0,0,c
  5440  0021F2                     l6509:
  5441  0021F2  5013               	movf	___fladd@bexp^0,w,c
  5442  0021F4  B4D8               	btfsc	status,2,c
  5443  0021F6  EFFF  F010         	goto	u6111
  5444  0021FA  EF01  F011         	goto	u6110
  5445  0021FE                     u6111:
  5446  0021FE  EF16  F011         	goto	l6519
  5447  002202                     u6110:
  5448  002202  2813               	incf	___fladd@bexp^0,w,c
  5449  002204  A4D8               	btfss	status,2,c
  5450  002206  EF07  F011         	goto	u6121
  5451  00220A  EF09  F011         	goto	u6120
  5452  00220E                     u6121:
  5453  00220E  EF11  F011         	goto	l6515
  5454  002212                     u6120:
  5455  002212  0E00               	movlw	0
  5456  002214  6E05               	movwf	___fladd@b^0,c
  5457  002216  0E00               	movlw	0
  5458  002218  6E06               	movwf	(___fladd@b+1)^0,c
  5459  00221A  0E00               	movlw	0
  5460  00221C  6E07               	movwf	(___fladd@b+2)^0,c
  5461  00221E  0E00               	movlw	0
  5462  002220  6E08               	movwf	(___fladd@b+3)^0,c
  5463  002222                     l6515:
  5464  002222  8E07               	bsf	(___fladd@b+2)^0,7,c
  5465  002224  0E00               	movlw	0
  5466  002226  6E08               	movwf	(___fladd@b+3)^0,c
  5467  002228  EF1E  F011         	goto	l6521
  5468  00222C                     l6519:
  5469  00222C  0E00               	movlw	0
  5470  00222E  6E05               	movwf	___fladd@b^0,c
  5471  002230  0E00               	movlw	0
  5472  002232  6E06               	movwf	(___fladd@b+1)^0,c
  5473  002234  0E00               	movlw	0
  5474  002236  6E07               	movwf	(___fladd@b+2)^0,c
  5475  002238  0E00               	movlw	0
  5476  00223A  6E08               	movwf	(___fladd@b+3)^0,c
  5477  00223C                     l6521:
  5478  00223C  500C               	movf	(___fladd@a+3)^0,w,c
  5479  00223E  0B80               	andlw	128
  5480  002240  6E12               	movwf	___fladd@aexp^0,c
  5481  002242  5011               	movf	___fladd@signs^0,w,c
  5482  002244  1812               	xorwf	___fladd@aexp^0,w,c
  5483  002246  B4D8               	btfsc	status,2,c
  5484  002248  EF28  F011         	goto	u6131
  5485  00224C  EF2A  F011         	goto	u6130
  5486  002250                     u6131:
  5487  002250  EF2B  F011         	goto	l6527
  5488  002254                     u6130:
  5489  002254  8C11               	bsf	___fladd@signs^0,6,c
  5490  002256                     l6527:
  5491  002256  500C               	movf	(___fladd@a+3)^0,w,c
  5492  002258  240C               	addwf	(___fladd@a+3)^0,w,c
  5493  00225A  6E12               	movwf	___fladd@aexp^0,c
  5494  00225C  AE0B               	btfss	(___fladd@a+2)^0,7,c
  5495  00225E  EF33  F011         	goto	u6141
  5496  002262  EF35  F011         	goto	u6140
  5497  002266                     u6141:
  5498  002266  EF36  F011         	goto	l6533
  5499  00226A                     u6140:
  5500  00226A  8012               	bsf	___fladd@aexp^0,0,c
  5501  00226C                     l6533:
  5502  00226C  5012               	movf	___fladd@aexp^0,w,c
  5503  00226E  B4D8               	btfsc	status,2,c
  5504  002270  EF3C  F011         	goto	u6151
  5505  002274  EF3E  F011         	goto	u6150
  5506  002278                     u6151:
  5507  002278  EF53  F011         	goto	l6543
  5508  00227C                     u6150:
  5509  00227C  2812               	incf	___fladd@aexp^0,w,c
  5510  00227E  A4D8               	btfss	status,2,c
  5511  002280  EF44  F011         	goto	u6161
  5512  002284  EF46  F011         	goto	u6160
  5513  002288                     u6161:
  5514  002288  EF4E  F011         	goto	l6539
  5515  00228C                     u6160:
  5516  00228C  0E00               	movlw	0
  5517  00228E  6E09               	movwf	___fladd@a^0,c
  5518  002290  0E00               	movlw	0
  5519  002292  6E0A               	movwf	(___fladd@a+1)^0,c
  5520  002294  0E00               	movlw	0
  5521  002296  6E0B               	movwf	(___fladd@a+2)^0,c
  5522  002298  0E00               	movlw	0
  5523  00229A  6E0C               	movwf	(___fladd@a+3)^0,c
  5524  00229C                     l6539:
  5525  00229C  8E0B               	bsf	(___fladd@a+2)^0,7,c
  5526  00229E  0E00               	movlw	0
  5527  0022A0  6E0C               	movwf	(___fladd@a+3)^0,c
  5528  0022A2  EF5B  F011         	goto	l6545
  5529  0022A6                     l6543:
  5530  0022A6  0E00               	movlw	0
  5531  0022A8  6E09               	movwf	___fladd@a^0,c
  5532  0022AA  0E00               	movlw	0
  5533  0022AC  6E0A               	movwf	(___fladd@a+1)^0,c
  5534  0022AE  0E00               	movlw	0
  5535  0022B0  6E0B               	movwf	(___fladd@a+2)^0,c
  5536  0022B2  0E00               	movlw	0
  5537  0022B4  6E0C               	movwf	(___fladd@a+3)^0,c
  5538  0022B6                     l6545:
  5539  0022B6  5013               	movf	___fladd@bexp^0,w,c
  5540  0022B8  5C12               	subwf	___fladd@aexp^0,w,c
  5541  0022BA  B0D8               	btfsc	status,0,c
  5542  0022BC  EF62  F011         	goto	u6171
  5543  0022C0  EF64  F011         	goto	u6170
  5544  0022C4                     u6171:
  5545  0022C4  EF8B  F011         	goto	l6581
  5546  0022C8                     u6170:
  5547  0022C8  AC11               	btfss	___fladd@signs^0,6,c
  5548  0022CA  EF69  F011         	goto	u6181
  5549  0022CE  EF6B  F011         	goto	u6180
  5550  0022D2                     u6181:
  5551  0022D2  EF6D  F011         	goto	l6551
  5552  0022D6                     u6180:
  5553  0022D6  0E80               	movlw	128
  5554  0022D8  1A11               	xorwf	___fladd@signs^0,f,c
  5555  0022DA                     l6551:
  5556  0022DA  C013  F014         	movff	___fladd@bexp,___fladd@grs
  5557  0022DE  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5558  0022E2  C014  F012         	movff	___fladd@grs,___fladd@aexp
  5559  0022E6  C005  F014         	movff	___fladd@b,___fladd@grs
  5560  0022EA  C009  F005         	movff	___fladd@a,___fladd@b
  5561  0022EE  C014  F009         	movff	___fladd@grs,___fladd@a
  5562  0022F2  C006  F014         	movff	___fladd@b+1,___fladd@grs
  5563  0022F6  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  5564  0022FA  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  5565  0022FE  C007  F014         	movff	___fladd@b+2,___fladd@grs
  5566  002302  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  5567  002306  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  5568  00230A  C008  F014         	movff	___fladd@b+3,___fladd@grs
  5569  00230E  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  5570  002312  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  5571  002316                     l6581:
  5572  002316  0E00               	movlw	0
  5573  002318  6E14               	movwf	___fladd@grs^0,c
  5574  00231A  5013               	movf	___fladd@bexp^0,w,c
  5575  00231C  C012  F00D         	movff	___fladd@aexp,??___fladd
  5576  002320  6A0E               	clrf	(??___fladd+1)^0,c
  5577  002322  5E0D               	subwf	??___fladd^0,f,c
  5578  002324  0E00               	movlw	0
  5579  002326  5A0E               	subwfb	(??___fladd+1)^0,f,c
  5580  002328  BE0E               	btfsc	(??___fladd+1)^0,7,c
  5581  00232A  EFA0  F011         	goto	u6191
  5582  00232E  500E               	movf	(??___fladd+1)^0,w,c
  5583  002330  E109               	bnz	u6190
  5584  002332  0E1A               	movlw	26
  5585  002334  5C0D               	subwf	??___fladd^0,w,c
  5586  002336  A0D8               	btfss	status,0,c
  5587  002338  EFA0  F011         	goto	u6191
  5588  00233C  EFA2  F011         	goto	u6190
  5589  002340                     u6191:
  5590  002340  EFD9  F011         	goto	l1323
  5591  002344                     u6190:
  5592  002344  5005               	movf	___fladd@b^0,w,c
  5593  002346  1006               	iorwf	(___fladd@b+1)^0,w,c
  5594  002348  1007               	iorwf	(___fladd@b+2)^0,w,c
  5595  00234A  1008               	iorwf	(___fladd@b+3)^0,w,c
  5596  00234C  A4D8               	btfss	status,2,c
  5597  00234E  EFAB  F011         	goto	u6201
  5598  002352  EFAE  F011         	goto	u6200
  5599  002356                     u6201:
  5600  002356  0E01               	movlw	1
  5601  002358  EFAF  F011         	goto	u6210
  5602  00235C                     u6200:
  5603  00235C  0E00               	movlw	0
  5604  00235E                     u6210:
  5605  00235E  6E14               	movwf	___fladd@grs^0,c
  5606  002360  0E00               	movlw	0
  5607  002362  6E05               	movwf	___fladd@b^0,c
  5608  002364  0E00               	movlw	0
  5609  002366  6E06               	movwf	(___fladd@b+1)^0,c
  5610  002368  0E00               	movlw	0
  5611  00236A  6E07               	movwf	(___fladd@b+2)^0,c
  5612  00236C  0E00               	movlw	0
  5613  00236E  6E08               	movwf	(___fladd@b+3)^0,c
  5614  002370  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5615  002374  EFE2  F011         	goto	l1322
  5616  002378                     l1324:
  5617  002378  A014               	btfss	___fladd@grs^0,0,c
  5618  00237A  EFC1  F011         	goto	u6221
  5619  00237E  EFC3  F011         	goto	u6220
  5620  002382                     u6221:
  5621  002382  EFC9  F011         	goto	l6593
  5622  002386                     u6220:
  5623  002386  90D8               	bcf	status,0,c
  5624  002388  3014               	rrcf	___fladd@grs^0,w,c
  5625  00238A  0901               	iorlw	1
  5626  00238C  6E14               	movwf	___fladd@grs^0,c
  5627  00238E  EFCB  F011         	goto	l6595
  5628  002392                     l6593:
  5629  002392  90D8               	bcf	status,0,c
  5630  002394  3214               	rrcf	___fladd@grs^0,f,c
  5631  002396                     l6595:
  5632  002396  A005               	btfss	___fladd@b^0,0,c
  5633  002398  EFD0  F011         	goto	u6231
  5634  00239C  EFD2  F011         	goto	u6230
  5635  0023A0                     u6231:
  5636  0023A0  EFD3  F011         	goto	l6599
  5637  0023A4                     u6230:
  5638  0023A4  8E14               	bsf	___fladd@grs^0,7,c
  5639  0023A6                     l6599:
  5640  0023A6  3408               	rlcf	(___fladd@b+3)^0,w,c
  5641  0023A8  3208               	rrcf	(___fladd@b+3)^0,f,c
  5642  0023AA  3207               	rrcf	(___fladd@b+2)^0,f,c
  5643  0023AC  3206               	rrcf	(___fladd@b+1)^0,f,c
  5644  0023AE  3205               	rrcf	___fladd@b^0,f,c
  5645  0023B0  2A13               	incf	___fladd@bexp^0,f,c
  5646  0023B2                     l1323:
  5647  0023B2  5012               	movf	___fladd@aexp^0,w,c
  5648  0023B4  5C13               	subwf	___fladd@bexp^0,w,c
  5649  0023B6  A0D8               	btfss	status,0,c
  5650  0023B8  EFE0  F011         	goto	u6241
  5651  0023BC  EFE2  F011         	goto	u6240
  5652  0023C0                     u6241:
  5653  0023C0  EFBC  F011         	goto	l1324
  5654  0023C4                     u6240:
  5655  0023C4                     l1322:
  5656  0023C4  BC11               	btfsc	___fladd@signs^0,6,c
  5657  0023C6  EFE7  F011         	goto	u6251
  5658  0023CA  EFE9  F011         	goto	u6250
  5659  0023CE                     u6251:
  5660  0023CE  EF29  F012         	goto	l6627
  5661  0023D2                     u6250:
  5662  0023D2  5013               	movf	___fladd@bexp^0,w,c
  5663  0023D4  A4D8               	btfss	status,2,c
  5664  0023D6  EFEF  F011         	goto	u6261
  5665  0023DA  EFF1  F011         	goto	u6260
  5666  0023DE                     u6261:
  5667  0023DE  EFFB  F011         	goto	l6609
  5668  0023E2                     u6260:
  5669  0023E2  0E00               	movlw	0
  5670  0023E4  6E05               	movwf	?___fladd^0,c
  5671  0023E6  0E00               	movlw	0
  5672  0023E8  6E06               	movwf	(?___fladd+1)^0,c
  5673  0023EA  0E00               	movlw	0
  5674  0023EC  6E07               	movwf	(?___fladd+2)^0,c
  5675  0023EE  0E00               	movlw	0
  5676  0023F0  6E08               	movwf	(?___fladd+3)^0,c
  5677  0023F2  EF4A  F013         	goto	l1331
  5678  0023F6                     l6609:
  5679  0023F6  5009               	movf	___fladd@a^0,w,c
  5680  0023F8  2605               	addwf	___fladd@b^0,f,c
  5681  0023FA  500A               	movf	(___fladd@a+1)^0,w,c
  5682  0023FC  2206               	addwfc	(___fladd@b+1)^0,f,c
  5683  0023FE  500B               	movf	(___fladd@a+2)^0,w,c
  5684  002400  2207               	addwfc	(___fladd@b+2)^0,f,c
  5685  002402  500C               	movf	(___fladd@a+3)^0,w,c
  5686  002404  2208               	addwfc	(___fladd@b+3)^0,f,c
  5687  002406  A008               	btfss	(___fladd@b+3)^0,0,c
  5688  002408  EF08  F012         	goto	u6271
  5689  00240C  EF0A  F012         	goto	u6270
  5690  002410                     u6271:
  5691  002410  EFB6  F012         	goto	l6663
  5692  002414                     u6270:
  5693  002414  A014               	btfss	___fladd@grs^0,0,c
  5694  002416  EF0F  F012         	goto	u6281
  5695  00241A  EF11  F012         	goto	u6280
  5696  00241E                     u6281:
  5697  00241E  EF17  F012         	goto	l6617
  5698  002422                     u6280:
  5699  002422  90D8               	bcf	status,0,c
  5700  002424  3014               	rrcf	___fladd@grs^0,w,c
  5701  002426  0901               	iorlw	1
  5702  002428  6E14               	movwf	___fladd@grs^0,c
  5703  00242A  EF19  F012         	goto	l6619
  5704  00242E                     l6617:
  5705  00242E  90D8               	bcf	status,0,c
  5706  002430  3214               	rrcf	___fladd@grs^0,f,c
  5707  002432                     l6619:
  5708  002432  A005               	btfss	___fladd@b^0,0,c
  5709  002434  EF1E  F012         	goto	u6291
  5710  002438  EF20  F012         	goto	u6290
  5711  00243C                     u6291:
  5712  00243C  EF21  F012         	goto	l6623
  5713  002440                     u6290:
  5714  002440  8E14               	bsf	___fladd@grs^0,7,c
  5715  002442                     l6623:
  5716  002442  3408               	rlcf	(___fladd@b+3)^0,w,c
  5717  002444  3208               	rrcf	(___fladd@b+3)^0,f,c
  5718  002446  3207               	rrcf	(___fladd@b+2)^0,f,c
  5719  002448  3206               	rrcf	(___fladd@b+1)^0,f,c
  5720  00244A  3205               	rrcf	___fladd@b^0,f,c
  5721  00244C  2A13               	incf	___fladd@bexp^0,f,c
  5722  00244E  EFB6  F012         	goto	l6663
  5723  002452                     l6627:
  5724  002452  5009               	movf	___fladd@a^0,w,c
  5725  002454  5C05               	subwf	___fladd@b^0,w,c
  5726  002456  500A               	movf	(___fladd@a+1)^0,w,c
  5727  002458  5806               	subwfb	(___fladd@b+1)^0,w,c
  5728  00245A  500B               	movf	(___fladd@a+2)^0,w,c
  5729  00245C  5807               	subwfb	(___fladd@b+2)^0,w,c
  5730  00245E  5008               	movf	(___fladd@b+3)^0,w,c
  5731  002460  0A80               	xorlw	128
  5732  002462  6E0D               	movwf	??___fladd^0,c
  5733  002464  500C               	movf	(___fladd@a+3)^0,w,c
  5734  002466  0A80               	xorlw	128
  5735  002468  580D               	subwfb	??___fladd^0,w,c
  5736  00246A  B0D8               	btfsc	status,0,c
  5737  00246C  EF3A  F012         	goto	u6301
  5738  002470  EF3C  F012         	goto	u6300
  5739  002474                     u6301:
  5740  002474  EF67  F012         	goto	l6637
  5741  002478                     u6300:
  5742  002478  5005               	movf	___fladd@b^0,w,c
  5743  00247A  5C09               	subwf	___fladd@a^0,w,c
  5744  00247C  6E0D               	movwf	??___fladd^0,c
  5745  00247E  5006               	movf	(___fladd@b+1)^0,w,c
  5746  002480  580A               	subwfb	(___fladd@a+1)^0,w,c
  5747  002482  6E0E               	movwf	(??___fladd+1)^0,c
  5748  002484  5007               	movf	(___fladd@b+2)^0,w,c
  5749  002486  580B               	subwfb	(___fladd@a+2)^0,w,c
  5750  002488  6E0F               	movwf	(??___fladd+2)^0,c
  5751  00248A  5008               	movf	(___fladd@b+3)^0,w,c
  5752  00248C  580C               	subwfb	(___fladd@a+3)^0,w,c
  5753  00248E  6E10               	movwf	(??___fladd+3)^0,c
  5754  002490  0EFF               	movlw	255
  5755  002492  240D               	addwf	??___fladd^0,w,c
  5756  002494  6E05               	movwf	___fladd@b^0,c
  5757  002496  0EFF               	movlw	255
  5758  002498  200E               	addwfc	(??___fladd+1)^0,w,c
  5759  00249A  6E06               	movwf	(___fladd@b+1)^0,c
  5760  00249C  0EFF               	movlw	255
  5761  00249E  200F               	addwfc	(??___fladd+2)^0,w,c
  5762  0024A0  6E07               	movwf	(___fladd@b+2)^0,c
  5763  0024A2  0EFF               	movlw	255
  5764  0024A4  2010               	addwfc	(??___fladd+3)^0,w,c
  5765  0024A6  6E08               	movwf	(___fladd@b+3)^0,c
  5766  0024A8  0E80               	movlw	128
  5767  0024AA  1A11               	xorwf	___fladd@signs^0,f,c
  5768  0024AC  6C14               	negf	___fladd@grs^0,c
  5769  0024AE  5014               	movf	___fladd@grs^0,w,c
  5770  0024B0  A4D8               	btfss	status,2,c
  5771  0024B2  EF5D  F012         	goto	u6311
  5772  0024B6  EF5F  F012         	goto	u6310
  5773  0024BA                     u6311:
  5774  0024BA  EF6F  F012         	goto	l1339
  5775  0024BE                     u6310:
  5776  0024BE  0E01               	movlw	1
  5777  0024C0  2605               	addwf	___fladd@b^0,f,c
  5778  0024C2  0E00               	movlw	0
  5779  0024C4  2206               	addwfc	(___fladd@b+1)^0,f,c
  5780  0024C6  2207               	addwfc	(___fladd@b+2)^0,f,c
  5781  0024C8  2208               	addwfc	(___fladd@b+3)^0,f,c
  5782  0024CA  EF6F  F012         	goto	l1339
  5783  0024CE                     l6637:
  5784  0024CE  5009               	movf	___fladd@a^0,w,c
  5785  0024D0  5E05               	subwf	___fladd@b^0,f,c
  5786  0024D2  500A               	movf	(___fladd@a+1)^0,w,c
  5787  0024D4  5A06               	subwfb	(___fladd@b+1)^0,f,c
  5788  0024D6  500B               	movf	(___fladd@a+2)^0,w,c
  5789  0024D8  5A07               	subwfb	(___fladd@b+2)^0,f,c
  5790  0024DA  500C               	movf	(___fladd@a+3)^0,w,c
  5791  0024DC  5A08               	subwfb	(___fladd@b+3)^0,f,c
  5792  0024DE                     l1339:
  5793  0024DE  5005               	movf	___fladd@b^0,w,c
  5794  0024E0  1006               	iorwf	(___fladd@b+1)^0,w,c
  5795  0024E2  1007               	iorwf	(___fladd@b+2)^0,w,c
  5796  0024E4  1008               	iorwf	(___fladd@b+3)^0,w,c
  5797  0024E6  A4D8               	btfss	status,2,c
  5798  0024E8  EF78  F012         	goto	u6321
  5799  0024EC  EF7A  F012         	goto	u6320
  5800  0024F0                     u6321:
  5801  0024F0  EFAF  F012         	goto	l6661
  5802  0024F4                     u6320:
  5803  0024F4  5014               	movf	___fladd@grs^0,w,c
  5804  0024F6  A4D8               	btfss	status,2,c
  5805  0024F8  EF80  F012         	goto	u6331
  5806  0024FC  EF82  F012         	goto	u6330
  5807  002500                     u6331:
  5808  002500  EFAF  F012         	goto	l6661
  5809  002504                     u6330:
  5810  002504  0E00               	movlw	0
  5811  002506  6E05               	movwf	?___fladd^0,c
  5812  002508  0E00               	movlw	0
  5813  00250A  6E06               	movwf	(?___fladd+1)^0,c
  5814  00250C  0E00               	movlw	0
  5815  00250E  6E07               	movwf	(?___fladd+2)^0,c
  5816  002510  0E00               	movlw	0
  5817  002512  6E08               	movwf	(?___fladd+3)^0,c
  5818  002514  EF4A  F013         	goto	l1331
  5819  002518                     l6645:
  5820  002518  90D8               	bcf	status,0,c
  5821  00251A  3605               	rlcf	___fladd@b^0,f,c
  5822  00251C  3606               	rlcf	(___fladd@b+1)^0,f,c
  5823  00251E  3607               	rlcf	(___fladd@b+2)^0,f,c
  5824  002520  3608               	rlcf	(___fladd@b+3)^0,f,c
  5825  002522  AE14               	btfss	___fladd@grs^0,7,c
  5826  002524  EF96  F012         	goto	u6341
  5827  002528  EF98  F012         	goto	u6340
  5828  00252C                     u6341:
  5829  00252C  EF99  F012         	goto	l6651
  5830  002530                     u6340:
  5831  002530  8005               	bsf	___fladd@b^0,0,c
  5832  002532                     l6651:
  5833  002532  A014               	btfss	___fladd@grs^0,0,c
  5834  002534  EF9E  F012         	goto	u6351
  5835  002538  EFA0  F012         	goto	u6350
  5836  00253C                     u6351:
  5837  00253C  EFA4  F012         	goto	l6655
  5838  002540                     u6350:
  5839  002540  80D8               	bsf	status,0,c
  5840  002542  3614               	rlcf	___fladd@grs^0,f,c
  5841  002544  EFA6  F012         	goto	l6657
  5842  002548                     l6655:
  5843  002548  90D8               	bcf	status,0,c
  5844  00254A  3614               	rlcf	___fladd@grs^0,f,c
  5845  00254C                     l6657:
  5846  00254C  5013               	movf	___fladd@bexp^0,w,c
  5847  00254E  B4D8               	btfsc	status,2,c
  5848  002550  EFAC  F012         	goto	u6361
  5849  002554  EFAE  F012         	goto	u6360
  5850  002558                     u6361:
  5851  002558  EFAF  F012         	goto	l6661
  5852  00255C                     u6360:
  5853  00255C  0613               	decf	___fladd@bexp^0,f,c
  5854  00255E                     l6661:
  5855  00255E  AE07               	btfss	(___fladd@b+2)^0,7,c
  5856  002560  EFB4  F012         	goto	u6371
  5857  002564  EFB6  F012         	goto	u6370
  5858  002568                     u6371:
  5859  002568  EF8C  F012         	goto	l6645
  5860  00256C                     u6370:
  5861  00256C                     l6663:
  5862  00256C  0E00               	movlw	0
  5863  00256E  6E12               	movwf	___fladd@aexp^0,c
  5864  002570  AE14               	btfss	___fladd@grs^0,7,c
  5865  002572  EFBD  F012         	goto	u6381
  5866  002576  EFBF  F012         	goto	u6380
  5867  00257A                     u6381:
  5868  00257A  EFD7  F012         	goto	l1348
  5869  00257E                     u6380:
  5870  00257E  C014  F00D         	movff	___fladd@grs,??___fladd
  5871  002582  0E7F               	movlw	127
  5872  002584  160D               	andwf	??___fladd^0,f,c
  5873  002586  B4D8               	btfsc	status,2,c
  5874  002588  EFC8  F012         	goto	u6391
  5875  00258C  EFCA  F012         	goto	u6390
  5876  002590                     u6391:
  5877  002590  EFCE  F012         	goto	l1349
  5878  002594                     u6390:
  5879  002594                     l6669:
  5880  002594  0E01               	movlw	1
  5881  002596  6E12               	movwf	___fladd@aexp^0,c
  5882  002598  EFD7  F012         	goto	l1348
  5883  00259C                     l1349:
  5884  00259C  A005               	btfss	___fladd@b^0,0,c
  5885  00259E  EFD3  F012         	goto	u6401
  5886  0025A2  EFD5  F012         	goto	u6400
  5887  0025A6                     u6401:
  5888  0025A6  EFD7  F012         	goto	l1348
  5889  0025AA                     u6400:
  5890  0025AA  EFCA  F012         	goto	l6669
  5891  0025AE                     l1348:
  5892  0025AE  5012               	movf	___fladd@aexp^0,w,c
  5893  0025B0  B4D8               	btfsc	status,2,c
  5894  0025B2  EFDD  F012         	goto	u6411
  5895  0025B6  EFDF  F012         	goto	u6410
  5896  0025BA                     u6411:
  5897  0025BA  EF0A  F013         	goto	l6681
  5898  0025BE                     u6410:
  5899  0025BE  0E01               	movlw	1
  5900  0025C0  2605               	addwf	___fladd@b^0,f,c
  5901  0025C2  0E00               	movlw	0
  5902  0025C4  2206               	addwfc	(___fladd@b+1)^0,f,c
  5903  0025C6  2207               	addwfc	(___fladd@b+2)^0,f,c
  5904  0025C8  2208               	addwfc	(___fladd@b+3)^0,f,c
  5905  0025CA  A008               	btfss	(___fladd@b+3)^0,0,c
  5906  0025CC  EFEA  F012         	goto	u6421
  5907  0025D0  EFEC  F012         	goto	u6420
  5908  0025D4                     u6421:
  5909  0025D4  EF0A  F013         	goto	l6681
  5910  0025D8                     u6420:
  5911  0025D8  C005  F00D         	movff	___fladd@b,??___fladd
  5912  0025DC  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  5913  0025E0  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  5914  0025E4  C008  F010         	movff	___fladd@b+3,??___fladd+3
  5915  0025E8  3410               	rlcf	(??___fladd+3)^0,w,c
  5916  0025EA  3210               	rrcf	(??___fladd+3)^0,f,c
  5917  0025EC  320F               	rrcf	(??___fladd+2)^0,f,c
  5918  0025EE  320E               	rrcf	(??___fladd+1)^0,f,c
  5919  0025F0  320D               	rrcf	??___fladd^0,f,c
  5920  0025F2  C00D  F005         	movff	??___fladd,___fladd@b
  5921  0025F6  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  5922  0025FA  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  5923  0025FE  C010  F008         	movff	??___fladd+3,___fladd@b+3
  5924  002602  2813               	incf	___fladd@bexp^0,w,c
  5925  002604  B4D8               	btfsc	status,2,c
  5926  002606  EF07  F013         	goto	u6431
  5927  00260A  EF09  F013         	goto	u6430
  5928  00260E                     u6431:
  5929  00260E  EF0A  F013         	goto	l6681
  5930  002612                     u6430:
  5931  002612  2A13               	incf	___fladd@bexp^0,f,c
  5932  002614                     l6681:
  5933  002614  2813               	incf	___fladd@bexp^0,w,c
  5934  002616  B4D8               	btfsc	status,2,c
  5935  002618  EF10  F013         	goto	u6441
  5936  00261C  EF12  F013         	goto	u6440
  5937  002620                     u6441:
  5938  002620  EF1A  F013         	goto	l6685
  5939  002624                     u6440:
  5940  002624  5013               	movf	___fladd@bexp^0,w,c
  5941  002626  A4D8               	btfss	status,2,c
  5942  002628  EF18  F013         	goto	u6451
  5943  00262C  EF1A  F013         	goto	u6450
  5944  002630                     u6451:
  5945  002630  EF2C  F013         	goto	l6689
  5946  002634                     u6450:
  5947  002634                     l6685:
  5948  002634  0E00               	movlw	0
  5949  002636  6E05               	movwf	___fladd@b^0,c
  5950  002638  0E00               	movlw	0
  5951  00263A  6E06               	movwf	(___fladd@b+1)^0,c
  5952  00263C  0E00               	movlw	0
  5953  00263E  6E07               	movwf	(___fladd@b+2)^0,c
  5954  002640  0E00               	movlw	0
  5955  002642  6E08               	movwf	(___fladd@b+3)^0,c
  5956  002644  5013               	movf	___fladd@bexp^0,w,c
  5957  002646  A4D8               	btfss	status,2,c
  5958  002648  EF28  F013         	goto	u6461
  5959  00264C  EF2A  F013         	goto	u6460
  5960  002650                     u6461:
  5961  002650  EF2C  F013         	goto	l6689
  5962  002654                     u6460:
  5963  002654  0E00               	movlw	0
  5964  002656  6E11               	movwf	___fladd@signs^0,c
  5965  002658                     l6689:
  5966  002658  A013               	btfss	___fladd@bexp^0,0,c
  5967  00265A  EF31  F013         	goto	u6471
  5968  00265E  EF33  F013         	goto	u6470
  5969  002662                     u6471:
  5970  002662  EF36  F013         	goto	l6693
  5971  002666                     u6470:
  5972  002666  8E07               	bsf	(___fladd@b+2)^0,7,c
  5973  002668  EF37  F013         	goto	l6695
  5974  00266C                     l6693:
  5975  00266C  9E07               	bcf	(___fladd@b+2)^0,7,c
  5976  00266E                     l6695:
  5977  00266E  90D8               	bcf	status,0,c
  5978  002670  3013               	rrcf	___fladd@bexp^0,w,c
  5979  002672  6E08               	movwf	(___fladd@b+3)^0,c
  5980  002674  AE11               	btfss	___fladd@signs^0,7,c
  5981  002676  EF3F  F013         	goto	u6481
  5982  00267A  EF41  F013         	goto	u6480
  5983  00267E                     u6481:
  5984  00267E  EF42  F013         	goto	l6701
  5985  002682                     u6480:
  5986  002682  8E08               	bsf	(___fladd@b+3)^0,7,c
  5987  002684                     l6701:
  5988  002684  C005  F005         	movff	___fladd@b,?___fladd
  5989  002688  C006  F006         	movff	___fladd@b+1,?___fladd+1
  5990  00268C  C007  F007         	movff	___fladd@b+2,?___fladd+2
  5991  002690  C008  F008         	movff	___fladd@b+3,?___fladd+3
  5992  002694                     l1331:
  5993  002694  0012               	return		;funcret
  5994  002696                     __end_of___fladd:
  5995                           	callstack 0
  5996                           
  5997 ;; *************** function ___flneg *****************
  5998 ;; Defined at:
  5999 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;  f1              4    4[COMRAM] unsigned char 
  6002 ;; Auto vars:     Size  Location     Type
  6003 ;;		None
  6004 ;; Return value:  Size  Location     Type
  6005 ;;                  4    4[COMRAM] unsigned char 
  6006 ;; Registers used:
  6007 ;;		wreg, status,2, status,0
  6008 ;; Tracked objects:
  6009 ;;		On entry : 0/0
  6010 ;;		On exit  : 0/0
  6011 ;;		Unchanged: 0/0
  6012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6013 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6016 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6017 ;;Total ram usage:        4 bytes
  6018 ;; Hardware stack levels used: 1
  6019 ;; Hardware stack levels required when called: 4
  6020 ;; This function calls:
  6021 ;;		Nothing
  6022 ;; This function is called by:
  6023 ;;		_efgtoa
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text20
  6028  00435A                     __ptext20:
  6029                           	callstack 0
  6030  00435A                     ___flneg:
  6031                           	callstack 22
  6032  00435A  5005               	movf	___flneg@f1^0,w,c
  6033  00435C  1006               	iorwf	(___flneg@f1+1)^0,w,c
  6034  00435E  1007               	iorwf	(___flneg@f1+2)^0,w,c
  6035  004360  1008               	iorwf	(___flneg@f1+3)^0,w,c
  6036  004362  B4D8               	btfsc	status,2,c
  6037  004364  EFB6  F021         	goto	u7151
  6038  004368  EFB8  F021         	goto	u7150
  6039  00436C                     u7151:
  6040  00436C  EFC0  F021         	goto	l7129
  6041  004370                     u7150:
  6042  004370  0E00               	movlw	0
  6043  004372  1A05               	xorwf	___flneg@f1^0,f,c
  6044  004374  0E00               	movlw	0
  6045  004376  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  6046  004378  0E00               	movlw	0
  6047  00437A  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  6048  00437C  0E80               	movlw	128
  6049  00437E  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  6050  004380                     l7129:
  6051  004380  C005  F005         	movff	___flneg@f1,?___flneg
  6052  004384  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  6053  004388  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  6054  00438C  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  6055  004390  0012               	return		;funcret
  6056  004392                     __end_of___flneg:
  6057                           	callstack 0
  6058                           
  6059 ;; *************** function ___flmul *****************
  6060 ;; Defined at:
  6061 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;  b               4    4[COMRAM] unsigned char 
  6064 ;;  a               4    8[COMRAM] unsigned char 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  prod            4   23[COMRAM] struct .
  6067 ;;  grs             4   18[COMRAM] unsigned long 
  6068 ;;  temp            2   27[COMRAM] struct .
  6069 ;;  bexp            1   22[COMRAM] unsigned char 
  6070 ;;  aexp            1   17[COMRAM] unsigned char 
  6071 ;;  sign            1   16[COMRAM] unsigned char 
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  4    4[COMRAM] unsigned char 
  6074 ;; Registers used:
  6075 ;;		wreg, status,2, status,0, prodl, prodh
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6081 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6082 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6083 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6084 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6085 ;;Total ram usage:       25 bytes
  6086 ;; Hardware stack levels used: 1
  6087 ;; Hardware stack levels required when called: 4
  6088 ;; This function calls:
  6089 ;;		Nothing
  6090 ;; This function is called by:
  6091 ;;		_efgtoa
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094                           
  6095                           	psect	text21
  6096  002696                     __ptext21:
  6097                           	callstack 0
  6098  002696                     ___flmul:
  6099                           	callstack 22
  6100  002696  5008               	movf	(___flmul@b+3)^0,w,c
  6101  002698  0B80               	andlw	128
  6102  00269A  6E11               	movwf	___flmul@sign^0,c
  6103  00269C  5008               	movf	(___flmul@b+3)^0,w,c
  6104  00269E  2408               	addwf	(___flmul@b+3)^0,w,c
  6105  0026A0  6E17               	movwf	___flmul@bexp^0,c
  6106  0026A2  AE07               	btfss	(___flmul@b+2)^0,7,c
  6107  0026A4  EF56  F013         	goto	u6761
  6108  0026A8  EF58  F013         	goto	u6760
  6109  0026AC                     u6761:
  6110  0026AC  EF59  F013         	goto	l6877
  6111  0026B0                     u6760:
  6112  0026B0  8017               	bsf	___flmul@bexp^0,0,c
  6113  0026B2                     l6877:
  6114  0026B2  5017               	movf	___flmul@bexp^0,w,c
  6115  0026B4  B4D8               	btfsc	status,2,c
  6116  0026B6  EF5F  F013         	goto	u6771
  6117  0026BA  EF61  F013         	goto	u6770
  6118  0026BE                     u6771:
  6119  0026BE  EF74  F013         	goto	l6885
  6120  0026C2                     u6770:
  6121  0026C2  2817               	incf	___flmul@bexp^0,w,c
  6122  0026C4  A4D8               	btfss	status,2,c
  6123  0026C6  EF67  F013         	goto	u6781
  6124  0026CA  EF69  F013         	goto	u6780
  6125  0026CE                     u6781:
  6126  0026CE  EF71  F013         	goto	l6883
  6127  0026D2                     u6780:
  6128  0026D2  0E00               	movlw	0
  6129  0026D4  6E05               	movwf	___flmul@b^0,c
  6130  0026D6  0E00               	movlw	0
  6131  0026D8  6E06               	movwf	(___flmul@b+1)^0,c
  6132  0026DA  0E00               	movlw	0
  6133  0026DC  6E07               	movwf	(___flmul@b+2)^0,c
  6134  0026DE  0E00               	movlw	0
  6135  0026E0  6E08               	movwf	(___flmul@b+3)^0,c
  6136  0026E2                     l6883:
  6137  0026E2  8E07               	bsf	(___flmul@b+2)^0,7,c
  6138  0026E4  EF7C  F013         	goto	l6887
  6139  0026E8                     l6885:
  6140  0026E8  0E00               	movlw	0
  6141  0026EA  6E05               	movwf	___flmul@b^0,c
  6142  0026EC  0E00               	movlw	0
  6143  0026EE  6E06               	movwf	(___flmul@b+1)^0,c
  6144  0026F0  0E00               	movlw	0
  6145  0026F2  6E07               	movwf	(___flmul@b+2)^0,c
  6146  0026F4  0E00               	movlw	0
  6147  0026F6  6E08               	movwf	(___flmul@b+3)^0,c
  6148  0026F8                     l6887:
  6149  0026F8  500C               	movf	(___flmul@a+3)^0,w,c
  6150  0026FA  0B80               	andlw	128
  6151  0026FC  1A11               	xorwf	___flmul@sign^0,f,c
  6152  0026FE  500C               	movf	(___flmul@a+3)^0,w,c
  6153  002700  240C               	addwf	(___flmul@a+3)^0,w,c
  6154  002702  6E12               	movwf	___flmul@aexp^0,c
  6155  002704  AE0B               	btfss	(___flmul@a+2)^0,7,c
  6156  002706  EF87  F013         	goto	u6791
  6157  00270A  EF89  F013         	goto	u6790
  6158  00270E                     u6791:
  6159  00270E  EF8A  F013         	goto	l6895
  6160  002712                     u6790:
  6161  002712  8012               	bsf	___flmul@aexp^0,0,c
  6162  002714                     l6895:
  6163  002714  5012               	movf	___flmul@aexp^0,w,c
  6164  002716  B4D8               	btfsc	status,2,c
  6165  002718  EF90  F013         	goto	u6801
  6166  00271C  EF92  F013         	goto	u6800
  6167  002720                     u6801:
  6168  002720  EFA5  F013         	goto	l6903
  6169  002724                     u6800:
  6170  002724  2812               	incf	___flmul@aexp^0,w,c
  6171  002726  A4D8               	btfss	status,2,c
  6172  002728  EF98  F013         	goto	u6811
  6173  00272C  EF9A  F013         	goto	u6810
  6174  002730                     u6811:
  6175  002730  EFA2  F013         	goto	l6901
  6176  002734                     u6810:
  6177  002734  0E00               	movlw	0
  6178  002736  6E09               	movwf	___flmul@a^0,c
  6179  002738  0E00               	movlw	0
  6180  00273A  6E0A               	movwf	(___flmul@a+1)^0,c
  6181  00273C  0E00               	movlw	0
  6182  00273E  6E0B               	movwf	(___flmul@a+2)^0,c
  6183  002740  0E00               	movlw	0
  6184  002742  6E0C               	movwf	(___flmul@a+3)^0,c
  6185  002744                     l6901:
  6186  002744  8E0B               	bsf	(___flmul@a+2)^0,7,c
  6187  002746  EFAD  F013         	goto	l1408
  6188  00274A                     l6903:
  6189  00274A  0E00               	movlw	0
  6190  00274C  6E09               	movwf	___flmul@a^0,c
  6191  00274E  0E00               	movlw	0
  6192  002750  6E0A               	movwf	(___flmul@a+1)^0,c
  6193  002752  0E00               	movlw	0
  6194  002754  6E0B               	movwf	(___flmul@a+2)^0,c
  6195  002756  0E00               	movlw	0
  6196  002758  6E0C               	movwf	(___flmul@a+3)^0,c
  6197  00275A                     l1408:
  6198  00275A  5012               	movf	___flmul@aexp^0,w,c
  6199  00275C  B4D8               	btfsc	status,2,c
  6200  00275E  EFB3  F013         	goto	u6821
  6201  002762  EFB5  F013         	goto	u6820
  6202  002766                     u6821:
  6203  002766  EFBD  F013         	goto	l6907
  6204  00276A                     u6820:
  6205  00276A  5017               	movf	___flmul@bexp^0,w,c
  6206  00276C  A4D8               	btfss	status,2,c
  6207  00276E  EFBB  F013         	goto	u6831
  6208  002772  EFBD  F013         	goto	u6830
  6209  002776                     u6831:
  6210  002776  EFC7  F013         	goto	l6911
  6211  00277A                     u6830:
  6212  00277A                     l6907:
  6213  00277A  0E00               	movlw	0
  6214  00277C  6E05               	movwf	?___flmul^0,c
  6215  00277E  0E00               	movlw	0
  6216  002780  6E06               	movwf	(?___flmul+1)^0,c
  6217  002782  0E00               	movlw	0
  6218  002784  6E07               	movwf	(?___flmul+2)^0,c
  6219  002786  0E00               	movlw	0
  6220  002788  6E08               	movwf	(?___flmul+3)^0,c
  6221  00278A  EF5F  F015         	goto	l1412
  6222  00278E                     l6911:
  6223  00278E  500B               	movf	(___flmul@a+2)^0,w,c
  6224  002790  0205               	mulwf	___flmul@b^0,c
  6225  002792  CFF3 F01C          	movff	prodl,___flmul@temp
  6226  002796  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6227  00279A  501C               	movf	___flmul@temp^0,w,c
  6228  00279C  6E13               	movwf	___flmul@grs^0,c
  6229  00279E  6A14               	clrf	(___flmul@grs+1)^0,c
  6230  0027A0  6A15               	clrf	(___flmul@grs+2)^0,c
  6231  0027A2  6A16               	clrf	(___flmul@grs+3)^0,c
  6232  0027A4  501D               	movf	(___flmul@temp+1)^0,w,c
  6233  0027A6  6E18               	movwf	___flmul@prod^0,c
  6234  0027A8  6A19               	clrf	(___flmul@prod+1)^0,c
  6235  0027AA  6A1A               	clrf	(___flmul@prod+2)^0,c
  6236  0027AC  6A1B               	clrf	(___flmul@prod+3)^0,c
  6237  0027AE  500A               	movf	(___flmul@a+1)^0,w,c
  6238  0027B0  0206               	mulwf	(___flmul@b+1)^0,c
  6239  0027B2  CFF3 F01C          	movff	prodl,___flmul@temp
  6240  0027B6  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6241  0027BA  501C               	movf	___flmul@temp^0,w,c
  6242  0027BC  2613               	addwf	___flmul@grs^0,f,c
  6243  0027BE  0E00               	movlw	0
  6244  0027C0  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6245  0027C2  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6246  0027C4  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6247  0027C6  501D               	movf	(___flmul@temp+1)^0,w,c
  6248  0027C8  2618               	addwf	___flmul@prod^0,f,c
  6249  0027CA  0E00               	movlw	0
  6250  0027CC  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6251  0027CE  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6252  0027D0  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6253  0027D2  5009               	movf	___flmul@a^0,w,c
  6254  0027D4  0207               	mulwf	(___flmul@b+2)^0,c
  6255  0027D6  CFF3 F01C          	movff	prodl,___flmul@temp
  6256  0027DA  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6257  0027DE  501C               	movf	___flmul@temp^0,w,c
  6258  0027E0  2613               	addwf	___flmul@grs^0,f,c
  6259  0027E2  0E00               	movlw	0
  6260  0027E4  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6261  0027E6  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6262  0027E8  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6263  0027EA  501D               	movf	(___flmul@temp+1)^0,w,c
  6264  0027EC  2618               	addwf	___flmul@prod^0,f,c
  6265  0027EE  0E00               	movlw	0
  6266  0027F0  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6267  0027F2  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6268  0027F4  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6269  0027F6  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  6270  0027FA  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  6271  0027FE  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  6272  002802  6A13               	clrf	___flmul@grs^0,c
  6273  002804  5009               	movf	___flmul@a^0,w,c
  6274  002806  0206               	mulwf	(___flmul@b+1)^0,c
  6275  002808  CFF3 F01C          	movff	prodl,___flmul@temp
  6276  00280C  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6277  002810  501C               	movf	___flmul@temp^0,w,c
  6278  002812  2613               	addwf	___flmul@grs^0,f,c
  6279  002814  501D               	movf	(___flmul@temp+1)^0,w,c
  6280  002816  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6281  002818  0E00               	movlw	0
  6282  00281A  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6283  00281C  0E00               	movlw	0
  6284  00281E  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6285  002820  500A               	movf	(___flmul@a+1)^0,w,c
  6286  002822  0205               	mulwf	___flmul@b^0,c
  6287  002824  CFF3 F01C          	movff	prodl,___flmul@temp
  6288  002828  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6289  00282C  501C               	movf	___flmul@temp^0,w,c
  6290  00282E  2613               	addwf	___flmul@grs^0,f,c
  6291  002830  501D               	movf	(___flmul@temp+1)^0,w,c
  6292  002832  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6293  002834  0E00               	movlw	0
  6294  002836  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6295  002838  0E00               	movlw	0
  6296  00283A  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6297  00283C  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  6298  002840  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  6299  002844  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  6300  002848  6A13               	clrf	___flmul@grs^0,c
  6301  00284A  5009               	movf	___flmul@a^0,w,c
  6302  00284C  0205               	mulwf	___flmul@b^0,c
  6303  00284E  CFF3 F01C          	movff	prodl,___flmul@temp
  6304  002852  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6305  002856  501C               	movf	___flmul@temp^0,w,c
  6306  002858  2613               	addwf	___flmul@grs^0,f,c
  6307  00285A  501D               	movf	(___flmul@temp+1)^0,w,c
  6308  00285C  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6309  00285E  0E00               	movlw	0
  6310  002860  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6311  002862  0E00               	movlw	0
  6312  002864  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6313  002866  500B               	movf	(___flmul@a+2)^0,w,c
  6314  002868  0206               	mulwf	(___flmul@b+1)^0,c
  6315  00286A  CFF3 F01C          	movff	prodl,___flmul@temp
  6316  00286E  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6317  002872  501C               	movf	___flmul@temp^0,w,c
  6318  002874  2618               	addwf	___flmul@prod^0,f,c
  6319  002876  501D               	movf	(___flmul@temp+1)^0,w,c
  6320  002878  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6321  00287A  0E00               	movlw	0
  6322  00287C  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6323  00287E  0E00               	movlw	0
  6324  002880  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6325  002882  500A               	movf	(___flmul@a+1)^0,w,c
  6326  002884  0207               	mulwf	(___flmul@b+2)^0,c
  6327  002886  CFF3 F01C          	movff	prodl,___flmul@temp
  6328  00288A  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6329  00288E  501C               	movf	___flmul@temp^0,w,c
  6330  002890  2618               	addwf	___flmul@prod^0,f,c
  6331  002892  501D               	movf	(___flmul@temp+1)^0,w,c
  6332  002894  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6333  002896  0E00               	movlw	0
  6334  002898  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6335  00289A  0E00               	movlw	0
  6336  00289C  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6337  00289E  500B               	movf	(___flmul@a+2)^0,w,c
  6338  0028A0  0207               	mulwf	(___flmul@b+2)^0,c
  6339  0028A2  CFF3 F01C          	movff	prodl,___flmul@temp
  6340  0028A6  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6341  0028AA  501C               	movf	___flmul@temp^0,w,c
  6342  0028AC  6E0D               	movwf	??___flmul^0,c
  6343  0028AE  501D               	movf	(___flmul@temp+1)^0,w,c
  6344  0028B0  6E0E               	movwf	(??___flmul+1)^0,c
  6345  0028B2  6A0F               	clrf	(??___flmul+2)^0,c
  6346  0028B4  6A10               	clrf	(??___flmul+3)^0,c
  6347  0028B6  C00F  F010         	movff	??___flmul+2,??___flmul+3
  6348  0028BA  C00E  F00F         	movff	??___flmul+1,??___flmul+2
  6349  0028BE  C00D  F00E         	movff	??___flmul,??___flmul+1
  6350  0028C2  6A0D               	clrf	??___flmul^0,c
  6351  0028C4  500D               	movf	??___flmul^0,w,c
  6352  0028C6  2618               	addwf	___flmul@prod^0,f,c
  6353  0028C8  500E               	movf	(??___flmul+1)^0,w,c
  6354  0028CA  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6355  0028CC  500F               	movf	(??___flmul+2)^0,w,c
  6356  0028CE  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6357  0028D0  5010               	movf	(??___flmul+3)^0,w,c
  6358  0028D2  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6359  0028D4  C013  F00D         	movff	___flmul@grs,??___flmul
  6360  0028D8  C014  F00E         	movff	___flmul@grs+1,??___flmul+1
  6361  0028DC  C015  F00F         	movff	___flmul@grs+2,??___flmul+2
  6362  0028E0  C016  F010         	movff	___flmul@grs+3,??___flmul+3
  6363  0028E4  0E19               	movlw	25
  6364  0028E6  EF7A  F014         	goto	u6840
  6365  0028EA                     u6845:
  6366  0028EA  90D8               	bcf	status,0,c
  6367  0028EC  3210               	rrcf	(??___flmul+3)^0,f,c
  6368  0028EE  320F               	rrcf	(??___flmul+2)^0,f,c
  6369  0028F0  320E               	rrcf	(??___flmul+1)^0,f,c
  6370  0028F2  320D               	rrcf	??___flmul^0,f,c
  6371  0028F4                     u6840:
  6372  0028F4  2EE8               	decfsz	wreg,f,c
  6373  0028F6  EF75  F014         	goto	u6845
  6374  0028FA  500D               	movf	??___flmul^0,w,c
  6375  0028FC  2618               	addwf	___flmul@prod^0,f,c
  6376  0028FE  500E               	movf	(??___flmul+1)^0,w,c
  6377  002900  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6378  002902  500F               	movf	(??___flmul+2)^0,w,c
  6379  002904  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6380  002906  5010               	movf	(??___flmul+3)^0,w,c
  6381  002908  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6382  00290A  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  6383  00290E  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  6384  002912  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  6385  002916  6A13               	clrf	___flmul@grs^0,c
  6386  002918  5012               	movf	___flmul@aexp^0,w,c
  6387  00291A  C017  F00D         	movff	___flmul@bexp,??___flmul
  6388  00291E  6A0E               	clrf	(??___flmul+1)^0,c
  6389  002920  260D               	addwf	??___flmul^0,f,c
  6390  002922  0E00               	movlw	0
  6391  002924  220E               	addwfc	(??___flmul+1)^0,f,c
  6392  002926  0E82               	movlw	130
  6393  002928  240D               	addwf	??___flmul^0,w,c
  6394  00292A  6E1C               	movwf	___flmul@temp^0,c
  6395  00292C  0EFF               	movlw	255
  6396  00292E  200E               	addwfc	(??___flmul+1)^0,w,c
  6397  002930  6E1D               	movwf	(___flmul@temp+1)^0,c
  6398  002932  EFB0  F014         	goto	l6959
  6399  002936                     l6953:
  6400  002936  90D8               	bcf	status,0,c
  6401  002938  3618               	rlcf	___flmul@prod^0,f,c
  6402  00293A  3619               	rlcf	(___flmul@prod+1)^0,f,c
  6403  00293C  361A               	rlcf	(___flmul@prod+2)^0,f,c
  6404  00293E  361B               	rlcf	(___flmul@prod+3)^0,f,c
  6405  002940  AE16               	btfss	(___flmul@grs+3)^0,7,c
  6406  002942  EFA5  F014         	goto	u6851
  6407  002946  EFA7  F014         	goto	u6850
  6408  00294A                     u6851:
  6409  00294A  EFA8  F014         	goto	l1415
  6410  00294E                     u6850:
  6411  00294E  8018               	bsf	___flmul@prod^0,0,c
  6412  002950                     l1415:
  6413  002950  90D8               	bcf	status,0,c
  6414  002952  3613               	rlcf	___flmul@grs^0,f,c
  6415  002954  3614               	rlcf	(___flmul@grs+1)^0,f,c
  6416  002956  3615               	rlcf	(___flmul@grs+2)^0,f,c
  6417  002958  3616               	rlcf	(___flmul@grs+3)^0,f,c
  6418  00295A  061C               	decf	___flmul@temp^0,f,c
  6419  00295C  A0D8               	btfss	status,0,c
  6420  00295E  061D               	decf	(___flmul@temp+1)^0,f,c
  6421  002960                     l6959:
  6422  002960  AE1A               	btfss	(___flmul@prod+2)^0,7,c
  6423  002962  EFB5  F014         	goto	u6861
  6424  002966  EFB7  F014         	goto	u6860
  6425  00296A                     u6861:
  6426  00296A  EF9B  F014         	goto	l6953
  6427  00296E                     u6860:
  6428  00296E  0E00               	movlw	0
  6429  002970  6E12               	movwf	___flmul@aexp^0,c
  6430  002972  AE16               	btfss	(___flmul@grs+3)^0,7,c
  6431  002974  EFBE  F014         	goto	u6871
  6432  002978  EFC0  F014         	goto	u6870
  6433  00297C                     u6871:
  6434  00297C  EFE4  F014         	goto	l1417
  6435  002980                     u6870:
  6436  002980  0EFF               	movlw	255
  6437  002982  1413               	andwf	___flmul@grs^0,w,c
  6438  002984  6E0D               	movwf	??___flmul^0,c
  6439  002986  0EFF               	movlw	255
  6440  002988  1414               	andwf	(___flmul@grs+1)^0,w,c
  6441  00298A  6E0E               	movwf	(??___flmul+1)^0,c
  6442  00298C  0EFF               	movlw	255
  6443  00298E  1415               	andwf	(___flmul@grs+2)^0,w,c
  6444  002990  6E0F               	movwf	(??___flmul+2)^0,c
  6445  002992  0E7F               	movlw	127
  6446  002994  1416               	andwf	(___flmul@grs+3)^0,w,c
  6447  002996  6E10               	movwf	(??___flmul+3)^0,c
  6448  002998  500D               	movf	??___flmul^0,w,c
  6449  00299A  100E               	iorwf	(??___flmul+1)^0,w,c
  6450  00299C  100F               	iorwf	(??___flmul+2)^0,w,c
  6451  00299E  1010               	iorwf	(??___flmul+3)^0,w,c
  6452  0029A0  B4D8               	btfsc	status,2,c
  6453  0029A2  EFD5  F014         	goto	u6881
  6454  0029A6  EFD7  F014         	goto	u6880
  6455  0029AA                     u6881:
  6456  0029AA  EFDB  F014         	goto	l1418
  6457  0029AE                     u6880:
  6458  0029AE                     l6967:
  6459  0029AE  0E01               	movlw	1
  6460  0029B0  6E12               	movwf	___flmul@aexp^0,c
  6461  0029B2  EFE4  F014         	goto	l1417
  6462  0029B6                     l1418:
  6463  0029B6  A018               	btfss	___flmul@prod^0,0,c
  6464  0029B8  EFE0  F014         	goto	u6891
  6465  0029BC  EFE2  F014         	goto	u6890
  6466  0029C0                     u6891:
  6467  0029C0  EFE4  F014         	goto	l1417
  6468  0029C4                     u6890:
  6469  0029C4  EFD7  F014         	goto	l6967
  6470  0029C8                     l1417:
  6471  0029C8  5012               	movf	___flmul@aexp^0,w,c
  6472  0029CA  B4D8               	btfsc	status,2,c
  6473  0029CC  EFEA  F014         	goto	u6901
  6474  0029D0  EFEC  F014         	goto	u6900
  6475  0029D4                     u6901:
  6476  0029D4  EF10  F015         	goto	l6979
  6477  0029D8                     u6900:
  6478  0029D8  0E01               	movlw	1
  6479  0029DA  2618               	addwf	___flmul@prod^0,f,c
  6480  0029DC  0E00               	movlw	0
  6481  0029DE  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6482  0029E0  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6483  0029E2  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6484  0029E4  A01B               	btfss	(___flmul@prod+3)^0,0,c
  6485  0029E6  EFF7  F014         	goto	u6911
  6486  0029EA  EFF9  F014         	goto	u6910
  6487  0029EE                     u6911:
  6488  0029EE  EF10  F015         	goto	l6979
  6489  0029F2                     u6910:
  6490  0029F2  C018  F00D         	movff	___flmul@prod,??___flmul
  6491  0029F6  C019  F00E         	movff	___flmul@prod+1,??___flmul+1
  6492  0029FA  C01A  F00F         	movff	___flmul@prod+2,??___flmul+2
  6493  0029FE  C01B  F010         	movff	___flmul@prod+3,??___flmul+3
  6494  002A02  3410               	rlcf	(??___flmul+3)^0,w,c
  6495  002A04  3210               	rrcf	(??___flmul+3)^0,f,c
  6496  002A06  320F               	rrcf	(??___flmul+2)^0,f,c
  6497  002A08  320E               	rrcf	(??___flmul+1)^0,f,c
  6498  002A0A  320D               	rrcf	??___flmul^0,f,c
  6499  002A0C  C00D  F018         	movff	??___flmul,___flmul@prod
  6500  002A10  C00E  F019         	movff	??___flmul+1,___flmul@prod+1
  6501  002A14  C00F  F01A         	movff	??___flmul+2,___flmul@prod+2
  6502  002A18  C010  F01B         	movff	??___flmul+3,___flmul@prod+3
  6503  002A1C  4A1C               	infsnz	___flmul@temp^0,f,c
  6504  002A1E  2A1D               	incf	(___flmul@temp+1)^0,f,c
  6505  002A20                     l6979:
  6506  002A20  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  6507  002A22  EF1B  F015         	goto	u6921
  6508  002A26  501D               	movf	(___flmul@temp+1)^0,w,c
  6509  002A28  E108               	bnz	u6920
  6510  002A2A  281C               	incf	___flmul@temp^0,w,c
  6511  002A2C  A0D8               	btfss	status,0,c
  6512  002A2E  EF1B  F015         	goto	u6921
  6513  002A32  EF1D  F015         	goto	u6920
  6514  002A36                     u6921:
  6515  002A36  EF27  F015         	goto	l6983
  6516  002A3A                     u6920:
  6517  002A3A  0E00               	movlw	0
  6518  002A3C  6E18               	movwf	___flmul@prod^0,c
  6519  002A3E  0E00               	movlw	0
  6520  002A40  6E19               	movwf	(___flmul@prod+1)^0,c
  6521  002A42  0E80               	movlw	128
  6522  002A44  6E1A               	movwf	(___flmul@prod+2)^0,c
  6523  002A46  0E7F               	movlw	127
  6524  002A48  6E1B               	movwf	(___flmul@prod+3)^0,c
  6525  002A4A  EF55  F015         	goto	l6995
  6526  002A4E                     l6983:
  6527  002A4E  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  6528  002A50  EF34  F015         	goto	u6930
  6529  002A54  501D               	movf	(___flmul@temp+1)^0,w,c
  6530  002A56  E106               	bnz	u6931
  6531  002A58  041C               	decf	___flmul@temp^0,w,c
  6532  002A5A  B0D8               	btfsc	status,0,c
  6533  002A5C  EF32  F015         	goto	u6931
  6534  002A60  EF34  F015         	goto	u6930
  6535  002A64                     u6931:
  6536  002A64  EF40  F015         	goto	l1425
  6537  002A68                     u6930:
  6538  002A68  0E00               	movlw	0
  6539  002A6A  6E18               	movwf	___flmul@prod^0,c
  6540  002A6C  0E00               	movlw	0
  6541  002A6E  6E19               	movwf	(___flmul@prod+1)^0,c
  6542  002A70  0E00               	movlw	0
  6543  002A72  6E1A               	movwf	(___flmul@prod+2)^0,c
  6544  002A74  0E00               	movlw	0
  6545  002A76  6E1B               	movwf	(___flmul@prod+3)^0,c
  6546  002A78  0E00               	movlw	0
  6547  002A7A  6E11               	movwf	___flmul@sign^0,c
  6548  002A7C  EF55  F015         	goto	l6995
  6549  002A80                     l1425:
  6550  002A80  C01C  F017         	movff	___flmul@temp,___flmul@bexp
  6551  002A84  0EFF               	movlw	255
  6552  002A86  1618               	andwf	___flmul@prod^0,f,c
  6553  002A88  0EFF               	movlw	255
  6554  002A8A  1619               	andwf	(___flmul@prod+1)^0,f,c
  6555  002A8C  0E7F               	movlw	127
  6556  002A8E  161A               	andwf	(___flmul@prod+2)^0,f,c
  6557  002A90  0E00               	movlw	0
  6558  002A92  161B               	andwf	(___flmul@prod+3)^0,f,c
  6559  002A94  A017               	btfss	___flmul@bexp^0,0,c
  6560  002A96  EF4F  F015         	goto	u6941
  6561  002A9A  EF51  F015         	goto	u6940
  6562  002A9E                     u6941:
  6563  002A9E  EF52  F015         	goto	l6993
  6564  002AA2                     u6940:
  6565  002AA2  8E1A               	bsf	(___flmul@prod+2)^0,7,c
  6566  002AA4                     l6993:
  6567  002AA4  90D8               	bcf	status,0,c
  6568  002AA6  3017               	rrcf	___flmul@bexp^0,w,c
  6569  002AA8  6E1B               	movwf	(___flmul@prod+3)^0,c
  6570  002AAA                     l6995:
  6571  002AAA  5011               	movf	___flmul@sign^0,w,c
  6572  002AAC  121B               	iorwf	(___flmul@prod+3)^0,f,c
  6573  002AAE  C018  F005         	movff	___flmul@prod,?___flmul
  6574  002AB2  C019  F006         	movff	___flmul@prod+1,?___flmul+1
  6575  002AB6  C01A  F007         	movff	___flmul@prod+2,?___flmul+2
  6576  002ABA  C01B  F008         	movff	___flmul@prod+3,?___flmul+3
  6577  002ABE                     l1412:
  6578  002ABE  0012               	return		;funcret
  6579  002AC0                     __end_of___flmul:
  6580                           	callstack 0
  6581                           
  6582 ;; *************** function ___flge *****************
  6583 ;; Defined at:
  6584 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;  ff1             4   29[COMRAM] unsigned char 
  6587 ;;  ff2             4   33[COMRAM] unsigned char 
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;		None
  6590 ;; Return value:  Size  Location     Type
  6591 ;;		None               void
  6592 ;; Registers used:
  6593 ;;		wreg, status,2, status,0
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6599 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6601 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6602 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6603 ;;Total ram usage:       12 bytes
  6604 ;; Hardware stack levels used: 1
  6605 ;; Hardware stack levels required when called: 4
  6606 ;; This function calls:
  6607 ;;		Nothing
  6608 ;; This function is called by:
  6609 ;;		_efgtoa
  6610 ;; This function uses a non-reentrant model
  6611 ;;
  6612                           
  6613                           	psect	text22
  6614  00369E                     __ptext22:
  6615                           	callstack 0
  6616  00369E                     ___flge:
  6617                           	callstack 22
  6618  00369E  0E00               	movlw	0
  6619  0036A0  141E               	andwf	___flge@ff1^0,w,c
  6620  0036A2  6E26               	movwf	??___flge^0,c
  6621  0036A4  0E00               	movlw	0
  6622  0036A6  141F               	andwf	(___flge@ff1+1)^0,w,c
  6623  0036A8  6E27               	movwf	(??___flge+1)^0,c
  6624  0036AA  0E80               	movlw	128
  6625  0036AC  1420               	andwf	(___flge@ff1+2)^0,w,c
  6626  0036AE  6E28               	movwf	(??___flge+2)^0,c
  6627  0036B0  0E7F               	movlw	127
  6628  0036B2  1421               	andwf	(___flge@ff1+3)^0,w,c
  6629  0036B4  6E29               	movwf	(??___flge+3)^0,c
  6630  0036B6  5026               	movf	??___flge^0,w,c
  6631  0036B8  1027               	iorwf	(??___flge+1)^0,w,c
  6632  0036BA  1028               	iorwf	(??___flge+2)^0,w,c
  6633  0036BC  1029               	iorwf	(??___flge+3)^0,w,c
  6634  0036BE  A4D8               	btfss	status,2,c
  6635  0036C0  EF64  F01B         	goto	u7101
  6636  0036C4  EF66  F01B         	goto	u7100
  6637  0036C8                     u7101:
  6638  0036C8  EF6E  F01B         	goto	l7107
  6639  0036CC                     u7100:
  6640  0036CC  0E00               	movlw	0
  6641  0036CE  6E1E               	movwf	___flge@ff1^0,c
  6642  0036D0  0E00               	movlw	0
  6643  0036D2  6E1F               	movwf	(___flge@ff1+1)^0,c
  6644  0036D4  0E00               	movlw	0
  6645  0036D6  6E20               	movwf	(___flge@ff1+2)^0,c
  6646  0036D8  0E00               	movlw	0
  6647  0036DA  6E21               	movwf	(___flge@ff1+3)^0,c
  6648  0036DC                     l7107:
  6649  0036DC  0E00               	movlw	0
  6650  0036DE  1422               	andwf	___flge@ff2^0,w,c
  6651  0036E0  6E26               	movwf	??___flge^0,c
  6652  0036E2  0E00               	movlw	0
  6653  0036E4  1423               	andwf	(___flge@ff2+1)^0,w,c
  6654  0036E6  6E27               	movwf	(??___flge+1)^0,c
  6655  0036E8  0E80               	movlw	128
  6656  0036EA  1424               	andwf	(___flge@ff2+2)^0,w,c
  6657  0036EC  6E28               	movwf	(??___flge+2)^0,c
  6658  0036EE  0E7F               	movlw	127
  6659  0036F0  1425               	andwf	(___flge@ff2+3)^0,w,c
  6660  0036F2  6E29               	movwf	(??___flge+3)^0,c
  6661  0036F4  5026               	movf	??___flge^0,w,c
  6662  0036F6  1027               	iorwf	(??___flge+1)^0,w,c
  6663  0036F8  1028               	iorwf	(??___flge+2)^0,w,c
  6664  0036FA  1029               	iorwf	(??___flge+3)^0,w,c
  6665  0036FC  A4D8               	btfss	status,2,c
  6666  0036FE  EF83  F01B         	goto	u7111
  6667  003702  EF85  F01B         	goto	u7110
  6668  003706                     u7111:
  6669  003706  EF8D  F01B         	goto	l7111
  6670  00370A                     u7110:
  6671  00370A  0E00               	movlw	0
  6672  00370C  6E22               	movwf	___flge@ff2^0,c
  6673  00370E  0E00               	movlw	0
  6674  003710  6E23               	movwf	(___flge@ff2+1)^0,c
  6675  003712  0E00               	movlw	0
  6676  003714  6E24               	movwf	(___flge@ff2+2)^0,c
  6677  003716  0E00               	movlw	0
  6678  003718  6E25               	movwf	(___flge@ff2+3)^0,c
  6679  00371A                     l7111:
  6680  00371A  AE21               	btfss	(___flge@ff1+3)^0,7,c
  6681  00371C  EF92  F01B         	goto	u7121
  6682  003720  EF94  F01B         	goto	u7120
  6683  003724                     u7121:
  6684  003724  EF9D  F01B         	goto	l7115
  6685  003728                     u7120:
  6686  003728  6C1E               	negf	___flge@ff1^0,c
  6687  00372A  1E1F               	comf	(___flge@ff1+1)^0,f,c
  6688  00372C  B0D8               	btfsc	status,0,c
  6689  00372E  2A1F               	incf	(___flge@ff1+1)^0,f,c
  6690  003730  1E20               	comf	(___flge@ff1+2)^0,f,c
  6691  003732  B0D8               	btfsc	status,0,c
  6692  003734  2A20               	incf	(___flge@ff1+2)^0,f,c
  6693  003736  0E80               	movlw	128
  6694  003738  5621               	subfwb	(___flge@ff1+3)^0,f,c
  6695  00373A                     l7115:
  6696  00373A  AE25               	btfss	(___flge@ff2+3)^0,7,c
  6697  00373C  EFA2  F01B         	goto	u7131
  6698  003740  EFA4  F01B         	goto	u7130
  6699  003744                     u7131:
  6700  003744  EFAD  F01B         	goto	l1059
  6701  003748                     u7130:
  6702  003748  6C22               	negf	___flge@ff2^0,c
  6703  00374A  1E23               	comf	(___flge@ff2+1)^0,f,c
  6704  00374C  B0D8               	btfsc	status,0,c
  6705  00374E  2A23               	incf	(___flge@ff2+1)^0,f,c
  6706  003750  1E24               	comf	(___flge@ff2+2)^0,f,c
  6707  003752  B0D8               	btfsc	status,0,c
  6708  003754  2A24               	incf	(___flge@ff2+2)^0,f,c
  6709  003756  0E80               	movlw	128
  6710  003758  5625               	subfwb	(___flge@ff2+3)^0,f,c
  6711  00375A                     l1059:
  6712  00375A  0E00               	movlw	0
  6713  00375C  1A1E               	xorwf	___flge@ff1^0,f,c
  6714  00375E  0E00               	movlw	0
  6715  003760  1A1F               	xorwf	(___flge@ff1+1)^0,f,c
  6716  003762  0E00               	movlw	0
  6717  003764  1A20               	xorwf	(___flge@ff1+2)^0,f,c
  6718  003766  0E80               	movlw	128
  6719  003768  1A21               	xorwf	(___flge@ff1+3)^0,f,c
  6720  00376A  0E00               	movlw	0
  6721  00376C  1A22               	xorwf	___flge@ff2^0,f,c
  6722  00376E  0E00               	movlw	0
  6723  003770  1A23               	xorwf	(___flge@ff2+1)^0,f,c
  6724  003772  0E00               	movlw	0
  6725  003774  1A24               	xorwf	(___flge@ff2+2)^0,f,c
  6726  003776  0E80               	movlw	128
  6727  003778  1A25               	xorwf	(___flge@ff2+3)^0,f,c
  6728  00377A  5022               	movf	___flge@ff2^0,w,c
  6729  00377C  5C1E               	subwf	___flge@ff1^0,w,c
  6730  00377E  5023               	movf	(___flge@ff2+1)^0,w,c
  6731  003780  581F               	subwfb	(___flge@ff1+1)^0,w,c
  6732  003782  5024               	movf	(___flge@ff2+2)^0,w,c
  6733  003784  5820               	subwfb	(___flge@ff1+2)^0,w,c
  6734  003786  5025               	movf	(___flge@ff2+3)^0,w,c
  6735  003788  5821               	subwfb	(___flge@ff1+3)^0,w,c
  6736  00378A  B0D8               	btfsc	status,0,c
  6737  00378C  EFCA  F01B         	goto	u7141
  6738  003790  EFCC  F01B         	goto	u7140
  6739  003794                     u7141:
  6740  003794  EFCF  F01B         	goto	l7121
  6741  003798                     u7140:
  6742  003798  90D8               	bcf	status,0,c
  6743  00379A  EFD0  F01B         	goto	l1064
  6744  00379E                     l7121:
  6745  00379E  80D8               	bsf	status,0,c
  6746  0037A0                     l1064:
  6747  0037A0  0012               	return		;funcret
  6748  0037A2                     __end_of___flge:
  6749                           	callstack 0
  6750                           
  6751 ;; *************** function ___fleq *****************
  6752 ;; Defined at:
  6753 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fleq.c"
  6754 ;; Parameters:    Size  Location     Type
  6755 ;;  ff1             4    4[COMRAM] unsigned char 
  6756 ;;  ff2             4    8[COMRAM] unsigned char 
  6757 ;; Auto vars:     Size  Location     Type
  6758 ;;		None
  6759 ;; Return value:  Size  Location     Type
  6760 ;;		None               void
  6761 ;; Registers used:
  6762 ;;		wreg, status,2, status,0
  6763 ;; Tracked objects:
  6764 ;;		On entry : 0/0
  6765 ;;		On exit  : 0/0
  6766 ;;		Unchanged: 0/0
  6767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6768 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6770 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6771 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6772 ;;Total ram usage:       12 bytes
  6773 ;; Hardware stack levels used: 1
  6774 ;; Hardware stack levels required when called: 4
  6775 ;; This function calls:
  6776 ;;		Nothing
  6777 ;; This function is called by:
  6778 ;;		_efgtoa
  6779 ;; This function uses a non-reentrant model
  6780 ;;
  6781                           
  6782                           	psect	text23
  6783  003D48                     __ptext23:
  6784                           	callstack 0
  6785  003D48                     ___fleq:
  6786                           	callstack 22
  6787  003D48  0E00               	movlw	0
  6788  003D4A  1405               	andwf	___fleq@ff1^0,w,c
  6789  003D4C  6E0D               	movwf	??___fleq^0,c
  6790  003D4E  0E00               	movlw	0
  6791  003D50  1406               	andwf	(___fleq@ff1+1)^0,w,c
  6792  003D52  6E0E               	movwf	(??___fleq+1)^0,c
  6793  003D54  0E80               	movlw	128
  6794  003D56  1407               	andwf	(___fleq@ff1+2)^0,w,c
  6795  003D58  6E0F               	movwf	(??___fleq+2)^0,c
  6796  003D5A  0E7F               	movlw	127
  6797  003D5C  1408               	andwf	(___fleq@ff1+3)^0,w,c
  6798  003D5E  6E10               	movwf	(??___fleq+3)^0,c
  6799  003D60  500D               	movf	??___fleq^0,w,c
  6800  003D62  100E               	iorwf	(??___fleq+1)^0,w,c
  6801  003D64  100F               	iorwf	(??___fleq+2)^0,w,c
  6802  003D66  1010               	iorwf	(??___fleq+3)^0,w,c
  6803  003D68  A4D8               	btfss	status,2,c
  6804  003D6A  EFB9  F01E         	goto	u7071
  6805  003D6E  EFBB  F01E         	goto	u7070
  6806  003D72                     u7071:
  6807  003D72  EFC3  F01E         	goto	l7091
  6808  003D76                     u7070:
  6809  003D76  0E00               	movlw	0
  6810  003D78  6E05               	movwf	___fleq@ff1^0,c
  6811  003D7A  0E00               	movlw	0
  6812  003D7C  6E06               	movwf	(___fleq@ff1+1)^0,c
  6813  003D7E  0E00               	movlw	0
  6814  003D80  6E07               	movwf	(___fleq@ff1+2)^0,c
  6815  003D82  0E00               	movlw	0
  6816  003D84  6E08               	movwf	(___fleq@ff1+3)^0,c
  6817  003D86                     l7091:
  6818  003D86  0E00               	movlw	0
  6819  003D88  1409               	andwf	___fleq@ff2^0,w,c
  6820  003D8A  6E0D               	movwf	??___fleq^0,c
  6821  003D8C  0E00               	movlw	0
  6822  003D8E  140A               	andwf	(___fleq@ff2+1)^0,w,c
  6823  003D90  6E0E               	movwf	(??___fleq+1)^0,c
  6824  003D92  0E80               	movlw	128
  6825  003D94  140B               	andwf	(___fleq@ff2+2)^0,w,c
  6826  003D96  6E0F               	movwf	(??___fleq+2)^0,c
  6827  003D98  0E7F               	movlw	127
  6828  003D9A  140C               	andwf	(___fleq@ff2+3)^0,w,c
  6829  003D9C  6E10               	movwf	(??___fleq+3)^0,c
  6830  003D9E  500D               	movf	??___fleq^0,w,c
  6831  003DA0  100E               	iorwf	(??___fleq+1)^0,w,c
  6832  003DA2  100F               	iorwf	(??___fleq+2)^0,w,c
  6833  003DA4  1010               	iorwf	(??___fleq+3)^0,w,c
  6834  003DA6  A4D8               	btfss	status,2,c
  6835  003DA8  EFD8  F01E         	goto	u7081
  6836  003DAC  EFDA  F01E         	goto	u7080
  6837  003DB0                     u7081:
  6838  003DB0  EFE2  F01E         	goto	l7095
  6839  003DB4                     u7080:
  6840  003DB4  0E00               	movlw	0
  6841  003DB6  6E09               	movwf	___fleq@ff2^0,c
  6842  003DB8  0E00               	movlw	0
  6843  003DBA  6E0A               	movwf	(___fleq@ff2+1)^0,c
  6844  003DBC  0E00               	movlw	0
  6845  003DBE  6E0B               	movwf	(___fleq@ff2+2)^0,c
  6846  003DC0  0E00               	movlw	0
  6847  003DC2  6E0C               	movwf	(___fleq@ff2+3)^0,c
  6848  003DC4                     l7095:
  6849  003DC4  5009               	movf	___fleq@ff2^0,w,c
  6850  003DC6  1805               	xorwf	___fleq@ff1^0,w,c
  6851  003DC8  E10F               	bnz	u7090
  6852  003DCA  500A               	movf	(___fleq@ff2+1)^0,w,c
  6853  003DCC  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  6854  003DCE  E10C               	bnz	u7090
  6855  003DD0  500B               	movf	(___fleq@ff2+2)^0,w,c
  6856  003DD2  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  6857  003DD4  E109               	bnz	u7090
  6858  003DD6  500C               	movf	(___fleq@ff2+3)^0,w,c
  6859  003DD8  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  6860  003DDA  B4D8               	btfsc	status,2,c
  6861  003DDC  EFF2  F01E         	goto	u7091
  6862  003DE0  EFF4  F01E         	goto	u7090
  6863  003DE4                     u7091:
  6864  003DE4  EFF7  F01E         	goto	l7099
  6865  003DE8                     u7090:
  6866  003DE8  90D8               	bcf	status,0,c
  6867  003DEA  EFF8  F01E         	goto	l1053
  6868  003DEE                     l7099:
  6869  003DEE  80D8               	bsf	status,0,c
  6870  003DF0                     l1053:
  6871  003DF0  0012               	return		;funcret
  6872  003DF2                     __end_of___fleq:
  6873                           	callstack 0
  6874                           
  6875 ;; *************** function ___awmod *****************
  6876 ;; Defined at:
  6877 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awmod.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;  dividend        2    4[COMRAM] int 
  6880 ;;  divisor         2    6[COMRAM] int 
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;  sign            1    9[COMRAM] unsigned char 
  6883 ;;  counter         1    8[COMRAM] unsigned char 
  6884 ;; Return value:  Size  Location     Type
  6885 ;;                  2    4[COMRAM] int 
  6886 ;; Registers used:
  6887 ;;		wreg, status,2, status,0
  6888 ;; Tracked objects:
  6889 ;;		On entry : 0/0
  6890 ;;		On exit  : 0/0
  6891 ;;		Unchanged: 0/0
  6892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6893 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6894 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6896 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6897 ;;Total ram usage:        6 bytes
  6898 ;; Hardware stack levels used: 1
  6899 ;; Hardware stack levels required when called: 4
  6900 ;; This function calls:
  6901 ;;		Nothing
  6902 ;; This function is called by:
  6903 ;;		_efgtoa
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907                           	psect	text24
  6908  003C98                     __ptext24:
  6909                           	callstack 0
  6910  003C98                     ___awmod:
  6911                           	callstack 22
  6912  003C98  0E00               	movlw	0
  6913  003C9A  6E0A               	movwf	___awmod@sign^0,c
  6914  003C9C  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  6915  003C9E  EF55  F01E         	goto	u7010
  6916  003CA2  EF53  F01E         	goto	u7011
  6917  003CA6                     u7011:
  6918  003CA6  EF5B  F01E         	goto	l7059
  6919  003CAA                     u7010:
  6920  003CAA  6C05               	negf	___awmod@dividend^0,c
  6921  003CAC  1E06               	comf	(___awmod@dividend+1)^0,f,c
  6922  003CAE  B0D8               	btfsc	status,0,c
  6923  003CB0  2A06               	incf	(___awmod@dividend+1)^0,f,c
  6924  003CB2  0E01               	movlw	1
  6925  003CB4  6E0A               	movwf	___awmod@sign^0,c
  6926  003CB6                     l7059:
  6927  003CB6  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  6928  003CB8  EF62  F01E         	goto	u7020
  6929  003CBC  EF60  F01E         	goto	u7021
  6930  003CC0                     u7021:
  6931  003CC0  EF66  F01E         	goto	l7063
  6932  003CC4                     u7020:
  6933  003CC4  6C07               	negf	___awmod@divisor^0,c
  6934  003CC6  1E08               	comf	(___awmod@divisor+1)^0,f,c
  6935  003CC8  B0D8               	btfsc	status,0,c
  6936  003CCA  2A08               	incf	(___awmod@divisor+1)^0,f,c
  6937  003CCC                     l7063:
  6938  003CCC  5007               	movf	___awmod@divisor^0,w,c
  6939  003CCE  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  6940  003CD0  B4D8               	btfsc	status,2,c
  6941  003CD2  EF6D  F01E         	goto	u7031
  6942  003CD6  EF6F  F01E         	goto	u7030
  6943  003CDA                     u7031:
  6944  003CDA  EF93  F01E         	goto	l7079
  6945  003CDE                     u7030:
  6946  003CDE  0E01               	movlw	1
  6947  003CE0  6E09               	movwf	___awmod@counter^0,c
  6948  003CE2  EF77  F01E         	goto	l7069
  6949  003CE6                     l7067:
  6950  003CE6  90D8               	bcf	status,0,c
  6951  003CE8  3607               	rlcf	___awmod@divisor^0,f,c
  6952  003CEA  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  6953  003CEC  2A09               	incf	___awmod@counter^0,f,c
  6954  003CEE                     l7069:
  6955  003CEE  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  6956  003CF0  EF7C  F01E         	goto	u7041
  6957  003CF4  EF7E  F01E         	goto	u7040
  6958  003CF8                     u7041:
  6959  003CF8  EF73  F01E         	goto	l7067
  6960  003CFC                     u7040:
  6961  003CFC                     l7071:
  6962  003CFC  5007               	movf	___awmod@divisor^0,w,c
  6963  003CFE  5C05               	subwf	___awmod@dividend^0,w,c
  6964  003D00  5008               	movf	(___awmod@divisor+1)^0,w,c
  6965  003D02  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  6966  003D04  A0D8               	btfss	status,0,c
  6967  003D06  EF87  F01E         	goto	u7051
  6968  003D0A  EF89  F01E         	goto	u7050
  6969  003D0E                     u7051:
  6970  003D0E  EF8D  F01E         	goto	l7075
  6971  003D12                     u7050:
  6972  003D12  5007               	movf	___awmod@divisor^0,w,c
  6973  003D14  5E05               	subwf	___awmod@dividend^0,f,c
  6974  003D16  5008               	movf	(___awmod@divisor+1)^0,w,c
  6975  003D18  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  6976  003D1A                     l7075:
  6977  003D1A  90D8               	bcf	status,0,c
  6978  003D1C  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  6979  003D1E  3207               	rrcf	___awmod@divisor^0,f,c
  6980  003D20  2E09               	decfsz	___awmod@counter^0,f,c
  6981  003D22  EF7E  F01E         	goto	l7071
  6982  003D26                     l7079:
  6983  003D26  500A               	movf	___awmod@sign^0,w,c
  6984  003D28  B4D8               	btfsc	status,2,c
  6985  003D2A  EF99  F01E         	goto	u7061
  6986  003D2E  EF9B  F01E         	goto	u7060
  6987  003D32                     u7061:
  6988  003D32  EF9F  F01E         	goto	l7083
  6989  003D36                     u7060:
  6990  003D36  6C05               	negf	___awmod@dividend^0,c
  6991  003D38  1E06               	comf	(___awmod@dividend+1)^0,f,c
  6992  003D3A  B0D8               	btfsc	status,0,c
  6993  003D3C  2A06               	incf	(___awmod@dividend+1)^0,f,c
  6994  003D3E                     l7083:
  6995  003D3E  C005  F005         	movff	___awmod@dividend,?___awmod
  6996  003D42  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  6997  003D46  0012               	return		;funcret
  6998  003D48                     __end_of___awmod:
  6999                           	callstack 0
  7000                           
  7001 ;; *************** function _atoi *****************
  7002 ;; Defined at:
  7003 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\atoi.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  s               2   11[COMRAM] PTR const unsigned char 
  7006 ;;		 -> STR_1(22), 
  7007 ;; Auto vars:     Size  Location     Type
  7008 ;;  n               2   19[COMRAM] int 
  7009 ;;  neg             2   17[COMRAM] int 
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  2   11[COMRAM] int 
  7012 ;; Registers used:
  7013 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7019 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7020 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7021 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7022 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7023 ;;Total ram usage:       10 bytes
  7024 ;; Hardware stack levels used: 1
  7025 ;; Hardware stack levels required when called: 5
  7026 ;; This function calls:
  7027 ;;		___wmul
  7028 ;;		_isdigit
  7029 ;;		_isspace
  7030 ;; This function is called by:
  7031 ;;		_vfpfcnvrt
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           	psect	text25
  7036  003438                     __ptext25:
  7037                           	callstack 0
  7038  003438                     _atoi:
  7039                           	callstack 22
  7040  003438  0E00               	movlw	0
  7041  00343A  6E15               	movwf	(atoi@n+1)^0,c
  7042  00343C  0E00               	movlw	0
  7043  00343E  6E14               	movwf	atoi@n^0,c
  7044  003440  0E00               	movlw	0
  7045  003442  6E13               	movwf	(atoi@neg+1)^0,c
  7046  003444  0E00               	movlw	0
  7047  003446  6E12               	movwf	atoi@neg^0,c
  7048  003448  EF28  F01A         	goto	l7591
  7049  00344C                     l7587:
  7050  00344C  4A0C               	infsnz	atoi@s^0,f,c
  7051  00344E  2A0D               	incf	(atoi@s+1)^0,f,c
  7052  003450                     l7591:
  7053  003450  C00C  FFF6         	movff	atoi@s,tblptrl
  7054  003454  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7055  003458                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7056  003458  6AF8               	clrf	tblptru,c
  7057  00345A                     	endif
  7058  00345A                     	if	0	;tblptru may be non-zero
  7059  00345A                     	endif
  7060  00345A  0008               	tblrd		*
  7061  00345C  50F5               	movf	tablat,w,c
  7062  00345E  0A20               	xorlw	32
  7063  003460  B4D8               	btfsc	status,2,c
  7064  003462  EF35  F01A         	goto	u7991
  7065  003466  EF37  F01A         	goto	u7990
  7066  00346A                     u7991:
  7067  00346A  EF26  F01A         	goto	l7587
  7068  00346E                     u7990:
  7069  00346E  0EF7               	movlw	247
  7070  003470  6E0E               	movwf	??_atoi^0,c
  7071  003472  0EFF               	movlw	255
  7072  003474  6E0F               	movwf	(??_atoi+1)^0,c
  7073  003476  C00C  FFF6         	movff	atoi@s,tblptrl
  7074  00347A  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7075  00347E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7076  00347E  6AF8               	clrf	tblptru,c
  7077  003480                     	endif
  7078  003480                     	if	0	;tblptru may be non-zero
  7079  003480                     	endif
  7080  003480  0008               	tblrd		*
  7081  003482  50F5               	movf	tablat,w,c
  7082  003484  6E10               	movwf	(??_atoi+2)^0,c
  7083  003486  6A11               	clrf	(??_atoi+3)^0,c
  7084  003488  500E               	movf	??_atoi^0,w,c
  7085  00348A  2610               	addwf	(??_atoi+2)^0,f,c
  7086  00348C  500F               	movf	(??_atoi+1)^0,w,c
  7087  00348E  2211               	addwfc	(??_atoi+3)^0,f,c
  7088  003490  5011               	movf	(??_atoi+3)^0,w,c
  7089  003492  E109               	bnz	u8000
  7090  003494  0E05               	movlw	5
  7091  003496  5C10               	subwf	(??_atoi+2)^0,w,c
  7092  003498  A0D8               	btfss	status,0,c
  7093  00349A  EF51  F01A         	goto	u8001
  7094  00349E  EF53  F01A         	goto	u8000
  7095  0034A2                     u8001:
  7096  0034A2  EF26  F01A         	goto	l7587
  7097  0034A6                     u8000:
  7098  0034A6  EF5D  F01A         	goto	l7599
  7099  0034AA                     l7595:
  7100  0034AA  0E00               	movlw	0
  7101  0034AC  6E13               	movwf	(atoi@neg+1)^0,c
  7102  0034AE  0E01               	movlw	1
  7103  0034B0  6E12               	movwf	atoi@neg^0,c
  7104  0034B2                     l7597:
  7105  0034B2  4A0C               	infsnz	atoi@s^0,f,c
  7106  0034B4  2A0D               	incf	(atoi@s+1)^0,f,c
  7107  0034B6  EF94  F01A         	goto	l7607
  7108  0034BA                     l7599:
  7109  0034BA  C00C  FFF6         	movff	atoi@s,tblptrl
  7110  0034BE  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7111  0034C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7112  0034C2  6AF8               	clrf	tblptru,c
  7113  0034C4                     	endif
  7114  0034C4                     	if	0	;tblptru may be non-zero
  7115  0034C4                     	endif
  7116  0034C4  0008               	tblrd		*
  7117  0034C6  50F5               	movf	tablat,w,c
  7118  0034C8  6E0E               	movwf	??_atoi^0,c
  7119  0034CA  6A0F               	clrf	(??_atoi+1)^0,c
  7120                           
  7121                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7122                           ; Switch size 1, requested type "simple"
  7123                           ; Number of cases is 1, Range of values is 0 to 0
  7124                           ; switch strategies available:
  7125                           ; Name         Instructions Cycles
  7126                           ; simple_byte            4     3 (average)
  7127                           ;	Chosen strategy is simple_byte
  7128  0034CC  500F               	movf	(??_atoi+1)^0,w,c
  7129  0034CE  0A00               	xorlw	0	; case 0
  7130  0034D0  B4D8               	btfsc	status,2,c
  7131  0034D2  EF6D  F01A         	goto	l7967
  7132  0034D6  EF94  F01A         	goto	l7607
  7133  0034DA                     l7967:
  7134                           
  7135                           ; Switch size 1, requested type "simple"
  7136                           ; Number of cases is 2, Range of values is 43 to 45
  7137                           ; switch strategies available:
  7138                           ; Name         Instructions Cycles
  7139                           ; simple_byte            7     4 (average)
  7140                           ;	Chosen strategy is simple_byte
  7141  0034DA  500E               	movf	??_atoi^0,w,c
  7142  0034DC  0A2B               	xorlw	43	; case 43
  7143  0034DE  B4D8               	btfsc	status,2,c
  7144  0034E0  EF59  F01A         	goto	l7597
  7145  0034E4  0A06               	xorlw	6	; case 45
  7146  0034E6  B4D8               	btfsc	status,2,c
  7147  0034E8  EF55  F01A         	goto	l7595
  7148  0034EC  EF94  F01A         	goto	l7607
  7149  0034F0                     l7601:
  7150  0034F0  C014  F005         	movff	atoi@n,___wmul@multiplier
  7151  0034F4  C015  F006         	movff	atoi@n+1,___wmul@multiplier+1
  7152  0034F8  0E00               	movlw	0
  7153  0034FA  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  7154  0034FC  0E0A               	movlw	10
  7155  0034FE  6E07               	movwf	___wmul@multiplicand^0,c
  7156  003500  EC88  F022         	call	___wmul	;wreg free
  7157  003504  C00C  FFF6         	movff	atoi@s,tblptrl
  7158  003508  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7159  00350C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7160  00350C  6AF8               	clrf	tblptru,c
  7161  00350E                     	endif
  7162  00350E                     	if	0	;tblptru may be non-zero
  7163  00350E                     	endif
  7164  00350E  0008               	tblrd		*
  7165  003510  50F5               	movf	tablat,w,c
  7166  003512  5E05               	subwf	?___wmul^0,f,c
  7167  003514  0E00               	movlw	0
  7168  003516  5A06               	subwfb	(?___wmul+1)^0,f,c
  7169  003518  0E30               	movlw	48
  7170  00351A  2405               	addwf	?___wmul^0,w,c
  7171  00351C  6E14               	movwf	atoi@n^0,c
  7172  00351E  0E00               	movlw	0
  7173  003520  2006               	addwfc	(?___wmul+1)^0,w,c
  7174  003522  6E15               	movwf	(atoi@n+1)^0,c
  7175  003524  EF59  F01A         	goto	l7597
  7176  003528                     l7607:
  7177  003528  0ED0               	movlw	208
  7178  00352A  6E0E               	movwf	??_atoi^0,c
  7179  00352C  0EFF               	movlw	255
  7180  00352E  6E0F               	movwf	(??_atoi+1)^0,c
  7181  003530  C00C  FFF6         	movff	atoi@s,tblptrl
  7182  003534  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7183  003538                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7184  003538  6AF8               	clrf	tblptru,c
  7185  00353A                     	endif
  7186  00353A                     	if	0	;tblptru may be non-zero
  7187  00353A                     	endif
  7188  00353A  0008               	tblrd		*
  7189  00353C  50F5               	movf	tablat,w,c
  7190  00353E  6E10               	movwf	(??_atoi+2)^0,c
  7191  003540  6A11               	clrf	(??_atoi+3)^0,c
  7192  003542  500E               	movf	??_atoi^0,w,c
  7193  003544  2610               	addwf	(??_atoi+2)^0,f,c
  7194  003546  500F               	movf	(??_atoi+1)^0,w,c
  7195  003548  2211               	addwfc	(??_atoi+3)^0,f,c
  7196  00354A  5011               	movf	(??_atoi+3)^0,w,c
  7197  00354C  E109               	bnz	u8010
  7198  00354E  0E0A               	movlw	10
  7199  003550  5C10               	subwf	(??_atoi+2)^0,w,c
  7200  003552  A0D8               	btfss	status,0,c
  7201  003554  EFAE  F01A         	goto	u8011
  7202  003558  EFB0  F01A         	goto	u8010
  7203  00355C                     u8011:
  7204  00355C  EF78  F01A         	goto	l7601
  7205  003560                     u8010:
  7206  003560  5012               	movf	atoi@neg^0,w,c
  7207  003562  1013               	iorwf	(atoi@neg+1)^0,w,c
  7208  003564  A4D8               	btfss	status,2,c
  7209  003566  EFB7  F01A         	goto	u8021
  7210  00356A  EFB9  F01A         	goto	u8020
  7211  00356E                     u8021:
  7212  00356E  EFC7  F01A         	goto	l1677
  7213  003572                     u8020:
  7214  003572  C014  F00E         	movff	atoi@n,??_atoi
  7215  003576  C015  F00F         	movff	atoi@n+1,??_atoi+1
  7216  00357A  1E0E               	comf	??_atoi^0,f,c
  7217  00357C  1E0F               	comf	(??_atoi+1)^0,f,c
  7218  00357E  4A0E               	infsnz	??_atoi^0,f,c
  7219  003580  2A0F               	incf	(??_atoi+1)^0,f,c
  7220  003582  C00E  F00C         	movff	??_atoi,?_atoi
  7221  003586  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  7222  00358A  EFCB  F01A         	goto	l1680
  7223  00358E                     l1677:
  7224  00358E  C014  F00C         	movff	atoi@n,?_atoi
  7225  003592  C015  F00D         	movff	atoi@n+1,?_atoi+1
  7226  003596                     l1680:
  7227  003596  0012               	return		;funcret
  7228  003598                     __end_of_atoi:
  7229                           	callstack 0
  7230                           
  7231 ;; *************** function _isspace *****************
  7232 ;; Defined at:
  7233 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\isspace.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;  c               2    4[COMRAM] int 
  7236 ;; Auto vars:     Size  Location     Type
  7237 ;;		None
  7238 ;; Return value:  Size  Location     Type
  7239 ;;                  2    4[COMRAM] int 
  7240 ;; Registers used:
  7241 ;;		wreg, status,2, status,0
  7242 ;; Tracked objects:
  7243 ;;		On entry : 0/0
  7244 ;;		On exit  : 0/0
  7245 ;;		Unchanged: 0/0
  7246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7248 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7249 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7250 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7251 ;;Total ram usage:        7 bytes
  7252 ;; Hardware stack levels used: 1
  7253 ;; Hardware stack levels required when called: 4
  7254 ;; This function calls:
  7255 ;;		Nothing
  7256 ;; This function is called by:
  7257 ;;		_atoi
  7258 ;; This function uses a non-reentrant model
  7259 ;;
  7260                           
  7261                           	psect	text26
  7262  0040EC                     __ptext26:
  7263                           	callstack 0
  7264  0040EC                     _isspace:
  7265                           	callstack 22
  7266  0040EC  0E01               	movlw	1
  7267  0040EE  6E0B               	movwf	_isspace$2420^0,c
  7268  0040F0  0E20               	movlw	32
  7269  0040F2  1805               	xorwf	isspace@c^0,w,c
  7270  0040F4  1006               	iorwf	(isspace@c+1)^0,w,c
  7271  0040F6  B4D8               	btfsc	status,2,c
  7272  0040F8  EF80  F020         	goto	u7491
  7273  0040FC  EF82  F020         	goto	u7490
  7274  004100                     u7491:
  7275  004100  EF9B  F020         	goto	l7275
  7276  004104                     u7490:
  7277  004104  0EF7               	movlw	247
  7278  004106  6E07               	movwf	??_isspace^0,c
  7279  004108  0EFF               	movlw	255
  7280  00410A  6E08               	movwf	(??_isspace+1)^0,c
  7281  00410C  C005  F009         	movff	isspace@c,??_isspace+2
  7282  004110  C006  F00A         	movff	isspace@c+1,??_isspace+3
  7283  004114  5007               	movf	??_isspace^0,w,c
  7284  004116  2609               	addwf	(??_isspace+2)^0,f,c
  7285  004118  5008               	movf	(??_isspace+1)^0,w,c
  7286  00411A  220A               	addwfc	(??_isspace+3)^0,f,c
  7287  00411C  500A               	movf	(??_isspace+3)^0,w,c
  7288  00411E  E109               	bnz	u7500
  7289  004120  0E05               	movlw	5
  7290  004122  5C09               	subwf	(??_isspace+2)^0,w,c
  7291  004124  A0D8               	btfss	status,0,c
  7292  004126  EF97  F020         	goto	u7501
  7293  00412A  EF99  F020         	goto	u7500
  7294  00412E                     u7501:
  7295  00412E  EF9B  F020         	goto	l7275
  7296  004132                     u7500:
  7297  004132  0E00               	movlw	0
  7298  004134  6E0B               	movwf	_isspace$2420^0,c
  7299  004136                     l7275:
  7300  004136  C00B  F005         	movff	_isspace$2420,?_isspace
  7301  00413A  6A06               	clrf	(?_isspace+1)^0,c
  7302  00413C  0012               	return		;funcret
  7303  00413E                     __end_of_isspace:
  7304                           	callstack 0
  7305                           
  7306 ;; *************** function _isdigit *****************
  7307 ;; Defined at:
  7308 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\isdigit.c"
  7309 ;; Parameters:    Size  Location     Type
  7310 ;;  c               2    4[COMRAM] int 
  7311 ;; Auto vars:     Size  Location     Type
  7312 ;;		None
  7313 ;; Return value:  Size  Location     Type
  7314 ;;                  2    4[COMRAM] int 
  7315 ;; Registers used:
  7316 ;;		wreg, status,2, status,0
  7317 ;; Tracked objects:
  7318 ;;		On entry : 0/0
  7319 ;;		On exit  : 0/0
  7320 ;;		Unchanged: 0/0
  7321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7322 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7324 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7325 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7326 ;;Total ram usage:        6 bytes
  7327 ;; Hardware stack levels used: 1
  7328 ;; Hardware stack levels required when called: 4
  7329 ;; This function calls:
  7330 ;;		Nothing
  7331 ;; This function is called by:
  7332 ;;		_vfpfcnvrt
  7333 ;;		_atoi
  7334 ;; This function uses a non-reentrant model
  7335 ;;
  7336                           
  7337                           	psect	text27
  7338  004392                     __ptext27:
  7339                           	callstack 0
  7340  004392                     _isdigit:
  7341                           	callstack 23
  7342  004392  0ED0               	movlw	208
  7343  004394  6E07               	movwf	??_isdigit^0,c
  7344  004396  0EFF               	movlw	255
  7345  004398  6E08               	movwf	(??_isdigit+1)^0,c
  7346  00439A  C005  F009         	movff	isdigit@c,??_isdigit+2
  7347  00439E  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  7348  0043A2  5007               	movf	??_isdigit^0,w,c
  7349  0043A4  2609               	addwf	(??_isdigit+2)^0,f,c
  7350  0043A6  5008               	movf	(??_isdigit+1)^0,w,c
  7351  0043A8  220A               	addwfc	(??_isdigit+3)^0,f,c
  7352  0043AA  500A               	movf	(??_isdigit+3)^0,w,c
  7353  0043AC  E10A               	bnz	u7470
  7354  0043AE  0E0A               	movlw	10
  7355  0043B0  5C09               	subwf	(??_isdigit+2)^0,w,c
  7356  0043B2  A0D8               	btfss	status,0,c
  7357  0043B4  EFDE  F021         	goto	u7471
  7358  0043B8  EFE1  F021         	goto	u7470
  7359  0043BC                     u7471:
  7360  0043BC  0E01               	movlw	1
  7361  0043BE  EFE2  F021         	goto	u7480
  7362  0043C2                     u7470:
  7363  0043C2  0E00               	movlw	0
  7364  0043C4                     u7480:
  7365  0043C4  6E05               	movwf	?_isdigit^0,c
  7366  0043C6  6A06               	clrf	(?_isdigit+1)^0,c
  7367  0043C8  0012               	return		;funcret
  7368  0043CA                     __end_of_isdigit:
  7369                           	callstack 0
  7370                           
  7371 ;; *************** function ___wmul *****************
  7372 ;; Defined at:
  7373 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;  multiplier      2    4[COMRAM] unsigned int 
  7376 ;;  multiplicand    2    6[COMRAM] unsigned int 
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;  product         2    8[COMRAM] unsigned int 
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  2    4[COMRAM] unsigned int 
  7381 ;; Registers used:
  7382 ;;		wreg, status,2, status,0, prodl, prodh
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7389 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7391 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7392 ;;Total ram usage:        6 bytes
  7393 ;; Hardware stack levels used: 1
  7394 ;; Hardware stack levels required when called: 4
  7395 ;; This function calls:
  7396 ;;		Nothing
  7397 ;; This function is called by:
  7398 ;;		_atoi
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           	psect	text28
  7403  004510                     __ptext28:
  7404                           	callstack 0
  7405  004510                     ___wmul:
  7406                           	callstack 22
  7407  004510  5005               	movf	___wmul@multiplier^0,w,c
  7408  004512  0207               	mulwf	___wmul@multiplicand^0,c
  7409  004514  CFF3 F009          	movff	prodl,___wmul@product
  7410  004518  CFF4 F00A          	movff	prodh,___wmul@product+1
  7411  00451C  5005               	movf	___wmul@multiplier^0,w,c
  7412  00451E  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  7413  004520  50F3               	movf	243,w,c
  7414  004522  260A               	addwf	(___wmul@product+1)^0,f,c
  7415  004524  5006               	movf	(___wmul@multiplier+1)^0,w,c
  7416  004526  0207               	mulwf	___wmul@multiplicand^0,c
  7417  004528  50F3               	movf	243,w,c
  7418  00452A  260A               	addwf	(___wmul@product+1)^0,f,c
  7419  00452C  C009  F005         	movff	___wmul@product,?___wmul
  7420  004530  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  7421  004534  0012               	return		;funcret
  7422  004536                     __end_of___wmul:
  7423                           	callstack 0
  7424                           
  7425 ;; *************** function _SYSTEM_Initialize *****************
  7426 ;; Defined at:
  7427 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;		None
  7430 ;; Auto vars:     Size  Location     Type
  7431 ;;		None
  7432 ;; Return value:  Size  Location     Type
  7433 ;;                  1    wreg      void 
  7434 ;; Registers used:
  7435 ;;		wreg, status,2, status,0, cstack
  7436 ;; Tracked objects:
  7437 ;;		On entry : 0/0
  7438 ;;		On exit  : 0/0
  7439 ;;		Unchanged: 0/0
  7440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7445 ;;Total ram usage:        0 bytes
  7446 ;; Hardware stack levels used: 1
  7447 ;; Hardware stack levels required when called: 6
  7448 ;; This function calls:
  7449 ;;		_EUSART_Initialize
  7450 ;;		_I2C_Initialize
  7451 ;;		_INTERRUPT_Initialize
  7452 ;;		_OSCILLATOR_Initialize
  7453 ;;		_PIN_MANAGER_Initialize
  7454 ;; This function is called by:
  7455 ;;		_main
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           	psect	text29
  7460  004536                     __ptext29:
  7461                           	callstack 0
  7462  004536                     _SYSTEM_Initialize:
  7463                           	callstack 24
  7464  004536                     
  7465                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  7466  004536  ECEB  F022         	call	_INTERRUPT_Initialize	;wreg free
  7467  00453A                     
  7468                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
  7469  00453A  ECA6  F022         	call	_I2C_Initialize	;wreg free
  7470  00453E                     
  7471                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  7472  00453E  EC1C  F022         	call	_PIN_MANAGER_Initialize	;wreg free
  7473  004542                     
  7474                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  7475  004542  ECBC  F022         	call	_OSCILLATOR_Initialize	;wreg free
  7476  004546                     
  7477                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  7478  004546  EC83  F01F         	call	_EUSART_Initialize	;wreg free
  7479  00454A  0012               	return		;funcret
  7480  00454C                     __end_of_SYSTEM_Initialize:
  7481                           	callstack 0
  7482                           
  7483 ;; *************** function _PIN_MANAGER_Initialize *****************
  7484 ;; Defined at:
  7485 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7486 ;; Parameters:    Size  Location     Type
  7487 ;;		None
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;		None
  7490 ;; Return value:  Size  Location     Type
  7491 ;;                  1    wreg      void 
  7492 ;; Registers used:
  7493 ;;		wreg, status,2
  7494 ;; Tracked objects:
  7495 ;;		On entry : 0/0
  7496 ;;		On exit  : 0/0
  7497 ;;		Unchanged: 0/0
  7498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7503 ;;Total ram usage:        0 bytes
  7504 ;; Hardware stack levels used: 1
  7505 ;; Hardware stack levels required when called: 4
  7506 ;; This function calls:
  7507 ;;		Nothing
  7508 ;; This function is called by:
  7509 ;;		_SYSTEM_Initialize
  7510 ;; This function uses a non-reentrant model
  7511 ;;
  7512                           
  7513                           	psect	text30
  7514  004438                     __ptext30:
  7515                           	callstack 0
  7516  004438                     _PIN_MANAGER_Initialize:
  7517                           	callstack 25
  7518  004438                     
  7519                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  7520  004438  0E00               	movlw	0
  7521  00443A  6E8D               	movwf	141,c	;volatile
  7522                           
  7523                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  7524  00443C  0E00               	movlw	0
  7525  00443E  6E8C               	movwf	140,c	;volatile
  7526                           
  7527                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  7528  004440  0E00               	movlw	0
  7529  004442  6E89               	movwf	137,c	;volatile
  7530                           
  7531                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7532  004444  0E00               	movlw	0
  7533  004446  6E8A               	movwf	138,c	;volatile
  7534                           
  7535                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x40;
  7536  004448  0E40               	movlw	64
  7537  00444A  6E8B               	movwf	139,c	;volatile
  7538                           
  7539                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  7540  00444C  0E07               	movlw	7
  7541  00444E  6E96               	movwf	150,c	;volatile
  7542  004450                     
  7543                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  7544  004450  6892               	setf	146,c	;volatile
  7545  004452                     
  7546                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  7547  004452  6893               	setf	147,c	;volatile
  7548                           
  7549                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  7550  004454  0EBF               	movlw	191
  7551  004456  6E94               	movwf	148,c	;volatile
  7552  004458                     
  7553                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  7554  004458  6895               	setf	149,c	;volatile
  7555  00445A                     
  7556                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  7557  00445A  687E               	setf	126,c	;volatile
  7558                           
  7559                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
  7560  00445C  0E1F               	movlw	31
  7561  00445E  6E7F               	movwf	127,c	;volatile
  7562                           
  7563                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  7564  004460  0E00               	movlw	0
  7565  004462  6E7C               	movwf	124,c	;volatile
  7566  004464                     
  7567                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  7568  004464  8EF1               	bsf	241,7,c	;volatile
  7569  004466  0012               	return		;funcret
  7570  004468                     __end_of_PIN_MANAGER_Initialize:
  7571                           	callstack 0
  7572                           
  7573 ;; *************** function _OSCILLATOR_Initialize *****************
  7574 ;; Defined at:
  7575 ;;		line 60 in file "mcc_generated_files/mcc.c"
  7576 ;; Parameters:    Size  Location     Type
  7577 ;;		None
  7578 ;; Auto vars:     Size  Location     Type
  7579 ;;		None
  7580 ;; Return value:  Size  Location     Type
  7581 ;;                  1    wreg      void 
  7582 ;; Registers used:
  7583 ;;		wreg, status,2
  7584 ;; Tracked objects:
  7585 ;;		On entry : 0/0
  7586 ;;		On exit  : 0/0
  7587 ;;		Unchanged: 0/0
  7588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7593 ;;Total ram usage:        0 bytes
  7594 ;; Hardware stack levels used: 1
  7595 ;; Hardware stack levels required when called: 4
  7596 ;; This function calls:
  7597 ;;		Nothing
  7598 ;; This function is called by:
  7599 ;;		_SYSTEM_Initialize
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           	psect	text31
  7604  004578                     __ptext31:
  7605                           	callstack 0
  7606  004578                     _OSCILLATOR_Initialize:
  7607                           	callstack 25
  7608  004578                     
  7609                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x60;
  7610  004578  0E60               	movlw	96
  7611  00457A  6ED3               	movwf	211,c	;volatile
  7612                           
  7613                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  7614  00457C  0E00               	movlw	0
  7615  00457E  6E9B               	movwf	155,c	;volatile
  7616  004580  0012               	return		;funcret
  7617  004582                     __end_of_OSCILLATOR_Initialize:
  7618                           	callstack 0
  7619                           
  7620 ;; *************** function _INTERRUPT_Initialize *****************
  7621 ;; Defined at:
  7622 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7623 ;; Parameters:    Size  Location     Type
  7624 ;;		None
  7625 ;; Auto vars:     Size  Location     Type
  7626 ;;		None
  7627 ;; Return value:  Size  Location     Type
  7628 ;;                  1    wreg      void 
  7629 ;; Registers used:
  7630 ;;		None
  7631 ;; Tracked objects:
  7632 ;;		On entry : 0/0
  7633 ;;		On exit  : 0/0
  7634 ;;		Unchanged: 0/0
  7635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7640 ;;Total ram usage:        0 bytes
  7641 ;; Hardware stack levels used: 1
  7642 ;; Hardware stack levels required when called: 4
  7643 ;; This function calls:
  7644 ;;		Nothing
  7645 ;; This function is called by:
  7646 ;;		_SYSTEM_Initialize
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650                           	psect	text32
  7651  0045D6                     __ptext32:
  7652                           	callstack 0
  7653  0045D6                     _INTERRUPT_Initialize:
  7654                           	callstack 25
  7655  0045D6                     
  7656                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  7657  0045D6  9ED0               	bcf	208,7,c	;volatile
  7658  0045D8  0012               	return		;funcret
  7659  0045DA                     __end_of_INTERRUPT_Initialize:
  7660                           	callstack 0
  7661                           
  7662 ;; *************** function _I2C_Initialize *****************
  7663 ;; Defined at:
  7664 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  7665 ;; Parameters:    Size  Location     Type
  7666 ;;		None
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;		None
  7669 ;; Return value:  Size  Location     Type
  7670 ;;                  1    wreg      void 
  7671 ;; Registers used:
  7672 ;;		wreg, status,2
  7673 ;; Tracked objects:
  7674 ;;		On entry : 0/0
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7682 ;;Total ram usage:        0 bytes
  7683 ;; Hardware stack levels used: 1
  7684 ;; Hardware stack levels required when called: 4
  7685 ;; This function calls:
  7686 ;;		Nothing
  7687 ;; This function is called by:
  7688 ;;		_SYSTEM_Initialize
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           
  7692                           	psect	text33
  7693  00454C                     __ptext33:
  7694                           	callstack 0
  7695  00454C                     _I2C_Initialize:
  7696                           	callstack 25
  7697  00454C                     
  7698                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  7699  00454C  0E00               	movlw	0
  7700  00454E  6EC7               	movwf	199,c	;volatile
  7701                           
  7702                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  7703  004550  0E08               	movlw	8
  7704  004552  6EC6               	movwf	198,c	;volatile
  7705                           
  7706                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  7707  004554  0E00               	movlw	0
  7708  004556  6EC5               	movwf	197,c	;volatile
  7709                           
  7710                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  7711  004558  0E13               	movlw	19
  7712  00455A  6EC8               	movwf	200,c	;volatile
  7713  00455C                     
  7714                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  7715  00455C  9AC6               	bcf	198,5,c	;volatile
  7716  00455E  0012               	return		;funcret
  7717  004560                     __end_of_I2C_Initialize:
  7718                           	callstack 0
  7719                           
  7720 ;; *************** function _EUSART_Initialize *****************
  7721 ;; Defined at:
  7722 ;;		line 88 in file "mcc_generated_files/eusart.c"
  7723 ;; Parameters:    Size  Location     Type
  7724 ;;		None
  7725 ;; Auto vars:     Size  Location     Type
  7726 ;;		None
  7727 ;; Return value:  Size  Location     Type
  7728 ;;                  1    wreg      void 
  7729 ;; Registers used:
  7730 ;;		wreg, status,2, status,0, cstack
  7731 ;; Tracked objects:
  7732 ;;		On entry : 0/0
  7733 ;;		On exit  : 0/0
  7734 ;;		Unchanged: 0/0
  7735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7740 ;;Total ram usage:        0 bytes
  7741 ;; Hardware stack levels used: 1
  7742 ;; Hardware stack levels required when called: 5
  7743 ;; This function calls:
  7744 ;;		_EUSART_SetErrorHandler
  7745 ;;		_EUSART_SetFramingErrorHandler
  7746 ;;		_EUSART_SetOverrunErrorHandler
  7747 ;;		_EUSART_SetRxInterruptHandler
  7748 ;;		_EUSART_SetTxInterruptHandler
  7749 ;; This function is called by:
  7750 ;;		_SYSTEM_Initialize
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           	psect	text34
  7755  003F06                     __ptext34:
  7756                           	callstack 0
  7757  003F06                     _EUSART_Initialize:
  7758                           	callstack 24
  7759  003F06                     
  7760                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RC1IE = 0;
  7761  003F06  9A9D               	bcf	157,5,c	;volatile
  7762  003F08                     
  7763                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  7764  003F08  0ED8               	movlw	low _EUSART_Receive_ISR
  7765  003F0A  6E05               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
  7766  003F0C  0E3B               	movlw	high _EUSART_Receive_ISR
  7767  003F0E  6E06               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
  7768  003F10  ECC6  F022         	call	_EUSART_SetRxInterruptHandler	;wreg free
  7769  003F14                     
  7770                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TX1IE = 0;
  7771  003F14  989D               	bcf	157,4,c	;volatile
  7772                           
  7773                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  7774  003F16  0EA0               	movlw	low _EUSART_Transmit_ISR
  7775  003F18  6E05               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
  7776  003F1A  0E42               	movlw	high _EUSART_Transmit_ISR
  7777  003F1C  6E06               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
  7778  003F1E  ECC1  F022         	call	_EUSART_SetTxInterruptHandler	;wreg free
  7779  003F22                     
  7780                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  7781  003F22  0E08               	movlw	8
  7782  003F24  6EB8               	movwf	184,c	;volatile
  7783  003F26                     
  7784                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  7785  003F26  0E90               	movlw	144
  7786  003F28  6EAB               	movwf	171,c	;volatile
  7787  003F2A                     
  7788                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  7789  003F2A  0E24               	movlw	36
  7790  003F2C  6EAC               	movwf	172,c	;volatile
  7791  003F2E                     
  7792                           ;mcc_generated_files/eusart.c: 107:     SPBRG = 0xCF;
  7793  003F2E  0ECF               	movlw	207
  7794  003F30  6EAF               	movwf	175,c	;volatile
  7795  003F32                     
  7796                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  7797  003F32  0E00               	movlw	0
  7798  003F34  6EB0               	movwf	176,c	;volatile
  7799  003F36                     
  7800                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  7801  003F36  0EDA               	movlw	low _EUSART_DefaultFramingErrorHandler
  7802  003F38  6E05               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  7803  003F3A  0E45               	movlw	high _EUSART_DefaultFramingErrorHandler
  7804  003F3C  6E06               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  7805  003F3E  ECD0  F022         	call	_EUSART_SetFramingErrorHandler	;wreg free
  7806  003F42                     
  7807                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  7808  003F42  0ECA               	movlw	low _EUSART_DefaultOverrunErrorHandler
  7809  003F44  6E05               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  7810  003F46  0E45               	movlw	high _EUSART_DefaultOverrunErrorHandler
  7811  003F48  6E06               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  7812  003F4A  ECCB  F022         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  7813  003F4E                     
  7814                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  7815  003F4E  0ED0               	movlw	low _EUSART_DefaultErrorHandler
  7816  003F50  6E05               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  7817  003F52  0E45               	movlw	high _EUSART_DefaultErrorHandler
  7818  003F54  6E06               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  7819  003F56  ECD5  F022         	call	_EUSART_SetErrorHandler	;wreg free
  7820                           
  7821                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  7822  003F5A  0E00               	movlw	0
  7823  003F5C  0100               	movlb	0	; () banked
  7824  003F5E  6FB1               	movwf	_eusartRxLastError& (0+255),b	;volatile
  7825                           
  7826                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  7827  003F60  0E00               	movlw	0
  7828  003F62  6E5A               	movwf	_eusartTxHead^0,c	;volatile
  7829                           
  7830                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  7831  003F64  0E00               	movlw	0
  7832  003F66  6E59               	movwf	_eusartTxTail^0,c	;volatile
  7833                           
  7834                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  7835  003F68  0E08               	movlw	8
  7836  003F6A  6FFE               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
  7837                           
  7838                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  7839  003F6C  0E00               	movlw	0
  7840  003F6E  6E58               	movwf	_eusartRxHead^0,c	;volatile
  7841                           
  7842                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  7843  003F70  0E00               	movlw	0
  7844  003F72  6E57               	movwf	_eusartRxTail^0,c	;volatile
  7845                           
  7846                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  7847  003F74  0E00               	movlw	0
  7848  003F76  6E56               	movwf	_eusartRxCount^0,c	;volatile
  7849  003F78                     
  7850                           ; BSR set to: 0
  7851                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RC1IE = 1;
  7852  003F78  8A9D               	bsf	157,5,c	;volatile
  7853  003F7A                     
  7854                           ; BSR set to: 0
  7855  003F7A  0012               	return		;funcret
  7856  003F7C                     __end_of_EUSART_Initialize:
  7857                           	callstack 0
  7858                           
  7859 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  7860 ;; Defined at:
  7861 ;;		line 285 in file "mcc_generated_files/eusart.c"
  7862 ;; Parameters:    Size  Location     Type
  7863 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7864 ;;		 -> EUSART_Transmit_ISR(1), 
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;		None
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  1    wreg      void 
  7869 ;; Registers used:
  7870 ;;		wreg, status,2, status,0
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7879 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7880 ;;Total ram usage:        2 bytes
  7881 ;; Hardware stack levels used: 1
  7882 ;; Hardware stack levels required when called: 4
  7883 ;; This function calls:
  7884 ;;		Nothing
  7885 ;; This function is called by:
  7886 ;;		_EUSART_Initialize
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           	psect	text35
  7891  004582                     __ptext35:
  7892                           	callstack 0
  7893  004582                     _EUSART_SetTxInterruptHandler:
  7894                           	callstack 24
  7895  004582                     
  7896                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  7897  004582  C005  F0FC         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
  7898  004586  C006  F0FD         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
  7899  00458A  0012               	return		;funcret
  7900  00458C                     __end_of_EUSART_SetTxInterruptHandler:
  7901                           	callstack 0
  7902                           
  7903 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  7904 ;; Defined at:
  7905 ;;		line 289 in file "mcc_generated_files/eusart.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7908 ;;		 -> EUSART_Receive_ISR(1), 
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;		None
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  1    wreg      void 
  7913 ;; Registers used:
  7914 ;;		wreg, status,2, status,0
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7923 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7924 ;;Total ram usage:        2 bytes
  7925 ;; Hardware stack levels used: 1
  7926 ;; Hardware stack levels required when called: 4
  7927 ;; This function calls:
  7928 ;;		Nothing
  7929 ;; This function is called by:
  7930 ;;		_EUSART_Initialize
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934                           	psect	text36
  7935  00458C                     __ptext36:
  7936                           	callstack 0
  7937  00458C                     _EUSART_SetRxInterruptHandler:
  7938                           	callstack 24
  7939  00458C                     
  7940                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  7941  00458C  C005  F166         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  7942  004590  C006  F167         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  7943  004594  0012               	return		;funcret
  7944  004596                     __end_of_EUSART_SetRxInterruptHandler:
  7945                           	callstack 0
  7946                           
  7947 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7948 ;; Defined at:
  7949 ;;		line 277 in file "mcc_generated_files/eusart.c"
  7950 ;; Parameters:    Size  Location     Type
  7951 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7952 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;		None
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  1    wreg      void 
  7957 ;; Registers used:
  7958 ;;		wreg, status,2, status,0
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7964 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7967 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7968 ;;Total ram usage:        2 bytes
  7969 ;; Hardware stack levels used: 1
  7970 ;; Hardware stack levels required when called: 4
  7971 ;; This function calls:
  7972 ;;		Nothing
  7973 ;; This function is called by:
  7974 ;;		_EUSART_Initialize
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text37
  7979  004596                     __ptext37:
  7980                           	callstack 0
  7981  004596                     _EUSART_SetOverrunErrorHandler:
  7982                           	callstack 24
  7983  004596                     
  7984                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  7985  004596  C005  F162         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  7986  00459A  C006  F163         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  7987  00459E  0012               	return		;funcret
  7988  0045A0                     __end_of_EUSART_SetOverrunErrorHandler:
  7989                           	callstack 0
  7990                           
  7991 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7992 ;; Defined at:
  7993 ;;		line 273 in file "mcc_generated_files/eusart.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7996 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7997 ;; Auto vars:     Size  Location     Type
  7998 ;;		None
  7999 ;; Return value:  Size  Location     Type
  8000 ;;                  1    wreg      void 
  8001 ;; Registers used:
  8002 ;;		wreg, status,2, status,0
  8003 ;; Tracked objects:
  8004 ;;		On entry : 0/0
  8005 ;;		On exit  : 0/0
  8006 ;;		Unchanged: 0/0
  8007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8012 ;;Total ram usage:        2 bytes
  8013 ;; Hardware stack levels used: 1
  8014 ;; Hardware stack levels required when called: 4
  8015 ;; This function calls:
  8016 ;;		Nothing
  8017 ;; This function is called by:
  8018 ;;		_EUSART_Initialize
  8019 ;; This function uses a non-reentrant model
  8020 ;;
  8021                           
  8022                           	psect	text38
  8023  0045A0                     __ptext38:
  8024                           	callstack 0
  8025  0045A0                     _EUSART_SetFramingErrorHandler:
  8026                           	callstack 24
  8027  0045A0                     
  8028                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  8029  0045A0  C005  F164         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  8030  0045A4  C006  F165         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  8031  0045A8  0012               	return		;funcret
  8032  0045AA                     __end_of_EUSART_SetFramingErrorHandler:
  8033                           	callstack 0
  8034                           
  8035 ;; *************** function _EUSART_SetErrorHandler *****************
  8036 ;; Defined at:
  8037 ;;		line 281 in file "mcc_generated_files/eusart.c"
  8038 ;; Parameters:    Size  Location     Type
  8039 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8040 ;;		 -> EUSART_DefaultErrorHandler(1), 
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;		None
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  1    wreg      void 
  8045 ;; Registers used:
  8046 ;;		wreg, status,2, status,0
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8052 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8055 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8056 ;;Total ram usage:        2 bytes
  8057 ;; Hardware stack levels used: 1
  8058 ;; Hardware stack levels required when called: 4
  8059 ;; This function calls:
  8060 ;;		Nothing
  8061 ;; This function is called by:
  8062 ;;		_EUSART_Initialize
  8063 ;; This function uses a non-reentrant model
  8064 ;;
  8065                           
  8066                           	psect	text39
  8067  0045AA                     __ptext39:
  8068                           	callstack 0
  8069  0045AA                     _EUSART_SetErrorHandler:
  8070                           	callstack 24
  8071  0045AA                     
  8072                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  8073  0045AA  C005  F160         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  8074  0045AE  C006  F161         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  8075  0045B2  0012               	return		;funcret
  8076  0045B4                     __end_of_EUSART_SetErrorHandler:
  8077                           	callstack 0
  8078                           
  8079 ;; *************** function _DS18B20_temp_GetValue *****************
  8080 ;; Defined at:
  8081 ;;		line 33 in file "ds18b20.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;		None
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;  tempDataAnz     4   51[COMRAM] float 
  8086 ;;  prisutnost      1   57[COMRAM] unsigned char 
  8087 ;;  temph1          1   56[COMRAM] unsigned char 
  8088 ;;  templ1          1   55[COMRAM] unsigned char 
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  4   43[COMRAM] float 
  8091 ;; Registers used:
  8092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8098 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8099 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8100 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8101 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8102 ;;Total ram usage:       15 bytes
  8103 ;; Hardware stack levels used: 1
  8104 ;; Hardware stack levels required when called: 8
  8105 ;; This function calls:
  8106 ;;		___fldiv
  8107 ;;		___xxtofl
  8108 ;;		_addressOneWireDevice
  8109 ;;		_readOneWireByte
  8110 ;;		_resetOneWirePin
  8111 ;;		_writeOneWireByte
  8112 ;; This function is called by:
  8113 ;;		_main
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           	psect	text40
  8118  00397C                     __ptext40:
  8119                           	callstack 0
  8120  00397C                     _DS18B20_temp_GetValue:
  8121                           	callstack 22
  8122  00397C                     
  8123                           ;ds18b20.c: 36:     uint8_t templ1,temph1;;ds18b20.c: 38:     prisutnost = resetOneWireP
      +                          in();
  8124  00397C  EC71  F021         	call	_resetOneWirePin	;wreg free
  8125  003980  6E3A               	movwf	DS18B20_temp_GetValue@prisutnost^0,c
  8126  003982                     
  8127                           ;ds18b20.c: 39:     if(prisutnost == 0){
  8128  003982  503A               	movf	DS18B20_temp_GetValue@prisutnost^0,w,c
  8129  003984  A4D8               	btfss	status,2,c
  8130  003986  EFC7  F01C         	goto	u8331
  8131  00398A  EFC9  F01C         	goto	u8330
  8132  00398E                     u8331:
  8133  00398E  EF1E  F01D         	goto	l7889
  8134  003992                     u8330:
  8135  003992                     
  8136                           ;ds18b20.c: 40:         addressOneWireDevice(DeviceAddressMap[0]);
  8137  003992  0E50               	movlw	low _DeviceAddressMap
  8138  003994  6E09               	movwf	addressOneWireDevice@CurrentAdressedOneWireDevice^0,c
  8139  003996  0E01               	movlw	high _DeviceAddressMap
  8140  003998  6E0A               	movwf	(addressOneWireDevice@CurrentAdressedOneWireDevice+1)^0,c
  8141  00399A  EC4B  F020         	call	_addressOneWireDevice	;wreg free
  8142  00399E                     
  8143                           ;ds18b20.c: 41:         writeOneWireByte(0x44);
  8144  00399E  0E44               	movlw	68
  8145  0039A0  ECE5  F021         	call	_writeOneWireByte
  8146  0039A4                     
  8147                           ;ds18b20.c: 42:         _delay((unsigned long)((750)*(8000000/4000.0)));
  8148  0039A4  0E08               	movlw	8
  8149  0039A6  6E31               	movwf	(??_DS18B20_temp_GetValue+1)^0,c
  8150  0039A8  0E9D               	movlw	157
  8151  0039AA  6E30               	movwf	??_DS18B20_temp_GetValue^0,c
  8152  0039AC  0E06               	movlw	6
  8153  0039AE                     u8367:
  8154  0039AE  2EE8               	decfsz	wreg,f,c
  8155  0039B0  D7FE               	bra	u8367
  8156  0039B2  2E30               	decfsz	??_DS18B20_temp_GetValue^0,f,c
  8157  0039B4  D7FC               	bra	u8367
  8158  0039B6  2E31               	decfsz	(??_DS18B20_temp_GetValue+1)^0,f,c
  8159  0039B8  D7FA               	bra	u8367
  8160  0039BA                     
  8161                           ;ds18b20.c: 43:         resetOneWirePin();
  8162  0039BA  EC71  F021         	call	_resetOneWirePin	;wreg free
  8163  0039BE                     
  8164                           ;ds18b20.c: 44:         addressOneWireDevice(DeviceAddressMap[0]);
  8165  0039BE  0E50               	movlw	low _DeviceAddressMap
  8166  0039C0  6E09               	movwf	addressOneWireDevice@CurrentAdressedOneWireDevice^0,c
  8167  0039C2  0E01               	movlw	high _DeviceAddressMap
  8168  0039C4  6E0A               	movwf	(addressOneWireDevice@CurrentAdressedOneWireDevice+1)^0,c
  8169  0039C6  EC4B  F020         	call	_addressOneWireDevice	;wreg free
  8170  0039CA                     
  8171                           ;ds18b20.c: 45:         writeOneWireByte(0xBE);
  8172  0039CA  0EBE               	movlw	190
  8173  0039CC  ECE5  F021         	call	_writeOneWireByte
  8174  0039D0                     
  8175                           ;ds18b20.c: 46:         templ1 = readOneWireByte();
  8176  0039D0  EC9F  F020         	call	_readOneWireByte	;wreg free
  8177  0039D4  6E38               	movwf	DS18B20_temp_GetValue@templ1^0,c
  8178  0039D6                     
  8179                           ;ds18b20.c: 47:         temph1 = readOneWireByte();
  8180  0039D6  EC9F  F020         	call	_readOneWireByte	;wreg free
  8181  0039DA  6E39               	movwf	DS18B20_temp_GetValue@temph1^0,c
  8182  0039DC                     
  8183                           ;ds18b20.c: 48:         tempDataAnz = (float)(templ1 + (temph1 * 256)) / 16;
  8184  0039DC  5039               	movf	DS18B20_temp_GetValue@temph1^0,w,c
  8185  0039DE  6E31               	movwf	(??_DS18B20_temp_GetValue+1)^0,c
  8186  0039E0  6A30               	clrf	??_DS18B20_temp_GetValue^0,c
  8187  0039E2  5038               	movf	DS18B20_temp_GetValue@templ1^0,w,c
  8188  0039E4  6E32               	movwf	(??_DS18B20_temp_GetValue+2)^0,c
  8189  0039E6  6A33               	clrf	(??_DS18B20_temp_GetValue+3)^0,c
  8190  0039E8  5030               	movf	??_DS18B20_temp_GetValue^0,w,c
  8191  0039EA  2632               	addwf	(??_DS18B20_temp_GetValue+2)^0,f,c
  8192  0039EC  5031               	movf	(??_DS18B20_temp_GetValue+1)^0,w,c
  8193  0039EE  2233               	addwfc	(??_DS18B20_temp_GetValue+3)^0,f,c
  8194  0039F0  C032  F005         	movff	??_DS18B20_temp_GetValue+2,___xxtofl@val
  8195  0039F4  C033  F006         	movff	??_DS18B20_temp_GetValue+3,___xxtofl@val+1
  8196  0039F8  0E00               	movlw	0
  8197  0039FA  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  8198  0039FC  0EFF               	movlw	-1
  8199  0039FE  6E07               	movwf	(___xxtofl@val+2)^0,c
  8200  003A00  6E08               	movwf	(___xxtofl@val+3)^0,c
  8201  003A02  0E01               	movlw	1
  8202  003A04  EC42  F019         	call	___xxtofl
  8203  003A08  C005  F013         	movff	?___xxtofl,___fldiv@b
  8204  003A0C  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  8205  003A10  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  8206  003A14  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  8207  003A18  0E00               	movlw	0
  8208  003A1A  6E17               	movwf	___fldiv@a^0,c
  8209  003A1C  0E00               	movlw	0
  8210  003A1E  6E18               	movwf	(___fldiv@a+1)^0,c
  8211  003A20  0E80               	movlw	128
  8212  003A22  6E19               	movwf	(___fldiv@a+2)^0,c
  8213  003A24  0E41               	movlw	65
  8214  003A26  6E1A               	movwf	(___fldiv@a+3)^0,c
  8215  003A28  EC60  F015         	call	___fldiv	;wreg free
  8216  003A2C  C013  F034         	movff	?___fldiv,DS18B20_temp_GetValue@tempDataAnz
  8217  003A30  C014  F035         	movff	?___fldiv+1,DS18B20_temp_GetValue@tempDataAnz+1
  8218  003A34  C015  F036         	movff	?___fldiv+2,DS18B20_temp_GetValue@tempDataAnz+2
  8219  003A38  C016  F037         	movff	?___fldiv+3,DS18B20_temp_GetValue@tempDataAnz+3
  8220  003A3C                     l7889:
  8221                           
  8222                           ;ds18b20.c: 50:     return tempDataAnz;
  8223  003A3C  C034  F02C         	movff	DS18B20_temp_GetValue@tempDataAnz,?_DS18B20_temp_GetValue
  8224  003A40  C035  F02D         	movff	DS18B20_temp_GetValue@tempDataAnz+1,?_DS18B20_temp_GetValue+1
  8225  003A44  C036  F02E         	movff	DS18B20_temp_GetValue@tempDataAnz+2,?_DS18B20_temp_GetValue+2
  8226  003A48  C037  F02F         	movff	DS18B20_temp_GetValue@tempDataAnz+3,?_DS18B20_temp_GetValue+3
  8227  003A4C  0012               	return		;funcret
  8228  003A4E                     __end_of_DS18B20_temp_GetValue:
  8229                           	callstack 0
  8230                           
  8231 ;; *************** function _readOneWireByte *****************
  8232 ;; Defined at:
  8233 ;;		line 119 in file "ds18b20.c"
  8234 ;; Parameters:    Size  Location     Type
  8235 ;;		None
  8236 ;; Auto vars:     Size  Location     Type
  8237 ;;  i               2    7[COMRAM] int 
  8238 ;;  data            1    6[COMRAM] unsigned char 
  8239 ;; Return value:  Size  Location     Type
  8240 ;;                  1    wreg      unsigned char 
  8241 ;; Registers used:
  8242 ;;		wreg, status,2, status,0, cstack
  8243 ;; Tracked objects:
  8244 ;;		On entry : 0/0
  8245 ;;		On exit  : 0/0
  8246 ;;		Unchanged: 0/0
  8247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8249 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8251 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8252 ;;Total ram usage:        3 bytes
  8253 ;; Hardware stack levels used: 1
  8254 ;; Hardware stack levels required when called: 6
  8255 ;; This function calls:
  8256 ;;		_readOneWireBit
  8257 ;; This function is called by:
  8258 ;;		_DS18B20_temp_GetValue
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           	psect	text41
  8263  00413E                     __ptext41:
  8264                           	callstack 0
  8265  00413E                     _readOneWireByte:
  8266                           	callstack 23
  8267  00413E                     
  8268                           ;ds18b20.c: 120:     unsigned char data = 0;
  8269  00413E  0E00               	movlw	0
  8270  004140  6E07               	movwf	readOneWireByte@data^0,c
  8271                           
  8272                           ;ds18b20.c: 122:     for(int i = 0; i < 8; i++){
  8273  004142  0E00               	movlw	0
  8274  004144  6E09               	movwf	(readOneWireByte@i+1)^0,c
  8275  004146  0E00               	movlw	0
  8276  004148  6E08               	movwf	readOneWireByte@i^0,c
  8277  00414A                     l5693:
  8278                           
  8279                           ;ds18b20.c: 123:         data >>= 1;
  8280  00414A  90D8               	bcf	status,0,c
  8281  00414C  3207               	rrcf	readOneWireByte@data^0,f,c
  8282  00414E                     
  8283                           ;ds18b20.c: 124:         if(readOneWireBit()){
  8284  00414E  EC74  F022         	call	_readOneWireBit	;wreg free
  8285  004152  0900               	iorlw	0
  8286  004154  B4D8               	btfsc	status,2,c
  8287  004156  EFAF  F020         	goto	u5381
  8288  00415A  EFB1  F020         	goto	u5380
  8289  00415E                     u5381:
  8290  00415E  EFB2  F020         	goto	l762
  8291  004162                     u5380:
  8292  004162                     
  8293                           ;ds18b20.c: 125:         data |= 0x80;
  8294  004162  8E07               	bsf	readOneWireByte@data^0,7,c
  8295  004164                     l762:
  8296                           
  8297                           ;ds18b20.c: 127:     }
  8298  004164  4A08               	infsnz	readOneWireByte@i^0,f,c
  8299  004166  2A09               	incf	(readOneWireByte@i+1)^0,f,c
  8300  004168  BE09               	btfsc	(readOneWireByte@i+1)^0,7,c
  8301  00416A  EFC0  F020         	goto	u5391
  8302  00416E  5009               	movf	(readOneWireByte@i+1)^0,w,c
  8303  004170  E109               	bnz	u5390
  8304  004172  0E08               	movlw	8
  8305  004174  5C08               	subwf	readOneWireByte@i^0,w,c
  8306  004176  A0D8               	btfss	status,0,c
  8307  004178  EFC0  F020         	goto	u5391
  8308  00417C  EFC2  F020         	goto	u5390
  8309  004180                     u5391:
  8310  004180  EFA5  F020         	goto	l5693
  8311  004184                     u5390:
  8312  004184                     
  8313                           ;ds18b20.c: 128:     return data;
  8314  004184  5007               	movf	readOneWireByte@data^0,w,c
  8315  004186  0012               	return		;funcret
  8316  004188                     __end_of_readOneWireByte:
  8317                           	callstack 0
  8318                           
  8319 ;; *************** function _addressOneWireDevice *****************
  8320 ;; Defined at:
  8321 ;;		line 131 in file "ds18b20.c"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;  CurrentAdres    2    8[COMRAM] PTR unsigned char 
  8324 ;;		 -> DeviceAddressMap(16), 
  8325 ;; Auto vars:     Size  Location     Type
  8326 ;;  i               2   10[COMRAM] int 
  8327 ;; Return value:  Size  Location     Type
  8328 ;;                  1    wreg      unsigned char 
  8329 ;; Registers used:
  8330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8331 ;; Tracked objects:
  8332 ;;		On entry : 0/0
  8333 ;;		On exit  : 0/0
  8334 ;;		Unchanged: 0/0
  8335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8336 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8337 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8339 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8340 ;;Total ram usage:        4 bytes
  8341 ;; Hardware stack levels used: 1
  8342 ;; Hardware stack levels required when called: 7
  8343 ;; This function calls:
  8344 ;;		_resetOneWirePin
  8345 ;;		_writeOneWireByte
  8346 ;; This function is called by:
  8347 ;;		_DS18B20_temp_GetValue
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           	psect	text42
  8352  004096                     __ptext42:
  8353                           	callstack 0
  8354  004096                     _addressOneWireDevice:
  8355                           	callstack 22
  8356  004096                     
  8357                           ;ds18b20.c: 132:     if(resetOneWirePin() == 0){
  8358  004096  EC71  F021         	call	_resetOneWirePin	;wreg free
  8359  00409A  0900               	iorlw	0
  8360  00409C  A4D8               	btfss	status,2,c
  8361  00409E  EF53  F020         	goto	u5361
  8362  0040A2  EF55  F020         	goto	u5360
  8363  0040A6                     u5361:
  8364  0040A6  EF75  F020         	goto	l769
  8365  0040AA                     u5360:
  8366  0040AA                     
  8367                           ;ds18b20.c: 133:         writeOneWireByte(0x55);
  8368  0040AA  0E55               	movlw	85
  8369  0040AC  ECE5  F021         	call	_writeOneWireByte
  8370  0040B0                     
  8371                           ;ds18b20.c: 134:         for(int i = 0; i < 8; i++){
  8372  0040B0  0E00               	movlw	0
  8373  0040B2  6E0C               	movwf	(addressOneWireDevice@i+1)^0,c
  8374  0040B4  0E00               	movlw	0
  8375  0040B6  6E0B               	movwf	addressOneWireDevice@i^0,c
  8376  0040B8                     l5679:
  8377                           
  8378                           ;ds18b20.c: 135:             writeOneWireByte(CurrentAdressedOneWireDevice[i]);
  8379  0040B8  500B               	movf	addressOneWireDevice@i^0,w,c
  8380  0040BA  2409               	addwf	addressOneWireDevice@CurrentAdressedOneWireDevice^0,w,c
  8381  0040BC  6ED9               	movwf	fsr2l,c
  8382  0040BE  500C               	movf	(addressOneWireDevice@i+1)^0,w,c
  8383  0040C0  200A               	addwfc	(addressOneWireDevice@CurrentAdressedOneWireDevice+1)^0,w,c
  8384  0040C2  6EDA               	movwf	fsr2h,c
  8385  0040C4  50DF               	movf	indf2,w,c
  8386  0040C6  ECE5  F021         	call	_writeOneWireByte
  8387  0040CA                     
  8388                           ;ds18b20.c: 136:         }
  8389  0040CA  4A0B               	infsnz	addressOneWireDevice@i^0,f,c
  8390  0040CC  2A0C               	incf	(addressOneWireDevice@i+1)^0,f,c
  8391  0040CE  BE0C               	btfsc	(addressOneWireDevice@i+1)^0,7,c
  8392  0040D0  EF73  F020         	goto	u5371
  8393  0040D4  500C               	movf	(addressOneWireDevice@i+1)^0,w,c
  8394  0040D6  E109               	bnz	u5370
  8395  0040D8  0E08               	movlw	8
  8396  0040DA  5C0B               	subwf	addressOneWireDevice@i^0,w,c
  8397  0040DC  A0D8               	btfss	status,0,c
  8398  0040DE  EF73  F020         	goto	u5371
  8399  0040E2  EF75  F020         	goto	u5370
  8400  0040E6                     u5371:
  8401  0040E6  EF5C  F020         	goto	l5679
  8402  0040EA                     u5370:
  8403  0040EA                     l769:
  8404  0040EA  0012               	return		;funcret
  8405  0040EC                     __end_of_addressOneWireDevice:
  8406                           	callstack 0
  8407                           
  8408 ;; *************** function ___xxtofl *****************
  8409 ;; Defined at:
  8410 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;  sign            1    wreg     unsigned char 
  8413 ;;  val             4    4[COMRAM] long 
  8414 ;; Auto vars:     Size  Location     Type
  8415 ;;  sign            1   12[COMRAM] unsigned char 
  8416 ;;  arg             4   14[COMRAM] unsigned long 
  8417 ;;  exp             1   13[COMRAM] unsigned char 
  8418 ;; Return value:  Size  Location     Type
  8419 ;;                  4    4[COMRAM] unsigned char 
  8420 ;; Registers used:
  8421 ;;		wreg, status,2, status,0
  8422 ;; Tracked objects:
  8423 ;;		On entry : 0/0
  8424 ;;		On exit  : 0/0
  8425 ;;		Unchanged: 0/0
  8426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8427 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8428 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8429 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8430 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8431 ;;Total ram usage:       14 bytes
  8432 ;; Hardware stack levels used: 1
  8433 ;; Hardware stack levels required when called: 4
  8434 ;; This function calls:
  8435 ;;		Nothing
  8436 ;; This function is called by:
  8437 ;;		_DS18B20_temp_GetValue
  8438 ;; This function uses a non-reentrant model
  8439 ;;
  8440                           
  8441                           	psect	text43
  8442  003284                     __ptext43:
  8443                           	callstack 0
  8444  003284                     ___xxtofl:
  8445                           	callstack 25
  8446                           
  8447                           ;incstack = 0
  8448                           ;___xxtofl@sign stored from wreg
  8449  003284  6E0D               	movwf	___xxtofl@sign^0,c
  8450  003286  500D               	movf	___xxtofl@sign^0,w,c
  8451  003288  B4D8               	btfsc	status,2,c
  8452  00328A  EF49  F019         	goto	u5401
  8453  00328E  EF4B  F019         	goto	u5400
  8454  003292                     u5401:
  8455  003292  EF6D  F019         	goto	l1449
  8456  003296                     u5400:
  8457  003296  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  8458  003298  EF52  F019         	goto	u5410
  8459  00329C  EF50  F019         	goto	u5411
  8460  0032A0                     u5411:
  8461  0032A0  EF6D  F019         	goto	l1449
  8462  0032A4                     u5410:
  8463  0032A4  C005  F009         	movff	___xxtofl@val,??___xxtofl
  8464  0032A8  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  8465  0032AC  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  8466  0032B0  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  8467  0032B4  1E09               	comf	??___xxtofl^0,f,c
  8468  0032B6  1E0A               	comf	(??___xxtofl+1)^0,f,c
  8469  0032B8  1E0B               	comf	(??___xxtofl+2)^0,f,c
  8470  0032BA  1E0C               	comf	(??___xxtofl+3)^0,f,c
  8471  0032BC  2A09               	incf	??___xxtofl^0,f,c
  8472  0032BE  0E00               	movlw	0
  8473  0032C0  220A               	addwfc	(??___xxtofl+1)^0,f,c
  8474  0032C2  220B               	addwfc	(??___xxtofl+2)^0,f,c
  8475  0032C4  220C               	addwfc	(??___xxtofl+3)^0,f,c
  8476  0032C6  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  8477  0032CA  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  8478  0032CE  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  8479  0032D2  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  8480  0032D6  EF75  F019         	goto	l5711
  8481  0032DA                     l1449:
  8482  0032DA  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  8483  0032DE  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8484  0032E2  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8485  0032E6  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8486  0032EA                     l5711:
  8487  0032EA  5005               	movf	___xxtofl@val^0,w,c
  8488  0032EC  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  8489  0032EE  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  8490  0032F0  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  8491  0032F2  A4D8               	btfss	status,2,c
  8492  0032F4  EF7E  F019         	goto	u5421
  8493  0032F8  EF80  F019         	goto	u5420
  8494  0032FC                     u5421:
  8495  0032FC  EF8A  F019         	goto	l5717
  8496  003300                     u5420:
  8497  003300  0E00               	movlw	0
  8498  003302  6E05               	movwf	?___xxtofl^0,c
  8499  003304  0E00               	movlw	0
  8500  003306  6E06               	movwf	(?___xxtofl+1)^0,c
  8501  003308  0E00               	movlw	0
  8502  00330A  6E07               	movwf	(?___xxtofl+2)^0,c
  8503  00330C  0E00               	movlw	0
  8504  00330E  6E08               	movwf	(?___xxtofl+3)^0,c
  8505  003310  EF1B  F01A         	goto	l1452
  8506  003314                     l5717:
  8507  003314  0E96               	movlw	150
  8508  003316  6E0E               	movwf	___xxtofl@exp^0,c
  8509  003318  EF94  F019         	goto	l5721
  8510  00331C                     l5719:
  8511  00331C  2A0E               	incf	___xxtofl@exp^0,f,c
  8512  00331E  90D8               	bcf	status,0,c
  8513  003320  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  8514  003322  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  8515  003324  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  8516  003326  320F               	rrcf	___xxtofl@arg^0,f,c
  8517  003328                     l5721:
  8518  003328  0E00               	movlw	0
  8519  00332A  140F               	andwf	___xxtofl@arg^0,w,c
  8520  00332C  6E09               	movwf	??___xxtofl^0,c
  8521  00332E  0E00               	movlw	0
  8522  003330  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  8523  003332  6E0A               	movwf	(??___xxtofl+1)^0,c
  8524  003334  0E00               	movlw	0
  8525  003336  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  8526  003338  6E0B               	movwf	(??___xxtofl+2)^0,c
  8527  00333A  0EFE               	movlw	254
  8528  00333C  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  8529  00333E  6E0C               	movwf	(??___xxtofl+3)^0,c
  8530  003340  5009               	movf	??___xxtofl^0,w,c
  8531  003342  100A               	iorwf	(??___xxtofl+1)^0,w,c
  8532  003344  100B               	iorwf	(??___xxtofl+2)^0,w,c
  8533  003346  100C               	iorwf	(??___xxtofl+3)^0,w,c
  8534  003348  A4D8               	btfss	status,2,c
  8535  00334A  EFA9  F019         	goto	u5431
  8536  00334E  EFAB  F019         	goto	u5430
  8537  003352                     u5431:
  8538  003352  EF8E  F019         	goto	l5719
  8539  003356                     u5430:
  8540  003356  EFB9  F019         	goto	l1456
  8541  00335A                     l5723:
  8542  00335A  2A0E               	incf	___xxtofl@exp^0,f,c
  8543  00335C  0E01               	movlw	1
  8544  00335E  260F               	addwf	___xxtofl@arg^0,f,c
  8545  003360  0E00               	movlw	0
  8546  003362  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  8547  003364  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  8548  003366  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  8549  003368  90D8               	bcf	status,0,c
  8550  00336A  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  8551  00336C  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  8552  00336E  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  8553  003370  320F               	rrcf	___xxtofl@arg^0,f,c
  8554  003372                     l1456:
  8555  003372  0E00               	movlw	0
  8556  003374  140F               	andwf	___xxtofl@arg^0,w,c
  8557  003376  6E09               	movwf	??___xxtofl^0,c
  8558  003378  0E00               	movlw	0
  8559  00337A  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  8560  00337C  6E0A               	movwf	(??___xxtofl+1)^0,c
  8561  00337E  0E00               	movlw	0
  8562  003380  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  8563  003382  6E0B               	movwf	(??___xxtofl+2)^0,c
  8564  003384  0EFF               	movlw	255
  8565  003386  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  8566  003388  6E0C               	movwf	(??___xxtofl+3)^0,c
  8567  00338A  5009               	movf	??___xxtofl^0,w,c
  8568  00338C  100A               	iorwf	(??___xxtofl+1)^0,w,c
  8569  00338E  100B               	iorwf	(??___xxtofl+2)^0,w,c
  8570  003390  100C               	iorwf	(??___xxtofl+3)^0,w,c
  8571  003392  A4D8               	btfss	status,2,c
  8572  003394  EFCE  F019         	goto	u5441
  8573  003398  EFD0  F019         	goto	u5440
  8574  00339C                     u5441:
  8575  00339C  EFAD  F019         	goto	l5723
  8576  0033A0                     u5440:
  8577  0033A0  EFD8  F019         	goto	l5731
  8578  0033A4                     l5729:
  8579  0033A4  060E               	decf	___xxtofl@exp^0,f,c
  8580  0033A6  90D8               	bcf	status,0,c
  8581  0033A8  360F               	rlcf	___xxtofl@arg^0,f,c
  8582  0033AA  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  8583  0033AC  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  8584  0033AE  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  8585  0033B0                     l5731:
  8586  0033B0  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  8587  0033B2  EFDD  F019         	goto	u5451
  8588  0033B6  EFDF  F019         	goto	u5450
  8589  0033BA                     u5451:
  8590  0033BA  EFE7  F019         	goto	l1463
  8591  0033BE                     u5450:
  8592  0033BE  0E02               	movlw	2
  8593  0033C0  600E               	cpfslt	___xxtofl@exp^0,c
  8594  0033C2  EFE5  F019         	goto	u5461
  8595  0033C6  EFE7  F019         	goto	u5460
  8596  0033CA                     u5461:
  8597  0033CA  EFD2  F019         	goto	l5729
  8598  0033CE                     u5460:
  8599  0033CE                     l1463:
  8600  0033CE  B00E               	btfsc	___xxtofl@exp^0,0,c
  8601  0033D0  EFEC  F019         	goto	u5471
  8602  0033D4  EFEE  F019         	goto	u5470
  8603  0033D8                     u5471:
  8604  0033D8  EFEF  F019         	goto	l5737
  8605  0033DC                     u5470:
  8606  0033DC  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  8607  0033DE                     l5737:
  8608  0033DE  90D8               	bcf	status,0,c
  8609  0033E0  320E               	rrcf	___xxtofl@exp^0,f,c
  8610  0033E2  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  8611  0033E6  6A0A               	clrf	(??___xxtofl+1)^0,c
  8612  0033E8  6A0B               	clrf	(??___xxtofl+2)^0,c
  8613  0033EA  6A0C               	clrf	(??___xxtofl+3)^0,c
  8614  0033EC  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  8615  0033F0  6A0B               	clrf	(??___xxtofl+2)^0,c
  8616  0033F2  6A0A               	clrf	(??___xxtofl+1)^0,c
  8617  0033F4  6A09               	clrf	??___xxtofl^0,c
  8618  0033F6  5009               	movf	??___xxtofl^0,w,c
  8619  0033F8  120F               	iorwf	___xxtofl@arg^0,f,c
  8620  0033FA  500A               	movf	(??___xxtofl+1)^0,w,c
  8621  0033FC  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  8622  0033FE  500B               	movf	(??___xxtofl+2)^0,w,c
  8623  003400  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  8624  003402  500C               	movf	(??___xxtofl+3)^0,w,c
  8625  003404  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  8626  003406  500D               	movf	___xxtofl@sign^0,w,c
  8627  003408  B4D8               	btfsc	status,2,c
  8628  00340A  EF09  F01A         	goto	u5481
  8629  00340E  EF0B  F01A         	goto	u5480
  8630  003412                     u5481:
  8631  003412  EF13  F01A         	goto	l5747
  8632  003416                     u5480:
  8633  003416  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  8634  003418  EF12  F01A         	goto	u5490
  8635  00341C  EF10  F01A         	goto	u5491
  8636  003420                     u5491:
  8637  003420  EF13  F01A         	goto	l5747
  8638  003424                     u5490:
  8639  003424  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  8640  003426                     l5747:
  8641  003426  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  8642  00342A  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  8643  00342E  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  8644  003432  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  8645  003436                     l1452:
  8646  003436  0012               	return		;funcret
  8647  003438                     __end_of___xxtofl:
  8648                           	callstack 0
  8649                           
  8650 ;; *************** function ___fldiv *****************
  8651 ;; Defined at:
  8652 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  8653 ;; Parameters:    Size  Location     Type
  8654 ;;  b               4   18[COMRAM] unsigned char 
  8655 ;;  a               4   22[COMRAM] unsigned char 
  8656 ;; Auto vars:     Size  Location     Type
  8657 ;;  grs             4   37[COMRAM] unsigned long 
  8658 ;;  rem             4   30[COMRAM] unsigned long 
  8659 ;;  new_exp         2   35[COMRAM] short 
  8660 ;;  aexp            1   42[COMRAM] unsigned char 
  8661 ;;  bexp            1   41[COMRAM] unsigned char 
  8662 ;;  sign            1   34[COMRAM] unsigned char 
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  4   18[COMRAM] unsigned char 
  8665 ;; Registers used:
  8666 ;;		wreg, status,2, status,0
  8667 ;; Tracked objects:
  8668 ;;		On entry : 0/0
  8669 ;;		On exit  : 0/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8672 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8673 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8674 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8675 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8676 ;;Total ram usage:       25 bytes
  8677 ;; Hardware stack levels used: 1
  8678 ;; Hardware stack levels required when called: 4
  8679 ;; This function calls:
  8680 ;;		Nothing
  8681 ;; This function is called by:
  8682 ;;		_DS18B20_temp_GetValue
  8683 ;;		_efgtoa
  8684 ;; This function uses a non-reentrant model
  8685 ;;
  8686                           
  8687                           	psect	text44
  8688  002AC0                     __ptext44:
  8689                           	callstack 0
  8690  002AC0                     ___fldiv:
  8691                           	callstack 22
  8692  002AC0  5016               	movf	(___fldiv@b+3)^0,w,c
  8693  002AC2  0B80               	andlw	128
  8694  002AC4  6E23               	movwf	___fldiv@sign^0,c
  8695  002AC6  5016               	movf	(___fldiv@b+3)^0,w,c
  8696  002AC8  2416               	addwf	(___fldiv@b+3)^0,w,c
  8697  002ACA  6E2A               	movwf	___fldiv@bexp^0,c
  8698  002ACC  AE15               	btfss	(___fldiv@b+2)^0,7,c
  8699  002ACE  EF6B  F015         	goto	u6531
  8700  002AD2  EF6D  F015         	goto	u6530
  8701  002AD6                     u6531:
  8702  002AD6  EF6E  F015         	goto	l6739
  8703  002ADA                     u6530:
  8704  002ADA  802A               	bsf	___fldiv@bexp^0,0,c
  8705  002ADC                     l6739:
  8706  002ADC  502A               	movf	___fldiv@bexp^0,w,c
  8707  002ADE  B4D8               	btfsc	status,2,c
  8708  002AE0  EF74  F015         	goto	u6541
  8709  002AE4  EF76  F015         	goto	u6540
  8710  002AE8                     u6541:
  8711  002AE8  EF8B  F015         	goto	l6749
  8712  002AEC                     u6540:
  8713  002AEC  282A               	incf	___fldiv@bexp^0,w,c
  8714  002AEE  A4D8               	btfss	status,2,c
  8715  002AF0  EF7C  F015         	goto	u6551
  8716  002AF4  EF7E  F015         	goto	u6550
  8717  002AF8                     u6551:
  8718  002AF8  EF86  F015         	goto	l6745
  8719  002AFC                     u6550:
  8720  002AFC  0E00               	movlw	0
  8721  002AFE  6E13               	movwf	___fldiv@b^0,c
  8722  002B00  0E00               	movlw	0
  8723  002B02  6E14               	movwf	(___fldiv@b+1)^0,c
  8724  002B04  0E00               	movlw	0
  8725  002B06  6E15               	movwf	(___fldiv@b+2)^0,c
  8726  002B08  0E00               	movlw	0
  8727  002B0A  6E16               	movwf	(___fldiv@b+3)^0,c
  8728  002B0C                     l6745:
  8729  002B0C  8E15               	bsf	(___fldiv@b+2)^0,7,c
  8730  002B0E  0E00               	movlw	0
  8731  002B10  6E16               	movwf	(___fldiv@b+3)^0,c
  8732  002B12  EF93  F015         	goto	l6751
  8733  002B16                     l6749:
  8734  002B16  0E00               	movlw	0
  8735  002B18  6E13               	movwf	___fldiv@b^0,c
  8736  002B1A  0E00               	movlw	0
  8737  002B1C  6E14               	movwf	(___fldiv@b+1)^0,c
  8738  002B1E  0E00               	movlw	0
  8739  002B20  6E15               	movwf	(___fldiv@b+2)^0,c
  8740  002B22  0E00               	movlw	0
  8741  002B24  6E16               	movwf	(___fldiv@b+3)^0,c
  8742  002B26                     l6751:
  8743  002B26  501A               	movf	(___fldiv@a+3)^0,w,c
  8744  002B28  0B80               	andlw	128
  8745  002B2A  1A23               	xorwf	___fldiv@sign^0,f,c
  8746  002B2C  501A               	movf	(___fldiv@a+3)^0,w,c
  8747  002B2E  241A               	addwf	(___fldiv@a+3)^0,w,c
  8748  002B30  6E2B               	movwf	___fldiv@aexp^0,c
  8749  002B32  AE19               	btfss	(___fldiv@a+2)^0,7,c
  8750  002B34  EF9E  F015         	goto	u6561
  8751  002B38  EFA0  F015         	goto	u6560
  8752  002B3C                     u6561:
  8753  002B3C  EFA1  F015         	goto	l6759
  8754  002B40                     u6560:
  8755  002B40  802B               	bsf	___fldiv@aexp^0,0,c
  8756  002B42                     l6759:
  8757  002B42  502B               	movf	___fldiv@aexp^0,w,c
  8758  002B44  B4D8               	btfsc	status,2,c
  8759  002B46  EFA7  F015         	goto	u6571
  8760  002B4A  EFA9  F015         	goto	u6570
  8761  002B4E                     u6571:
  8762  002B4E  EFBE  F015         	goto	l6769
  8763  002B52                     u6570:
  8764  002B52  282B               	incf	___fldiv@aexp^0,w,c
  8765  002B54  A4D8               	btfss	status,2,c
  8766  002B56  EFAF  F015         	goto	u6581
  8767  002B5A  EFB1  F015         	goto	u6580
  8768  002B5E                     u6581:
  8769  002B5E  EFB9  F015         	goto	l6765
  8770  002B62                     u6580:
  8771  002B62  0E00               	movlw	0
  8772  002B64  6E17               	movwf	___fldiv@a^0,c
  8773  002B66  0E00               	movlw	0
  8774  002B68  6E18               	movwf	(___fldiv@a+1)^0,c
  8775  002B6A  0E00               	movlw	0
  8776  002B6C  6E19               	movwf	(___fldiv@a+2)^0,c
  8777  002B6E  0E00               	movlw	0
  8778  002B70  6E1A               	movwf	(___fldiv@a+3)^0,c
  8779  002B72                     l6765:
  8780  002B72  8E19               	bsf	(___fldiv@a+2)^0,7,c
  8781  002B74  0E00               	movlw	0
  8782  002B76  6E1A               	movwf	(___fldiv@a+3)^0,c
  8783  002B78  EFC6  F015         	goto	l6771
  8784  002B7C                     l6769:
  8785  002B7C  0E00               	movlw	0
  8786  002B7E  6E17               	movwf	___fldiv@a^0,c
  8787  002B80  0E00               	movlw	0
  8788  002B82  6E18               	movwf	(___fldiv@a+1)^0,c
  8789  002B84  0E00               	movlw	0
  8790  002B86  6E19               	movwf	(___fldiv@a+2)^0,c
  8791  002B88  0E00               	movlw	0
  8792  002B8A  6E1A               	movwf	(___fldiv@a+3)^0,c
  8793  002B8C                     l6771:
  8794  002B8C  5017               	movf	___fldiv@a^0,w,c
  8795  002B8E  1018               	iorwf	(___fldiv@a+1)^0,w,c
  8796  002B90  1019               	iorwf	(___fldiv@a+2)^0,w,c
  8797  002B92  101A               	iorwf	(___fldiv@a+3)^0,w,c
  8798  002B94  A4D8               	btfss	status,2,c
  8799  002B96  EFCF  F015         	goto	u6591
  8800  002B9A  EFD1  F015         	goto	u6590
  8801  002B9E                     u6591:
  8802  002B9E  EFE9  F015         	goto	l6783
  8803  002BA2                     u6590:
  8804  002BA2  0E00               	movlw	0
  8805  002BA4  6E13               	movwf	___fldiv@b^0,c
  8806  002BA6  0E00               	movlw	0
  8807  002BA8  6E14               	movwf	(___fldiv@b+1)^0,c
  8808  002BAA  0E00               	movlw	0
  8809  002BAC  6E15               	movwf	(___fldiv@b+2)^0,c
  8810  002BAE  0E00               	movlw	0
  8811  002BB0  6E16               	movwf	(___fldiv@b+3)^0,c
  8812  002BB2  0E80               	movlw	128
  8813  002BB4  1215               	iorwf	(___fldiv@b+2)^0,f,c
  8814  002BB6  0E7F               	movlw	127
  8815  002BB8  1216               	iorwf	(___fldiv@b+3)^0,f,c
  8816  002BBA                     l6777:
  8817  002BBA  5023               	movf	___fldiv@sign^0,w,c
  8818  002BBC  1216               	iorwf	(___fldiv@b+3)^0,f,c
  8819  002BBE  C013  F013         	movff	___fldiv@b,?___fldiv
  8820  002BC2  C014  F014         	movff	___fldiv@b+1,?___fldiv+1
  8821  002BC6  C015  F015         	movff	___fldiv@b+2,?___fldiv+2
  8822  002BCA  C016  F016         	movff	___fldiv@b+3,?___fldiv+3
  8823  002BCE  EF2C  F017         	goto	l1376
  8824  002BD2                     l6783:
  8825  002BD2  502A               	movf	___fldiv@bexp^0,w,c
  8826  002BD4  A4D8               	btfss	status,2,c
  8827  002BD6  EFEF  F015         	goto	u6601
  8828  002BDA  EFF1  F015         	goto	u6600
  8829  002BDE                     u6601:
  8830  002BDE  EFFB  F015         	goto	l6791
  8831  002BE2                     u6600:
  8832  002BE2  0E00               	movlw	0
  8833  002BE4  6E13               	movwf	?___fldiv^0,c
  8834  002BE6  0E00               	movlw	0
  8835  002BE8  6E14               	movwf	(?___fldiv+1)^0,c
  8836  002BEA  0E00               	movlw	0
  8837  002BEC  6E15               	movwf	(?___fldiv+2)^0,c
  8838  002BEE  0E00               	movlw	0
  8839  002BF0  6E16               	movwf	(?___fldiv+3)^0,c
  8840  002BF2  EF2C  F017         	goto	l1376
  8841  002BF6                     l6791:
  8842  002BF6  502B               	movf	___fldiv@aexp^0,w,c
  8843  002BF8  C02A  F01B         	movff	___fldiv@bexp,??___fldiv
  8844  002BFC  6A1C               	clrf	(??___fldiv+1)^0,c
  8845  002BFE  5E1B               	subwf	??___fldiv^0,f,c
  8846  002C00  0E00               	movlw	0
  8847  002C02  5A1C               	subwfb	(??___fldiv+1)^0,f,c
  8848  002C04  0E7F               	movlw	127
  8849  002C06  241B               	addwf	??___fldiv^0,w,c
  8850  002C08  6E24               	movwf	___fldiv@new_exp^0,c
  8851  002C0A  0E00               	movlw	0
  8852  002C0C  201C               	addwfc	(??___fldiv+1)^0,w,c
  8853  002C0E  6E25               	movwf	(___fldiv@new_exp+1)^0,c
  8854  002C10  C013  F01F         	movff	___fldiv@b,___fldiv@rem
  8855  002C14  C014  F020         	movff	___fldiv@b+1,___fldiv@rem+1
  8856  002C18  C015  F021         	movff	___fldiv@b+2,___fldiv@rem+2
  8857  002C1C  C016  F022         	movff	___fldiv@b+3,___fldiv@rem+3
  8858  002C20  0E00               	movlw	0
  8859  002C22  6E13               	movwf	___fldiv@b^0,c
  8860  002C24  0E00               	movlw	0
  8861  002C26  6E14               	movwf	(___fldiv@b+1)^0,c
  8862  002C28  0E00               	movlw	0
  8863  002C2A  6E15               	movwf	(___fldiv@b+2)^0,c
  8864  002C2C  0E00               	movlw	0
  8865  002C2E  6E16               	movwf	(___fldiv@b+3)^0,c
  8866  002C30  0E00               	movlw	0
  8867  002C32  6E26               	movwf	___fldiv@grs^0,c
  8868  002C34  0E00               	movlw	0
  8869  002C36  6E27               	movwf	(___fldiv@grs+1)^0,c
  8870  002C38  0E00               	movlw	0
  8871  002C3A  6E28               	movwf	(___fldiv@grs+2)^0,c
  8872  002C3C  0E00               	movlw	0
  8873  002C3E  6E29               	movwf	(___fldiv@grs+3)^0,c
  8874  002C40  0E00               	movlw	0
  8875  002C42  6E2B               	movwf	___fldiv@aexp^0,c
  8876  002C44  EF5C  F016         	goto	l1378
  8877  002C48                     l6801:
  8878  002C48  502B               	movf	___fldiv@aexp^0,w,c
  8879  002C4A  B4D8               	btfsc	status,2,c
  8880  002C4C  EF2A  F016         	goto	u6611
  8881  002C50  EF2C  F016         	goto	u6610
  8882  002C54                     u6611:
  8883  002C54  EF43  F016         	goto	l6809
  8884  002C58                     u6610:
  8885  002C58  90D8               	bcf	status,0,c
  8886  002C5A  361F               	rlcf	___fldiv@rem^0,f,c
  8887  002C5C  3620               	rlcf	(___fldiv@rem+1)^0,f,c
  8888  002C5E  3621               	rlcf	(___fldiv@rem+2)^0,f,c
  8889  002C60  3622               	rlcf	(___fldiv@rem+3)^0,f,c
  8890  002C62  90D8               	bcf	status,0,c
  8891  002C64  3613               	rlcf	___fldiv@b^0,f,c
  8892  002C66  3614               	rlcf	(___fldiv@b+1)^0,f,c
  8893  002C68  3615               	rlcf	(___fldiv@b+2)^0,f,c
  8894  002C6A  3616               	rlcf	(___fldiv@b+3)^0,f,c
  8895  002C6C  AE29               	btfss	(___fldiv@grs+3)^0,7,c
  8896  002C6E  EF3B  F016         	goto	u6621
  8897  002C72  EF3D  F016         	goto	u6620
  8898  002C76                     u6621:
  8899  002C76  EF3E  F016         	goto	l1381
  8900  002C7A                     u6620:
  8901  002C7A  8013               	bsf	___fldiv@b^0,0,c
  8902  002C7C                     l1381:
  8903  002C7C  90D8               	bcf	status,0,c
  8904  002C7E  3626               	rlcf	___fldiv@grs^0,f,c
  8905  002C80  3627               	rlcf	(___fldiv@grs+1)^0,f,c
  8906  002C82  3628               	rlcf	(___fldiv@grs+2)^0,f,c
  8907  002C84  3629               	rlcf	(___fldiv@grs+3)^0,f,c
  8908  002C86                     l6809:
  8909  002C86  5017               	movf	___fldiv@a^0,w,c
  8910  002C88  5C1F               	subwf	___fldiv@rem^0,w,c
  8911  002C8A  5018               	movf	(___fldiv@a+1)^0,w,c
  8912  002C8C  5820               	subwfb	(___fldiv@rem+1)^0,w,c
  8913  002C8E  5019               	movf	(___fldiv@a+2)^0,w,c
  8914  002C90  5821               	subwfb	(___fldiv@rem+2)^0,w,c
  8915  002C92  501A               	movf	(___fldiv@a+3)^0,w,c
  8916  002C94  5822               	subwfb	(___fldiv@rem+3)^0,w,c
  8917  002C96  A0D8               	btfss	status,0,c
  8918  002C98  EF50  F016         	goto	u6631
  8919  002C9C  EF52  F016         	goto	u6630
  8920  002CA0                     u6631:
  8921  002CA0  EF5B  F016         	goto	l6815
  8922  002CA4                     u6630:
  8923  002CA4  8C29               	bsf	(___fldiv@grs+3)^0,6,c
  8924  002CA6  5017               	movf	___fldiv@a^0,w,c
  8925  002CA8  5E1F               	subwf	___fldiv@rem^0,f,c
  8926  002CAA  5018               	movf	(___fldiv@a+1)^0,w,c
  8927  002CAC  5A20               	subwfb	(___fldiv@rem+1)^0,f,c
  8928  002CAE  5019               	movf	(___fldiv@a+2)^0,w,c
  8929  002CB0  5A21               	subwfb	(___fldiv@rem+2)^0,f,c
  8930  002CB2  501A               	movf	(___fldiv@a+3)^0,w,c
  8931  002CB4  5A22               	subwfb	(___fldiv@rem+3)^0,f,c
  8932  002CB6                     l6815:
  8933  002CB6  2A2B               	incf	___fldiv@aexp^0,f,c
  8934  002CB8                     l1378:
  8935  002CB8  0E19               	movlw	25
  8936  002CBA  642B               	cpfsgt	___fldiv@aexp^0,c
  8937  002CBC  EF62  F016         	goto	u6641
  8938  002CC0  EF64  F016         	goto	u6640
  8939  002CC4                     u6641:
  8940  002CC4  EF24  F016         	goto	l6801
  8941  002CC8                     u6640:
  8942  002CC8  501F               	movf	___fldiv@rem^0,w,c
  8943  002CCA  1020               	iorwf	(___fldiv@rem+1)^0,w,c
  8944  002CCC  1021               	iorwf	(___fldiv@rem+2)^0,w,c
  8945  002CCE  1022               	iorwf	(___fldiv@rem+3)^0,w,c
  8946  002CD0  B4D8               	btfsc	status,2,c
  8947  002CD2  EF6D  F016         	goto	u6651
  8948  002CD6  EF6F  F016         	goto	u6650
  8949  002CDA                     u6651:
  8950  002CDA  EF87  F016         	goto	l6827
  8951  002CDE                     u6650:
  8952  002CDE  8026               	bsf	___fldiv@grs^0,0,c
  8953  002CE0  EF87  F016         	goto	l6827
  8954  002CE4                     l6821:
  8955  002CE4  90D8               	bcf	status,0,c
  8956  002CE6  3613               	rlcf	___fldiv@b^0,f,c
  8957  002CE8  3614               	rlcf	(___fldiv@b+1)^0,f,c
  8958  002CEA  3615               	rlcf	(___fldiv@b+2)^0,f,c
  8959  002CEC  3616               	rlcf	(___fldiv@b+3)^0,f,c
  8960  002CEE  AE29               	btfss	(___fldiv@grs+3)^0,7,c
  8961  002CF0  EF7C  F016         	goto	u6661
  8962  002CF4  EF7E  F016         	goto	u6660
  8963  002CF8                     u6661:
  8964  002CF8  EF7F  F016         	goto	l1387
  8965  002CFC                     u6660:
  8966  002CFC  8013               	bsf	___fldiv@b^0,0,c
  8967  002CFE                     l1387:
  8968  002CFE  90D8               	bcf	status,0,c
  8969  002D00  3626               	rlcf	___fldiv@grs^0,f,c
  8970  002D02  3627               	rlcf	(___fldiv@grs+1)^0,f,c
  8971  002D04  3628               	rlcf	(___fldiv@grs+2)^0,f,c
  8972  002D06  3629               	rlcf	(___fldiv@grs+3)^0,f,c
  8973  002D08  0624               	decf	___fldiv@new_exp^0,f,c
  8974  002D0A  A0D8               	btfss	status,0,c
  8975  002D0C  0625               	decf	(___fldiv@new_exp+1)^0,f,c
  8976  002D0E                     l6827:
  8977  002D0E  AE15               	btfss	(___fldiv@b+2)^0,7,c
  8978  002D10  EF8C  F016         	goto	u6671
  8979  002D14  EF8E  F016         	goto	u6670
  8980  002D18                     u6671:
  8981  002D18  EF72  F016         	goto	l6821
  8982  002D1C                     u6670:
  8983  002D1C  0E00               	movlw	0
  8984  002D1E  6E2B               	movwf	___fldiv@aexp^0,c
  8985  002D20  AE29               	btfss	(___fldiv@grs+3)^0,7,c
  8986  002D22  EF95  F016         	goto	u6681
  8987  002D26  EF97  F016         	goto	u6680
  8988  002D2A                     u6681:
  8989  002D2A  EFBB  F016         	goto	l1389
  8990  002D2E                     u6680:
  8991  002D2E  0EFF               	movlw	255
  8992  002D30  1426               	andwf	___fldiv@grs^0,w,c
  8993  002D32  6E1B               	movwf	??___fldiv^0,c
  8994  002D34  0EFF               	movlw	255
  8995  002D36  1427               	andwf	(___fldiv@grs+1)^0,w,c
  8996  002D38  6E1C               	movwf	(??___fldiv+1)^0,c
  8997  002D3A  0EFF               	movlw	255
  8998  002D3C  1428               	andwf	(___fldiv@grs+2)^0,w,c
  8999  002D3E  6E1D               	movwf	(??___fldiv+2)^0,c
  9000  002D40  0E7F               	movlw	127
  9001  002D42  1429               	andwf	(___fldiv@grs+3)^0,w,c
  9002  002D44  6E1E               	movwf	(??___fldiv+3)^0,c
  9003  002D46  501B               	movf	??___fldiv^0,w,c
  9004  002D48  101C               	iorwf	(??___fldiv+1)^0,w,c
  9005  002D4A  101D               	iorwf	(??___fldiv+2)^0,w,c
  9006  002D4C  101E               	iorwf	(??___fldiv+3)^0,w,c
  9007  002D4E  B4D8               	btfsc	status,2,c
  9008  002D50  EFAC  F016         	goto	u6691
  9009  002D54  EFAE  F016         	goto	u6690
  9010  002D58                     u6691:
  9011  002D58  EFB2  F016         	goto	l1390
  9012  002D5C                     u6690:
  9013  002D5C                     l6835:
  9014  002D5C  0E01               	movlw	1
  9015  002D5E  6E2B               	movwf	___fldiv@aexp^0,c
  9016  002D60  EFBB  F016         	goto	l1389
  9017  002D64                     l1390:
  9018  002D64  A013               	btfss	___fldiv@b^0,0,c
  9019  002D66  EFB7  F016         	goto	u6701
  9020  002D6A  EFB9  F016         	goto	u6700
  9021  002D6E                     u6701:
  9022  002D6E  EFBB  F016         	goto	l1389
  9023  002D72                     u6700:
  9024  002D72  EFAE  F016         	goto	l6835
  9025  002D76                     l1389:
  9026  002D76  502B               	movf	___fldiv@aexp^0,w,c
  9027  002D78  B4D8               	btfsc	status,2,c
  9028  002D7A  EFC1  F016         	goto	u6711
  9029  002D7E  EFC3  F016         	goto	u6710
  9030  002D82                     u6711:
  9031  002D82  EFE7  F016         	goto	l6847
  9032  002D86                     u6710:
  9033  002D86  0E01               	movlw	1
  9034  002D88  2613               	addwf	___fldiv@b^0,f,c
  9035  002D8A  0E00               	movlw	0
  9036  002D8C  2214               	addwfc	(___fldiv@b+1)^0,f,c
  9037  002D8E  2215               	addwfc	(___fldiv@b+2)^0,f,c
  9038  002D90  2216               	addwfc	(___fldiv@b+3)^0,f,c
  9039  002D92  A016               	btfss	(___fldiv@b+3)^0,0,c
  9040  002D94  EFCE  F016         	goto	u6721
  9041  002D98  EFD0  F016         	goto	u6720
  9042  002D9C                     u6721:
  9043  002D9C  EFE7  F016         	goto	l6847
  9044  002DA0                     u6720:
  9045  002DA0  C013  F01B         	movff	___fldiv@b,??___fldiv
  9046  002DA4  C014  F01C         	movff	___fldiv@b+1,??___fldiv+1
  9047  002DA8  C015  F01D         	movff	___fldiv@b+2,??___fldiv+2
  9048  002DAC  C016  F01E         	movff	___fldiv@b+3,??___fldiv+3
  9049  002DB0  341E               	rlcf	(??___fldiv+3)^0,w,c
  9050  002DB2  321E               	rrcf	(??___fldiv+3)^0,f,c
  9051  002DB4  321D               	rrcf	(??___fldiv+2)^0,f,c
  9052  002DB6  321C               	rrcf	(??___fldiv+1)^0,f,c
  9053  002DB8  321B               	rrcf	??___fldiv^0,f,c
  9054  002DBA  C01B  F013         	movff	??___fldiv,___fldiv@b
  9055  002DBE  C01C  F014         	movff	??___fldiv+1,___fldiv@b+1
  9056  002DC2  C01D  F015         	movff	??___fldiv+2,___fldiv@b+2
  9057  002DC6  C01E  F016         	movff	??___fldiv+3,___fldiv@b+3
  9058  002DCA  4A24               	infsnz	___fldiv@new_exp^0,f,c
  9059  002DCC  2A25               	incf	(___fldiv@new_exp+1)^0,f,c
  9060  002DCE                     l6847:
  9061  002DCE  BE25               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9062  002DD0  EFF2  F016         	goto	u6731
  9063  002DD4  5025               	movf	(___fldiv@new_exp+1)^0,w,c
  9064  002DD6  E108               	bnz	u6730
  9065  002DD8  2824               	incf	___fldiv@new_exp^0,w,c
  9066  002DDA  A0D8               	btfss	status,0,c
  9067  002DDC  EFF2  F016         	goto	u6731
  9068  002DE0  EFF4  F016         	goto	u6730
  9069  002DE4                     u6731:
  9070  002DE4  EFFF  F016         	goto	l6851
  9071  002DE8                     u6730:
  9072  002DE8  0E00               	movlw	0
  9073  002DEA  6E25               	movwf	(___fldiv@new_exp+1)^0,c
  9074  002DEC  6824               	setf	___fldiv@new_exp^0,c
  9075  002DEE  0E00               	movlw	0
  9076  002DF0  6E13               	movwf	___fldiv@b^0,c
  9077  002DF2  0E00               	movlw	0
  9078  002DF4  6E14               	movwf	(___fldiv@b+1)^0,c
  9079  002DF6  0E00               	movlw	0
  9080  002DF8  6E15               	movwf	(___fldiv@b+2)^0,c
  9081  002DFA  0E00               	movlw	0
  9082  002DFC  6E16               	movwf	(___fldiv@b+3)^0,c
  9083  002DFE                     l6851:
  9084  002DFE  BE25               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9085  002E00  EF0C  F017         	goto	u6740
  9086  002E04  5025               	movf	(___fldiv@new_exp+1)^0,w,c
  9087  002E06  E106               	bnz	u6741
  9088  002E08  0424               	decf	___fldiv@new_exp^0,w,c
  9089  002E0A  B0D8               	btfsc	status,0,c
  9090  002E0C  EF0A  F017         	goto	u6741
  9091  002E10  EF0C  F017         	goto	u6740
  9092  002E14                     u6741:
  9093  002E14  EF1A  F017         	goto	l6855
  9094  002E18                     u6740:
  9095  002E18  0E00               	movlw	0
  9096  002E1A  6E25               	movwf	(___fldiv@new_exp+1)^0,c
  9097  002E1C  0E00               	movlw	0
  9098  002E1E  6E24               	movwf	___fldiv@new_exp^0,c
  9099  002E20  0E00               	movlw	0
  9100  002E22  6E13               	movwf	___fldiv@b^0,c
  9101  002E24  0E00               	movlw	0
  9102  002E26  6E14               	movwf	(___fldiv@b+1)^0,c
  9103  002E28  0E00               	movlw	0
  9104  002E2A  6E15               	movwf	(___fldiv@b+2)^0,c
  9105  002E2C  0E00               	movlw	0
  9106  002E2E  6E16               	movwf	(___fldiv@b+3)^0,c
  9107  002E30  0E00               	movlw	0
  9108  002E32  6E23               	movwf	___fldiv@sign^0,c
  9109  002E34                     l6855:
  9110  002E34  C024  F02A         	movff	___fldiv@new_exp,___fldiv@bexp
  9111  002E38  A02A               	btfss	___fldiv@bexp^0,0,c
  9112  002E3A  EF21  F017         	goto	u6751
  9113  002E3E  EF23  F017         	goto	u6750
  9114  002E42                     u6751:
  9115  002E42  EF26  F017         	goto	l6861
  9116  002E46                     u6750:
  9117  002E46  8E15               	bsf	(___fldiv@b+2)^0,7,c
  9118  002E48  EF27  F017         	goto	l6863
  9119  002E4C                     l6861:
  9120  002E4C  9E15               	bcf	(___fldiv@b+2)^0,7,c
  9121  002E4E                     l6863:
  9122  002E4E  90D8               	bcf	status,0,c
  9123  002E50  302A               	rrcf	___fldiv@bexp^0,w,c
  9124  002E52  6E16               	movwf	(___fldiv@b+3)^0,c
  9125  002E54  EFDD  F015         	goto	l6777
  9126  002E58                     l1376:
  9127  002E58  0012               	return		;funcret
  9128  002E5A                     __end_of___fldiv:
  9129                           	callstack 0
  9130                           
  9131 ;; *************** function _DS18B20_init *****************
  9132 ;; Defined at:
  9133 ;;		line 29 in file "ds18b20.c"
  9134 ;; Parameters:    Size  Location     Type
  9135 ;;		None
  9136 ;; Auto vars:     Size  Location     Type
  9137 ;;		None
  9138 ;; Return value:  Size  Location     Type
  9139 ;;                  1    wreg      void 
  9140 ;; Registers used:
  9141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9142 ;; Tracked objects:
  9143 ;;		On entry : 0/0
  9144 ;;		On exit  : 0/0
  9145 ;;		Unchanged: 0/0
  9146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9151 ;;Total ram usage:        0 bytes
  9152 ;; Hardware stack levels used: 1
  9153 ;; Hardware stack levels required when called: 8
  9154 ;; This function calls:
  9155 ;;		_searchOneWireDevicesROM
  9156 ;; This function is called by:
  9157 ;;		_main
  9158 ;; This function uses a non-reentrant model
  9159 ;;
  9160                           
  9161                           	psect	text45
  9162  0045B4                     __ptext45:
  9163                           	callstack 0
  9164  0045B4                     _DS18B20_init:
  9165                           	callstack 22
  9166  0045B4                     
  9167                           ;ds18b20.c: 30:     SearchROMDevicesSucess = searchOneWireDevicesROM();
  9168  0045B4  EC2D  F017         	call	_searchOneWireDevicesROM	;wreg free
  9169  0045B8  0100               	movlb	0	; () banked
  9170  0045BA  6FB0               	movwf	_SearchROMDevicesSucess& (0+255),b
  9171  0045BC                     
  9172                           ; BSR set to: 0
  9173  0045BC  0012               	return		;funcret
  9174  0045BE                     __end_of_DS18B20_init:
  9175                           	callstack 0
  9176                           
  9177 ;; *************** function _searchOneWireDevicesROM *****************
  9178 ;; Defined at:
  9179 ;;		line 143 in file "ds18b20.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;		None
  9182 ;; Auto vars:     Size  Location     Type
  9183 ;;  j               2   33[COMRAM] int 
  9184 ;;  InputBitStat    1   32[COMRAM] unsigned char 
  9185 ;;  SelectedBit     1   27[COMRAM] unsigned char 
  9186 ;;  k               2   30[COMRAM] int 
  9187 ;;  bitnum          2   35[COMRAM] int 
  9188 ;;  mask            1   26[COMRAM] unsigned char 
  9189 ;;  CurrentConfl    1   25[COMRAM] unsigned char 
  9190 ;;  i               2   28[COMRAM] int 
  9191 ;;  SearchedROMD    8   16[COMRAM] unsigned char [8]
  9192 ;;  LastConflict    1   24[COMRAM] unsigned char 
  9193 ;; Return value:  Size  Location     Type
  9194 ;;                  1    wreg      unsigned char 
  9195 ;; Registers used:
  9196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9197 ;; Tracked objects:
  9198 ;;		On entry : 0/0
  9199 ;;		On exit  : 0/0
  9200 ;;		Unchanged: 0/0
  9201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9203 ;;      Locals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9204 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9205 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9206 ;;Total ram usage:       25 bytes
  9207 ;; Hardware stack levels used: 1
  9208 ;; Hardware stack levels required when called: 7
  9209 ;; This function calls:
  9210 ;;		___awdiv
  9211 ;;		_readOneWireBit
  9212 ;;		_resetOneWirePin
  9213 ;;		_writeOneWireBit
  9214 ;;		_writeOneWireByte
  9215 ;; This function is called by:
  9216 ;;		_DS18B20_init
  9217 ;; This function uses a non-reentrant model
  9218 ;;
  9219                           
  9220                           	psect	text46
  9221  002E5A                     __ptext46:
  9222                           	callstack 0
  9223  002E5A                     _searchOneWireDevicesROM:
  9224                           	callstack 22
  9225  002E5A                     
  9226                           ;ds18b20.c: 144:     unsigned char SearchedROMDevice[8];;ds18b20.c: 145:     unsigned ch
      +                          ar LastConflictBitNum = 0;
  9227  002E5A  0E00               	movlw	0
  9228  002E5C  6E19               	movwf	searchOneWireDevicesROM@LastConflictBitNum^0,c
  9229                           
  9230                           ;ds18b20.c: 147:     for(int i = 0; i < 2; i++){
  9231  002E5E  0E00               	movlw	0
  9232  002E60  6E1E               	movwf	(searchOneWireDevicesROM@i+1)^0,c
  9233  002E62  0E00               	movlw	0
  9234  002E64  6E1D               	movwf	searchOneWireDevicesROM@i^0,c
  9235  002E66                     l7769:
  9236                           
  9237                           ;ds18b20.c: 149:         for(int k = 0; k < 8; k++){
  9238  002E66  0E00               	movlw	0
  9239  002E68  6E20               	movwf	(searchOneWireDevicesROM@k+1)^0,c
  9240  002E6A  0E00               	movlw	0
  9241  002E6C  6E1F               	movwf	searchOneWireDevicesROM@k^0,c
  9242  002E6E                     l7775:
  9243                           
  9244                           ;ds18b20.c: 150:             SearchedROMDevice[k] = 0x00;
  9245  002E6E  0E11               	movlw	low searchOneWireDevicesROM@SearchedROMDevice
  9246  002E70  241F               	addwf	searchOneWireDevicesROM@k^0,w,c
  9247  002E72  6ED9               	movwf	fsr2l,c
  9248  002E74  0E00               	movlw	high searchOneWireDevicesROM@SearchedROMDevice
  9249  002E76  2020               	addwfc	(searchOneWireDevicesROM@k+1)^0,w,c
  9250  002E78  6EDA               	movwf	fsr2h,c
  9251  002E7A  0E00               	movlw	0
  9252  002E7C  6EDF               	movwf	indf2,c
  9253  002E7E                     
  9254                           ;ds18b20.c: 151:         }
  9255  002E7E  4A1F               	infsnz	searchOneWireDevicesROM@k^0,f,c
  9256  002E80  2A20               	incf	(searchOneWireDevicesROM@k+1)^0,f,c
  9257  002E82  BE20               	btfsc	(searchOneWireDevicesROM@k+1)^0,7,c
  9258  002E84  EF4D  F017         	goto	u8201
  9259  002E88  5020               	movf	(searchOneWireDevicesROM@k+1)^0,w,c
  9260  002E8A  E109               	bnz	u8200
  9261  002E8C  0E08               	movlw	8
  9262  002E8E  5C1F               	subwf	searchOneWireDevicesROM@k^0,w,c
  9263  002E90  A0D8               	btfss	status,0,c
  9264  002E92  EF4D  F017         	goto	u8201
  9265  002E96  EF4F  F017         	goto	u8200
  9266  002E9A                     u8201:
  9267  002E9A  EF37  F017         	goto	l7775
  9268  002E9E                     u8200:
  9269  002E9E                     
  9270                           ;ds18b20.c: 152:         if(resetOneWirePin()){
  9271  002E9E  EC71  F021         	call	_resetOneWirePin	;wreg free
  9272  002EA2  0900               	iorlw	0
  9273  002EA4  B4D8               	btfsc	status,2,c
  9274  002EA6  EF57  F017         	goto	u8211
  9275  002EAA  EF59  F017         	goto	u8210
  9276  002EAE                     u8211:
  9277  002EAE  EF5C  F017         	goto	l7787
  9278  002EB2                     u8210:
  9279  002EB2                     l7783:
  9280                           
  9281                           ;ds18b20.c: 153:             return 0;
  9282  002EB2  0E00               	movlw	0
  9283  002EB4  EF38  F018         	goto	l778
  9284  002EB8                     l7787:
  9285                           
  9286                           ;ds18b20.c: 155:         writeOneWireByte(0xF0);
  9287  002EB8  0EF0               	movlw	240
  9288  002EBA  ECE5  F021         	call	_writeOneWireByte
  9289  002EBE                     
  9290                           ;ds18b20.c: 156:         int bitnum = 1;
  9291  002EBE  0E00               	movlw	0
  9292  002EC0  6E25               	movwf	(searchOneWireDevicesROM@bitnum+1)^0,c
  9293  002EC2  0E01               	movlw	1
  9294  002EC4  6E24               	movwf	searchOneWireDevicesROM@bitnum^0,c
  9295  002EC6                     
  9296                           ;ds18b20.c: 157:         unsigned char CurrentConflictBitPos = 0;
  9297  002EC6  0E00               	movlw	0
  9298  002EC8  6E1A               	movwf	searchOneWireDevicesROM@CurrentConflictBitPos^0,c
  9299                           
  9300                           ;ds18b20.c: 158:         while(bitnum < 65){
  9301  002ECA  EFE0  F017         	goto	l7833
  9302  002ECE                     l7793:
  9303                           
  9304                           ;ds18b20.c: 160:             unsigned char InputBitStatus = 0x00;
  9305  002ECE  0E00               	movlw	0
  9306  002ED0  6E21               	movwf	searchOneWireDevicesROM@InputBitStatus^0,c
  9307  002ED2                     
  9308                           ;ds18b20.c: 161:             if(readOneWireBit() == 1){
  9309  002ED2  EC74  F022         	call	_readOneWireBit	;wreg free
  9310  002ED6  06E8               	decf	wreg,f,c
  9311  002ED8  A4D8               	btfss	status,2,c
  9312  002EDA  EF71  F017         	goto	u8221
  9313  002EDE  EF73  F017         	goto	u8220
  9314  002EE2                     u8221:
  9315  002EE2  EF74  F017         	goto	l7799
  9316  002EE6                     u8220:
  9317  002EE6                     
  9318                           ;ds18b20.c: 162:                 InputBitStatus |= 2;
  9319  002EE6  8221               	bsf	searchOneWireDevicesROM@InputBitStatus^0,1,c
  9320  002EE8                     l7799:
  9321                           
  9322                           ;ds18b20.c: 164:             if(readOneWireBit() == 1){
  9323  002EE8  EC74  F022         	call	_readOneWireBit	;wreg free
  9324  002EEC  06E8               	decf	wreg,f,c
  9325  002EEE  A4D8               	btfss	status,2,c
  9326  002EF0  EF7C  F017         	goto	u8231
  9327  002EF4  EF7E  F017         	goto	u8230
  9328  002EF8                     u8231:
  9329  002EF8  EF7F  F017         	goto	l7803
  9330  002EFC                     u8230:
  9331  002EFC                     
  9332                           ;ds18b20.c: 165:                 InputBitStatus |= 1;
  9333  002EFC  8021               	bsf	searchOneWireDevicesROM@InputBitStatus^0,0,c
  9334  002EFE                     l7803:
  9335                           
  9336                           ;ds18b20.c: 167:             if(InputBitStatus == 3){
  9337  002EFE  0E03               	movlw	3
  9338  002F00  1821               	xorwf	searchOneWireDevicesROM@InputBitStatus^0,w,c
  9339  002F02  A4D8               	btfss	status,2,c
  9340  002F04  EF86  F017         	goto	u8241
  9341  002F08  EF88  F017         	goto	u8240
  9342  002F0C                     u8241:
  9343  002F0C  EF8A  F017         	goto	l7809
  9344  002F10                     u8240:
  9345  002F10  EF59  F017         	goto	l7783
  9346  002F14                     l7809:
  9347                           
  9348                           ;ds18b20.c: 170:             if(InputBitStatus > 0){
  9349  002F14  5021               	movf	searchOneWireDevicesROM@InputBitStatus^0,w,c
  9350  002F16  B4D8               	btfsc	status,2,c
  9351  002F18  EF90  F017         	goto	u8251
  9352  002F1C  EF92  F017         	goto	u8250
  9353  002F20                     u8251:
  9354  002F20  EF97  F017         	goto	l7813
  9355  002F24                     u8250:
  9356  002F24                     
  9357                           ;ds18b20.c: 171:                 SelectedBit = InputBitStatus >> 1;
  9358  002F24  90D8               	bcf	status,0,c
  9359  002F26  3021               	rrcf	searchOneWireDevicesROM@InputBitStatus^0,w,c
  9360  002F28  6E1C               	movwf	searchOneWireDevicesROM@SelectedBit^0,c
  9361                           
  9362                           ;ds18b20.c: 172:             }else{
  9363  002F2A  EFAE  F017         	goto	l7821
  9364  002F2E                     l7813:
  9365                           
  9366                           ;ds18b20.c: 173:                 if(bitnum == LastConflictBitNum){
  9367  002F2E  5019               	movf	searchOneWireDevicesROM@LastConflictBitNum^0,w,c
  9368  002F30  6E0D               	movwf	??_searchOneWireDevicesROM^0,c
  9369  002F32  6A0E               	clrf	(??_searchOneWireDevicesROM+1)^0,c
  9370  002F34  5024               	movf	searchOneWireDevicesROM@bitnum^0,w,c
  9371  002F36  180D               	xorwf	??_searchOneWireDevicesROM^0,w,c
  9372  002F38  E107               	bnz	u8261
  9373  002F3A  5025               	movf	(searchOneWireDevicesROM@bitnum+1)^0,w,c
  9374  002F3C  180E               	xorwf	(??_searchOneWireDevicesROM+1)^0,w,c
  9375  002F3E  A4D8               	btfss	status,2,c
  9376  002F40  EFA4  F017         	goto	u8261
  9377  002F44  EFA6  F017         	goto	u8260
  9378  002F48                     u8261:
  9379  002F48  EFAA  F017         	goto	l7817
  9380  002F4C                     u8260:
  9381  002F4C                     
  9382                           ;ds18b20.c: 174:                     SelectedBit = 1;
  9383  002F4C  0E01               	movlw	1
  9384  002F4E  6E1C               	movwf	searchOneWireDevicesROM@SelectedBit^0,c
  9385                           
  9386                           ;ds18b20.c: 175:                 }else{
  9387  002F50  EFAE  F017         	goto	l7821
  9388  002F54                     l7817:
  9389                           
  9390                           ;ds18b20.c: 176:                     SelectedBit = 0;
  9391  002F54  0E00               	movlw	0
  9392  002F56  6E1C               	movwf	searchOneWireDevicesROM@SelectedBit^0,c
  9393  002F58                     
  9394                           ;ds18b20.c: 177:                     CurrentConflictBitPos = bitnum;
  9395  002F58  C024  F01A         	movff	searchOneWireDevicesROM@bitnum,searchOneWireDevicesROM@CurrentConflictBitPos
  9396  002F5C                     l7821:
  9397                           
  9398                           ;ds18b20.c: 180:             writeOneWireBit(SelectedBit);
  9399  002F5C  501C               	movf	searchOneWireDevicesROM@SelectedBit^0,w,c
  9400  002F5E  ECC4  F020         	call	_writeOneWireBit
  9401  002F62                     
  9402                           ;ds18b20.c: 181:             mask = 0x01;
  9403  002F62  0E01               	movlw	1
  9404  002F64  6E1B               	movwf	searchOneWireDevicesROM@mask^0,c
  9405  002F66                     
  9406                           ;ds18b20.c: 182:             mask <<= (bitnum - 1) %8;
  9407  002F66  C024  F00D         	movff	searchOneWireDevicesROM@bitnum,??_searchOneWireDevicesROM
  9408  002F6A  0EFF               	movlw	255
  9409  002F6C  260D               	addwf	??_searchOneWireDevicesROM^0,f,c
  9410  002F6E  0E07               	movlw	7
  9411  002F70  160D               	andwf	??_searchOneWireDevicesROM^0,f,c
  9412  002F72  280D               	incf	??_searchOneWireDevicesROM^0,w,c
  9413  002F74  6E0E               	movwf	(??_searchOneWireDevicesROM+1)^0,c
  9414  002F76  EFBF  F017         	goto	u8270
  9415  002F7A                     u8275:
  9416  002F7A  90D8               	bcf	status,0,c
  9417  002F7C  361B               	rlcf	searchOneWireDevicesROM@mask^0,f,c
  9418  002F7E                     u8270:
  9419  002F7E  2E0E               	decfsz	(??_searchOneWireDevicesROM+1)^0,f,c
  9420  002F80  EFBD  F017         	goto	u8275
  9421  002F84                     
  9422                           ;ds18b20.c: 183:             if(SelectedBit == 1){
  9423  002F84  041C               	decf	searchOneWireDevicesROM@SelectedBit^0,w,c
  9424  002F86  A4D8               	btfss	status,2,c
  9425  002F88  EFC8  F017         	goto	u8281
  9426  002F8C  EFCA  F017         	goto	u8280
  9427  002F90                     u8281:
  9428  002F90  EFDE  F017         	goto	l7831
  9429  002F94                     u8280:
  9430  002F94                     
  9431                           ;ds18b20.c: 184:                 SearchedROMDevice[(bitnum-1)/8] |= mask;
  9432  002F94  0EFF               	movlw	255
  9433  002F96  2424               	addwf	searchOneWireDevicesROM@bitnum^0,w,c
  9434  002F98  6E05               	movwf	___awdiv@dividend^0,c
  9435  002F9A  0EFF               	movlw	255
  9436  002F9C  2025               	addwfc	(searchOneWireDevicesROM@bitnum+1)^0,w,c
  9437  002F9E  6E06               	movwf	(___awdiv@dividend+1)^0,c
  9438  002FA0  0E00               	movlw	0
  9439  002FA2  6E08               	movwf	(___awdiv@divisor+1)^0,c
  9440  002FA4  0E08               	movlw	8
  9441  002FA6  6E07               	movwf	___awdiv@divisor^0,c
  9442  002FA8  EC8A  F01D         	call	___awdiv	;wreg free
  9443  002FAC  0E11               	movlw	low searchOneWireDevicesROM@SearchedROMDevice
  9444  002FAE  2405               	addwf	?___awdiv^0,w,c
  9445  002FB0  6ED9               	movwf	fsr2l,c
  9446  002FB2  0E00               	movlw	high searchOneWireDevicesROM@SearchedROMDevice
  9447  002FB4  2006               	addwfc	(?___awdiv+1)^0,w,c
  9448  002FB6  6EDA               	movwf	fsr2h,c
  9449  002FB8  501B               	movf	searchOneWireDevicesROM@mask^0,w,c
  9450  002FBA  12DF               	iorwf	indf2,f,c
  9451  002FBC                     l7831:
  9452                           
  9453                           ;ds18b20.c: 186:             bitnum++;
  9454  002FBC  4A24               	infsnz	searchOneWireDevicesROM@bitnum^0,f,c
  9455  002FBE  2A25               	incf	(searchOneWireDevicesROM@bitnum+1)^0,f,c
  9456  002FC0                     l7833:
  9457                           
  9458                           ;ds18b20.c: 158:         while(bitnum < 65){
  9459  002FC0  BE25               	btfsc	(searchOneWireDevicesROM@bitnum+1)^0,7,c
  9460  002FC2  EFEC  F017         	goto	u8291
  9461  002FC6  5025               	movf	(searchOneWireDevicesROM@bitnum+1)^0,w,c
  9462  002FC8  E109               	bnz	u8290
  9463  002FCA  0E41               	movlw	65
  9464  002FCC  5C24               	subwf	searchOneWireDevicesROM@bitnum^0,w,c
  9465  002FCE  A0D8               	btfss	status,0,c
  9466  002FD0  EFEC  F017         	goto	u8291
  9467  002FD4  EFEE  F017         	goto	u8290
  9468  002FD8                     u8291:
  9469  002FD8  EF67  F017         	goto	l7793
  9470  002FDC                     u8290:
  9471  002FDC                     
  9472                           ;ds18b20.c: 188:         LastConflictBitNum = CurrentConflictBitPos;
  9473  002FDC  C01A  F019         	movff	searchOneWireDevicesROM@CurrentConflictBitPos,searchOneWireDevicesROM@LastConflic
      +                          tBitNum
  9474  002FE0                     
  9475                           ;ds18b20.c: 189:         for(int j = 0; j < 8; j++){
  9476  002FE0  0E00               	movlw	0
  9477  002FE2  6E23               	movwf	(searchOneWireDevicesROM@j+1)^0,c
  9478  002FE4  0E00               	movlw	0
  9479  002FE6  6E22               	movwf	searchOneWireDevicesROM@j^0,c
  9480  002FE8                     l7841:
  9481                           
  9482                           ;ds18b20.c: 190:             DeviceAddressMap[i][j] = SearchedROMDevice[j];
  9483  002FE8  0E11               	movlw	low searchOneWireDevicesROM@SearchedROMDevice
  9484  002FEA  2422               	addwf	searchOneWireDevicesROM@j^0,w,c
  9485  002FEC  6ED9               	movwf	fsr2l,c
  9486  002FEE  0E00               	movlw	high searchOneWireDevicesROM@SearchedROMDevice
  9487  002FF0  2023               	addwfc	(searchOneWireDevicesROM@j+1)^0,w,c
  9488  002FF2  6EDA               	movwf	fsr2h,c
  9489  002FF4  C01D  F00D         	movff	searchOneWireDevicesROM@i,??_searchOneWireDevicesROM
  9490  002FF8  C01E  F00E         	movff	searchOneWireDevicesROM@i+1,??_searchOneWireDevicesROM+1
  9491  002FFC  90D8               	bcf	status,0,c
  9492  002FFE  360D               	rlcf	??_searchOneWireDevicesROM^0,f,c
  9493  003000  360E               	rlcf	(??_searchOneWireDevicesROM+1)^0,f,c
  9494  003002  90D8               	bcf	status,0,c
  9495  003004  360D               	rlcf	??_searchOneWireDevicesROM^0,f,c
  9496  003006  360E               	rlcf	(??_searchOneWireDevicesROM+1)^0,f,c
  9497  003008  90D8               	bcf	status,0,c
  9498  00300A  360D               	rlcf	??_searchOneWireDevicesROM^0,f,c
  9499  00300C  360E               	rlcf	(??_searchOneWireDevicesROM+1)^0,f,c
  9500  00300E  0E50               	movlw	low _DeviceAddressMap
  9501  003010  6E0F               	movwf	(??_searchOneWireDevicesROM+2)^0,c
  9502  003012  0E01               	movlw	high _DeviceAddressMap
  9503  003014  6E10               	movwf	(??_searchOneWireDevicesROM+3)^0,c
  9504  003016  500D               	movf	??_searchOneWireDevicesROM^0,w,c
  9505  003018  260F               	addwf	(??_searchOneWireDevicesROM+2)^0,f,c
  9506  00301A  500E               	movf	(??_searchOneWireDevicesROM+1)^0,w,c
  9507  00301C  2210               	addwfc	(??_searchOneWireDevicesROM+3)^0,f,c
  9508  00301E  5022               	movf	searchOneWireDevicesROM@j^0,w,c
  9509  003020  240F               	addwf	(??_searchOneWireDevicesROM+2)^0,w,c
  9510  003022  6EE1               	movwf	fsr1l,c
  9511  003024  5023               	movf	(searchOneWireDevicesROM@j+1)^0,w,c
  9512  003026  2010               	addwfc	(??_searchOneWireDevicesROM+3)^0,w,c
  9513  003028  6EE2               	movwf	fsr1h,c
  9514  00302A  CFDF FFE7          	movff	indf2,indf1
  9515  00302E                     
  9516                           ;ds18b20.c: 191:         }
  9517  00302E  4A22               	infsnz	searchOneWireDevicesROM@j^0,f,c
  9518  003030  2A23               	incf	(searchOneWireDevicesROM@j+1)^0,f,c
  9519  003032  BE23               	btfsc	(searchOneWireDevicesROM@j+1)^0,7,c
  9520  003034  EF25  F018         	goto	u8301
  9521  003038  5023               	movf	(searchOneWireDevicesROM@j+1)^0,w,c
  9522  00303A  E109               	bnz	u8300
  9523  00303C  0E08               	movlw	8
  9524  00303E  5C22               	subwf	searchOneWireDevicesROM@j^0,w,c
  9525  003040  A0D8               	btfss	status,0,c
  9526  003042  EF25  F018         	goto	u8301
  9527  003046  EF27  F018         	goto	u8300
  9528  00304A                     u8301:
  9529  00304A  EFF4  F017         	goto	l7841
  9530  00304E                     u8300:
  9531  00304E                     
  9532                           ;ds18b20.c: 192:     }
  9533  00304E  4A1D               	infsnz	searchOneWireDevicesROM@i^0,f,c
  9534  003050  2A1E               	incf	(searchOneWireDevicesROM@i+1)^0,f,c
  9535  003052  BE1E               	btfsc	(searchOneWireDevicesROM@i+1)^0,7,c
  9536  003054  EF35  F018         	goto	u8311
  9537  003058  501E               	movf	(searchOneWireDevicesROM@i+1)^0,w,c
  9538  00305A  E109               	bnz	u8310
  9539  00305C  0E02               	movlw	2
  9540  00305E  5C1D               	subwf	searchOneWireDevicesROM@i^0,w,c
  9541  003060  A0D8               	btfss	status,0,c
  9542  003062  EF35  F018         	goto	u8311
  9543  003066  EF37  F018         	goto	u8310
  9544  00306A                     u8311:
  9545  00306A  EF33  F017         	goto	l7769
  9546  00306E                     u8310:
  9547  00306E                     
  9548                           ;ds18b20.c: 193:     return 1;
  9549  00306E  0E01               	movlw	1
  9550  003070                     l778:
  9551  003070  0012               	return		;funcret
  9552  003072                     __end_of_searchOneWireDevicesROM:
  9553                           	callstack 0
  9554                           
  9555 ;; *************** function _writeOneWireByte *****************
  9556 ;; Defined at:
  9557 ;;		line 112 in file "ds18b20.c"
  9558 ;; Parameters:    Size  Location     Type
  9559 ;;  data            1    wreg     unsigned char 
  9560 ;; Auto vars:     Size  Location     Type
  9561 ;;  data            1    5[COMRAM] unsigned char 
  9562 ;;  i               2    6[COMRAM] int 
  9563 ;; Return value:  Size  Location     Type
  9564 ;;                  1    wreg      void 
  9565 ;; Registers used:
  9566 ;;		wreg, status,2, status,0, cstack
  9567 ;; Tracked objects:
  9568 ;;		On entry : 0/0
  9569 ;;		On exit  : 0/0
  9570 ;;		Unchanged: 0/0
  9571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9573 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9575 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9576 ;;Total ram usage:        3 bytes
  9577 ;; Hardware stack levels used: 1
  9578 ;; Hardware stack levels required when called: 6
  9579 ;; This function calls:
  9580 ;;		_writeOneWireBit
  9581 ;; This function is called by:
  9582 ;;		_DS18B20_temp_GetValue
  9583 ;;		_addressOneWireDevice
  9584 ;;		_searchOneWireDevicesROM
  9585 ;; This function uses a non-reentrant model
  9586 ;;
  9587                           
  9588                           	psect	text47
  9589  0043CA                     __ptext47:
  9590                           	callstack 0
  9591  0043CA                     _writeOneWireByte:
  9592                           	callstack 23
  9593                           
  9594                           ;incstack = 0
  9595                           ;writeOneWireByte@data stored from wreg
  9596  0043CA  6E06               	movwf	writeOneWireByte@data^0,c
  9597  0043CC                     
  9598                           ;ds18b20.c: 113:     for(int i = 0; i < 8; i++){
  9599  0043CC  0E00               	movlw	0
  9600  0043CE  6E08               	movwf	(writeOneWireByte@i+1)^0,c
  9601  0043D0  0E00               	movlw	0
  9602  0043D2  6E07               	movwf	writeOneWireByte@i^0,c
  9603  0043D4                     l5367:
  9604                           
  9605                           ;ds18b20.c: 114:         writeOneWireBit(data & 0x01);
  9606  0043D4  5006               	movf	writeOneWireByte@data^0,w,c
  9607  0043D6  0B01               	andlw	1
  9608  0043D8  ECC4  F020         	call	_writeOneWireBit
  9609  0043DC                     
  9610                           ;ds18b20.c: 115:         data >>= 1;
  9611  0043DC  90D8               	bcf	status,0,c
  9612  0043DE  3206               	rrcf	writeOneWireByte@data^0,f,c
  9613  0043E0                     
  9614                           ;ds18b20.c: 116:     }
  9615  0043E0  4A07               	infsnz	writeOneWireByte@i^0,f,c
  9616  0043E2  2A08               	incf	(writeOneWireByte@i+1)^0,f,c
  9617  0043E4  BE08               	btfsc	(writeOneWireByte@i+1)^0,7,c
  9618  0043E6  EFFE  F021         	goto	u5101
  9619  0043EA  5008               	movf	(writeOneWireByte@i+1)^0,w,c
  9620  0043EC  E109               	bnz	u5100
  9621  0043EE  0E08               	movlw	8
  9622  0043F0  5C07               	subwf	writeOneWireByte@i^0,w,c
  9623  0043F2  A0D8               	btfss	status,0,c
  9624  0043F4  EFFE  F021         	goto	u5101
  9625  0043F8  EF00  F022         	goto	u5100
  9626  0043FC                     u5101:
  9627  0043FC  EFEA  F021         	goto	l5367
  9628  004400                     u5100:
  9629  004400  0012               	return		;funcret
  9630  004402                     __end_of_writeOneWireByte:
  9631                           	callstack 0
  9632                           
  9633 ;; *************** function _writeOneWireBit *****************
  9634 ;; Defined at:
  9635 ;;		line 83 in file "ds18b20.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;  WriteArg        1    wreg     unsigned char 
  9638 ;; Auto vars:     Size  Location     Type
  9639 ;;  WriteArg        1    4[COMRAM] unsigned char 
  9640 ;; Return value:  Size  Location     Type
  9641 ;;                  1    wreg      void 
  9642 ;; Registers used:
  9643 ;;		wreg, status,2, status,0, cstack
  9644 ;; Tracked objects:
  9645 ;;		On entry : 0/0
  9646 ;;		On exit  : 0/0
  9647 ;;		Unchanged: 0/0
  9648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9652 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9653 ;;Total ram usage:        1 bytes
  9654 ;; Hardware stack levels used: 1
  9655 ;; Hardware stack levels required when called: 5
  9656 ;; This function calls:
  9657 ;;		_driveOneWireHigh
  9658 ;;		_driveOneWireLow
  9659 ;; This function is called by:
  9660 ;;		_writeOneWireByte
  9661 ;;		_searchOneWireDevicesROM
  9662 ;; This function uses a non-reentrant model
  9663 ;;
  9664                           
  9665                           	psect	text48
  9666  004188                     __ptext48:
  9667                           	callstack 0
  9668  004188                     _writeOneWireBit:
  9669                           	callstack 23
  9670                           
  9671                           ;incstack = 0
  9672                           ;writeOneWireBit@WriteArg stored from wreg
  9673  004188  6E05               	movwf	writeOneWireBit@WriteArg^0,c
  9674  00418A                     
  9675                           ;ds18b20.c: 84:     if(WriteArg == 1){
  9676  00418A  0405               	decf	writeOneWireBit@WriteArg^0,w,c
  9677  00418C  A4D8               	btfss	status,2,c
  9678  00418E  EFCB  F020         	goto	u4501
  9679  004192  EFCD  F020         	goto	u4500
  9680  004196                     u4501:
  9681  004196  EFDB  F020         	goto	l4951
  9682  00419A                     u4500:
  9683  00419A                     
  9684                           ;ds18b20.c: 85:         driveOneWireLow();
  9685  00419A  ECDF  F022         	call	_driveOneWireLow	;wreg free
  9686  00419E                     
  9687                           ;ds18b20.c: 86:         _delay((unsigned long)((6)*(8000000/4000000.0)));
  9688  00419E  0E04               	movlw	4
  9689  0041A0                     u8377:
  9690  0041A0  2EE8               	decfsz	wreg,f,c
  9691  0041A2  D7FE               	bra	u8377
  9692  0041A4                     
  9693                           ;ds18b20.c: 87:         driveOneWireHigh();
  9694  0041A4  ECE2  F022         	call	_driveOneWireHigh	;wreg free
  9695                           
  9696                           ;ds18b20.c: 88:         _delay((unsigned long)((64)*(8000000/4000000.0)));
  9697  0041A8  0E2A               	movlw	42
  9698  0041AA                     u8387:
  9699  0041AA  2EE8               	decfsz	wreg,f,c
  9700  0041AC  D7FE               	bra	u8387
  9701  0041AE  F000 F000          	nop2	
  9702                           
  9703                           ;ds18b20.c: 89:     }else{
  9704  0041B2  EFE7  F020         	goto	l749
  9705  0041B6                     l4951:
  9706                           
  9707                           ;ds18b20.c: 90:         driveOneWireLow();
  9708  0041B6  ECDF  F022         	call	_driveOneWireLow	;wreg free
  9709  0041BA                     
  9710                           ;ds18b20.c: 91:         _delay((unsigned long)((60)*(8000000/4000000.0)));
  9711  0041BA  0E28               	movlw	40
  9712  0041BC                     u8397:
  9713  0041BC  2EE8               	decfsz	wreg,f,c
  9714  0041BE  D7FE               	bra	u8397
  9715  0041C0                     
  9716                           ;ds18b20.c: 92:         driveOneWireHigh();
  9717  0041C0  ECE2  F022         	call	_driveOneWireHigh	;wreg free
  9718                           
  9719                           ;ds18b20.c: 93:         _delay((unsigned long)((10)*(8000000/4000000.0)));
  9720  0041C4  0E06               	movlw	6
  9721  0041C6                     u8407:
  9722  0041C6  2EE8               	decfsz	wreg,f,c
  9723  0041C8  D7FE               	bra	u8407
  9724  0041CA  F000 F000          	nop2	
  9725  0041CE                     l749:
  9726  0041CE  0012               	return		;funcret
  9727  0041D0                     __end_of_writeOneWireBit:
  9728                           	callstack 0
  9729                           
  9730 ;; *************** function _resetOneWirePin *****************
  9731 ;; Defined at:
  9732 ;;		line 97 in file "ds18b20.c"
  9733 ;; Parameters:    Size  Location     Type
  9734 ;;		None
  9735 ;; Auto vars:     Size  Location     Type
  9736 ;;  presence        1    5[COMRAM] unsigned char 
  9737 ;; Return value:  Size  Location     Type
  9738 ;;                  1    wreg      unsigned char 
  9739 ;; Registers used:
  9740 ;;		wreg, status,2, cstack
  9741 ;; Tracked objects:
  9742 ;;		On entry : 0/0
  9743 ;;		On exit  : 0/0
  9744 ;;		Unchanged: 0/0
  9745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9747 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9749 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9750 ;;Total ram usage:        1 bytes
  9751 ;; Hardware stack levels used: 1
  9752 ;; Hardware stack levels required when called: 5
  9753 ;; This function calls:
  9754 ;;		_driveOneWireHigh
  9755 ;;		_driveOneWireLow
  9756 ;;		_sampleOneWirePin
  9757 ;; This function is called by:
  9758 ;;		_DS18B20_temp_GetValue
  9759 ;;		_addressOneWireDevice
  9760 ;;		_searchOneWireDevicesROM
  9761 ;; This function uses a non-reentrant model
  9762 ;;
  9763                           
  9764                           	psect	text49
  9765  0042E2                     __ptext49:
  9766                           	callstack 0
  9767  0042E2                     _resetOneWirePin:
  9768                           	callstack 24
  9769  0042E2                     
  9770                           ;ds18b20.c: 98:     unsigned char presence;;ds18b20.c: 100:     driveOneWireLow();
  9771  0042E2  ECDF  F022         	call	_driveOneWireLow	;wreg free
  9772  0042E6                     
  9773                           ;ds18b20.c: 101:     _delay((unsigned long)((240)*(8000000/4000000.0)));
  9774  0042E6  0EA0               	movlw	160
  9775  0042E8                     u8417:
  9776  0042E8  2EE8               	decfsz	wreg,f,c
  9777  0042EA  D7FE               	bra	u8417
  9778  0042EC                     
  9779                           ;ds18b20.c: 102:     _delay((unsigned long)((240)*(8000000/4000000.0)));
  9780  0042EC  0EA0               	movlw	160
  9781  0042EE                     u8427:
  9782  0042EE  2EE8               	decfsz	wreg,f,c
  9783  0042F0  D7FE               	bra	u8427
  9784                           
  9785                           ;ds18b20.c: 103:     driveOneWireHigh();
  9786  0042F2  ECE2  F022         	call	_driveOneWireHigh	;wreg free
  9787  0042F6                     
  9788                           ;ds18b20.c: 104:     _delay((unsigned long)((70)*(8000000/4000000.0)));
  9789  0042F6  0E2E               	movlw	46
  9790  0042F8                     u8437:
  9791  0042F8  2EE8               	decfsz	wreg,f,c
  9792  0042FA  D7FE               	bra	u8437
  9793  0042FC  F000 F000          	nop2	
  9794  004300                     
  9795                           ;ds18b20.c: 105:     presence = sampleOneWirePin();
  9796  004300  ECB0  F022         	call	_sampleOneWirePin	;wreg free
  9797  004304  6E06               	movwf	resetOneWirePin@presence^0,c
  9798  004306                     
  9799                           ;ds18b20.c: 106:     _delay((unsigned long)((205)*(8000000/4000000.0)));
  9800  004306  0E88               	movlw	136
  9801  004308                     u8447:
  9802  004308  2EE8               	decfsz	wreg,f,c
  9803  00430A  D7FE               	bra	u8447
  9804  00430C  F000 F000          	nop2	
  9805  004310                     
  9806                           ;ds18b20.c: 107:     _delay((unsigned long)((205)*(8000000/4000000.0)));
  9807  004310  0E88               	movlw	136
  9808  004312                     u8457:
  9809  004312  2EE8               	decfsz	wreg,f,c
  9810  004314  D7FE               	bra	u8457
  9811  004316  F000 F000          	nop2	
  9812  00431A                     
  9813                           ;ds18b20.c: 108:     driveOneWireHigh();
  9814  00431A  ECE2  F022         	call	_driveOneWireHigh	;wreg free
  9815  00431E                     
  9816                           ;ds18b20.c: 109:     return presence;
  9817  00431E  5006               	movf	resetOneWirePin@presence^0,w,c
  9818  004320  0012               	return		;funcret
  9819  004322                     __end_of_resetOneWirePin:
  9820                           	callstack 0
  9821                           
  9822 ;; *************** function _readOneWireBit *****************
  9823 ;; Defined at:
  9824 ;;		line 71 in file "ds18b20.c"
  9825 ;; Parameters:    Size  Location     Type
  9826 ;;		None
  9827 ;; Auto vars:     Size  Location     Type
  9828 ;;  result          1    5[COMRAM] unsigned char 
  9829 ;; Return value:  Size  Location     Type
  9830 ;;                  1    wreg      unsigned char 
  9831 ;; Registers used:
  9832 ;;		wreg, status,2, cstack
  9833 ;; Tracked objects:
  9834 ;;		On entry : 0/0
  9835 ;;		On exit  : 0/0
  9836 ;;		Unchanged: 0/0
  9837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9839 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9841 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9842 ;;Total ram usage:        1 bytes
  9843 ;; Hardware stack levels used: 1
  9844 ;; Hardware stack levels required when called: 5
  9845 ;; This function calls:
  9846 ;;		_driveOneWireHigh
  9847 ;;		_driveOneWireLow
  9848 ;;		_sampleOneWirePin
  9849 ;; This function is called by:
  9850 ;;		_readOneWireByte
  9851 ;;		_searchOneWireDevicesROM
  9852 ;; This function uses a non-reentrant model
  9853 ;;
  9854                           
  9855                           	psect	text50
  9856  0044E8                     __ptext50:
  9857                           	callstack 0
  9858  0044E8                     _readOneWireBit:
  9859                           	callstack 23
  9860  0044E8                     
  9861                           ;ds18b20.c: 74:     driveOneWireLow();
  9862  0044E8  ECDF  F022         	call	_driveOneWireLow	;wreg free
  9863  0044EC                     
  9864                           ;ds18b20.c: 75:     _delay((unsigned long)((6)*(8000000/4000000.0)));
  9865  0044EC  0E04               	movlw	4
  9866  0044EE                     u8467:
  9867  0044EE  2EE8               	decfsz	wreg,f,c
  9868  0044F0  D7FE               	bra	u8467
  9869  0044F2                     
  9870                           ;ds18b20.c: 76:     driveOneWireHigh();
  9871  0044F2  ECE2  F022         	call	_driveOneWireHigh	;wreg free
  9872  0044F6                     
  9873                           ;ds18b20.c: 77:     _delay((unsigned long)((9)*(8000000/4000000.0)));
  9874  0044F6  0E06               	movlw	6
  9875  0044F8                     u8477:
  9876  0044F8  2EE8               	decfsz	wreg,f,c
  9877  0044FA  D7FE               	bra	u8477
  9878  0044FC                     
  9879                           ;ds18b20.c: 78:     result = sampleOneWirePin();
  9880  0044FC  ECB0  F022         	call	_sampleOneWirePin	;wreg free
  9881  004500  6E06               	movwf	readOneWireBit@result^0,c
  9882  004502                     
  9883                           ;ds18b20.c: 79:     _delay((unsigned long)((55)*(8000000/4000000.0)));
  9884  004502  0E24               	movlw	36
  9885  004504                     u8487:
  9886  004504  2EE8               	decfsz	wreg,f,c
  9887  004506  D7FE               	bra	u8487
  9888  004508  F000 F000          	nop2	
  9889  00450C                     
  9890                           ;ds18b20.c: 80:     return result;
  9891  00450C  5006               	movf	readOneWireBit@result^0,w,c
  9892  00450E  0012               	return		;funcret
  9893  004510                     __end_of_readOneWireBit:
  9894                           	callstack 0
  9895                           
  9896 ;; *************** function _sampleOneWirePin *****************
  9897 ;; Defined at:
  9898 ;;		line 63 in file "ds18b20.c"
  9899 ;; Parameters:    Size  Location     Type
  9900 ;;		None
  9901 ;; Auto vars:     Size  Location     Type
  9902 ;;  result          1    4[COMRAM] unsigned char 
  9903 ;; Return value:  Size  Location     Type
  9904 ;;                  1    wreg      unsigned char 
  9905 ;; Registers used:
  9906 ;;		wreg, status,2
  9907 ;; Tracked objects:
  9908 ;;		On entry : 0/0
  9909 ;;		On exit  : 0/0
  9910 ;;		Unchanged: 0/0
  9911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9915 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9916 ;;Total ram usage:        1 bytes
  9917 ;; Hardware stack levels used: 1
  9918 ;; Hardware stack levels required when called: 4
  9919 ;; This function calls:
  9920 ;;		Nothing
  9921 ;; This function is called by:
  9922 ;;		_readOneWireBit
  9923 ;;		_resetOneWirePin
  9924 ;; This function uses a non-reentrant model
  9925 ;;
  9926                           
  9927                           	psect	text51
  9928  004560                     __ptext51:
  9929                           	callstack 0
  9930  004560                     _sampleOneWirePin:
  9931                           	callstack 24
  9932  004560  8494               	bsf	148,2,c	;volatile
  9933  004562                     
  9934                           ;ds18b20.c: 67:     result = PORTCbits.RC2;
  9935  004562  0E00               	movlw	0
  9936  004564  B482               	btfsc	130,2,c	;volatile
  9937  004566  0E01               	movlw	1
  9938  004568  6E05               	movwf	sampleOneWirePin@result^0,c
  9939  00456A                     
  9940                           ;ds18b20.c: 68:     return result;
  9941  00456A  5005               	movf	sampleOneWirePin@result^0,w,c
  9942  00456C  0012               	return		;funcret
  9943  00456E                     __end_of_sampleOneWirePin:
  9944                           	callstack 0
  9945                           
  9946 ;; *************** function _driveOneWireLow *****************
  9947 ;; Defined at:
  9948 ;;		line 53 in file "ds18b20.c"
  9949 ;; Parameters:    Size  Location     Type
  9950 ;;		None
  9951 ;; Auto vars:     Size  Location     Type
  9952 ;;		None
  9953 ;; Return value:  Size  Location     Type
  9954 ;;                  1    wreg      void 
  9955 ;; Registers used:
  9956 ;;		None
  9957 ;; Tracked objects:
  9958 ;;		On entry : 0/0
  9959 ;;		On exit  : 0/0
  9960 ;;		Unchanged: 0/0
  9961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9966 ;;Total ram usage:        0 bytes
  9967 ;; Hardware stack levels used: 1
  9968 ;; Hardware stack levels required when called: 4
  9969 ;; This function calls:
  9970 ;;		Nothing
  9971 ;; This function is called by:
  9972 ;;		_readOneWireBit
  9973 ;;		_writeOneWireBit
  9974 ;;		_resetOneWirePin
  9975 ;; This function uses a non-reentrant model
  9976 ;;
  9977                           
  9978                           	psect	text52
  9979  0045BE                     __ptext52:
  9980                           	callstack 0
  9981  0045BE                     _driveOneWireLow:
  9982                           	callstack 23
  9983  0045BE  9494               	bcf	148,2,c	;volatile
  9984  0045C0  948B               	bcf	139,2,c	;volatile
  9985  0045C2  0012               	return		;funcret
  9986  0045C4                     __end_of_driveOneWireLow:
  9987                           	callstack 0
  9988                           
  9989 ;; *************** function _driveOneWireHigh *****************
  9990 ;; Defined at:
  9991 ;;		line 58 in file "ds18b20.c"
  9992 ;; Parameters:    Size  Location     Type
  9993 ;;		None
  9994 ;; Auto vars:     Size  Location     Type
  9995 ;;		None
  9996 ;; Return value:  Size  Location     Type
  9997 ;;                  1    wreg      void 
  9998 ;; Registers used:
  9999 ;;		None
 10000 ;; Tracked objects:
 10001 ;;		On entry : 0/0
 10002 ;;		On exit  : 0/0
 10003 ;;		Unchanged: 0/0
 10004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10009 ;;Total ram usage:        0 bytes
 10010 ;; Hardware stack levels used: 1
 10011 ;; Hardware stack levels required when called: 4
 10012 ;; This function calls:
 10013 ;;		Nothing
 10014 ;; This function is called by:
 10015 ;;		_readOneWireBit
 10016 ;;		_writeOneWireBit
 10017 ;;		_resetOneWirePin
 10018 ;; This function uses a non-reentrant model
 10019 ;;
 10020                           
 10021                           	psect	text53
 10022  0045C4                     __ptext53:
 10023                           	callstack 0
 10024  0045C4                     _driveOneWireHigh:
 10025                           	callstack 23
 10026  0045C4  9494               	bcf	148,2,c	;volatile
 10027  0045C6  848B               	bsf	139,2,c	;volatile
 10028  0045C8  0012               	return		;funcret
 10029  0045CA                     __end_of_driveOneWireHigh:
 10030                           	callstack 0
 10031                           
 10032 ;; *************** function ___awdiv *****************
 10033 ;; Defined at:
 10034 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
 10035 ;; Parameters:    Size  Location     Type
 10036 ;;  dividend        2    4[COMRAM] int 
 10037 ;;  divisor         2    6[COMRAM] int 
 10038 ;; Auto vars:     Size  Location     Type
 10039 ;;  quotient        2   10[COMRAM] int 
 10040 ;;  sign            1    9[COMRAM] unsigned char 
 10041 ;;  counter         1    8[COMRAM] unsigned char 
 10042 ;; Return value:  Size  Location     Type
 10043 ;;                  2    4[COMRAM] int 
 10044 ;; Registers used:
 10045 ;;		wreg, status,2, status,0
 10046 ;; Tracked objects:
 10047 ;;		On entry : 0/0
 10048 ;;		On exit  : 0/0
 10049 ;;		Unchanged: 0/0
 10050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10051 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10052 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10054 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10055 ;;Total ram usage:        8 bytes
 10056 ;; Hardware stack levels used: 1
 10057 ;; Hardware stack levels required when called: 4
 10058 ;; This function calls:
 10059 ;;		Nothing
 10060 ;; This function is called by:
 10061 ;;		_searchOneWireDevicesROM
 10062 ;;		_efgtoa
 10063 ;; This function uses a non-reentrant model
 10064 ;;
 10065                           
 10066                           	psect	text54
 10067  003B14                     __ptext54:
 10068                           	callstack 0
 10069  003B14                     ___awdiv:
 10070                           	callstack 22
 10071  003B14  0E00               	movlw	0
 10072  003B16  6E0A               	movwf	___awdiv@sign^0,c
 10073  003B18  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
 10074  003B1A  EF93  F01D         	goto	u6950
 10075  003B1E  EF91  F01D         	goto	u6951
 10076  003B22                     u6951:
 10077  003B22  EF99  F01D         	goto	l7015
 10078  003B26                     u6950:
 10079  003B26  6C07               	negf	___awdiv@divisor^0,c
 10080  003B28  1E08               	comf	(___awdiv@divisor+1)^0,f,c
 10081  003B2A  B0D8               	btfsc	status,0,c
 10082  003B2C  2A08               	incf	(___awdiv@divisor+1)^0,f,c
 10083  003B2E  0E01               	movlw	1
 10084  003B30  6E0A               	movwf	___awdiv@sign^0,c
 10085  003B32                     l7015:
 10086  003B32  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
 10087  003B34  EFA0  F01D         	goto	u6960
 10088  003B38  EF9E  F01D         	goto	u6961
 10089  003B3C                     u6961:
 10090  003B3C  EFA6  F01D         	goto	l7021
 10091  003B40                     u6960:
 10092  003B40  6C05               	negf	___awdiv@dividend^0,c
 10093  003B42  1E06               	comf	(___awdiv@dividend+1)^0,f,c
 10094  003B44  B0D8               	btfsc	status,0,c
 10095  003B46  2A06               	incf	(___awdiv@dividend+1)^0,f,c
 10096  003B48  0E01               	movlw	1
 10097  003B4A  1A0A               	xorwf	___awdiv@sign^0,f,c
 10098  003B4C                     l7021:
 10099  003B4C  0E00               	movlw	0
 10100  003B4E  6E0C               	movwf	(___awdiv@quotient+1)^0,c
 10101  003B50  0E00               	movlw	0
 10102  003B52  6E0B               	movwf	___awdiv@quotient^0,c
 10103  003B54  5007               	movf	___awdiv@divisor^0,w,c
 10104  003B56  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
 10105  003B58  B4D8               	btfsc	status,2,c
 10106  003B5A  EFB1  F01D         	goto	u6971
 10107  003B5E  EFB3  F01D         	goto	u6970
 10108  003B62                     u6971:
 10109  003B62  EFDB  F01D         	goto	l7043
 10110  003B66                     u6970:
 10111  003B66  0E01               	movlw	1
 10112  003B68  6E09               	movwf	___awdiv@counter^0,c
 10113  003B6A  EFBB  F01D         	goto	l7029
 10114  003B6E                     l7027:
 10115  003B6E  90D8               	bcf	status,0,c
 10116  003B70  3607               	rlcf	___awdiv@divisor^0,f,c
 10117  003B72  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
 10118  003B74  2A09               	incf	___awdiv@counter^0,f,c
 10119  003B76                     l7029:
 10120  003B76  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
 10121  003B78  EFC0  F01D         	goto	u6981
 10122  003B7C  EFC2  F01D         	goto	u6980
 10123  003B80                     u6981:
 10124  003B80  EFB7  F01D         	goto	l7027
 10125  003B84                     u6980:
 10126  003B84                     l7031:
 10127  003B84  90D8               	bcf	status,0,c
 10128  003B86  360B               	rlcf	___awdiv@quotient^0,f,c
 10129  003B88  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
 10130  003B8A  5007               	movf	___awdiv@divisor^0,w,c
 10131  003B8C  5C05               	subwf	___awdiv@dividend^0,w,c
 10132  003B8E  5008               	movf	(___awdiv@divisor+1)^0,w,c
 10133  003B90  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
 10134  003B92  A0D8               	btfss	status,0,c
 10135  003B94  EFCE  F01D         	goto	u6991
 10136  003B98  EFD0  F01D         	goto	u6990
 10137  003B9C                     u6991:
 10138  003B9C  EFD5  F01D         	goto	l7039
 10139  003BA0                     u6990:
 10140  003BA0  5007               	movf	___awdiv@divisor^0,w,c
 10141  003BA2  5E05               	subwf	___awdiv@dividend^0,f,c
 10142  003BA4  5008               	movf	(___awdiv@divisor+1)^0,w,c
 10143  003BA6  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
 10144  003BA8  800B               	bsf	___awdiv@quotient^0,0,c
 10145  003BAA                     l7039:
 10146  003BAA  90D8               	bcf	status,0,c
 10147  003BAC  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
 10148  003BAE  3207               	rrcf	___awdiv@divisor^0,f,c
 10149  003BB0  2E09               	decfsz	___awdiv@counter^0,f,c
 10150  003BB2  EFC2  F01D         	goto	l7031
 10151  003BB6                     l7043:
 10152  003BB6  500A               	movf	___awdiv@sign^0,w,c
 10153  003BB8  B4D8               	btfsc	status,2,c
 10154  003BBA  EFE1  F01D         	goto	u7001
 10155  003BBE  EFE3  F01D         	goto	u7000
 10156  003BC2                     u7001:
 10157  003BC2  EFE7  F01D         	goto	l7047
 10158  003BC6                     u7000:
 10159  003BC6  6C0B               	negf	___awdiv@quotient^0,c
 10160  003BC8  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
 10161  003BCA  B0D8               	btfsc	status,0,c
 10162  003BCC  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
 10163  003BCE                     l7047:
 10164  003BCE  C00B  F005         	movff	___awdiv@quotient,?___awdiv
 10165  003BD2  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
 10166  003BD6  0012               	return		;funcret
 10167  003BD8                     __end_of___awdiv:
 10168                           	callstack 0
 10169                           
 10170 ;; *************** function _INTERRUPT_InterruptManager *****************
 10171 ;; Defined at:
 10172 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 10173 ;; Parameters:    Size  Location     Type
 10174 ;;		None
 10175 ;; Auto vars:     Size  Location     Type
 10176 ;;		None
 10177 ;; Return value:  Size  Location     Type
 10178 ;;                  1    wreg      void 
 10179 ;; Registers used:
 10180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10181 ;; Tracked objects:
 10182 ;;		On entry : 0/0
 10183 ;;		On exit  : 0/0
 10184 ;;		Unchanged: 0/0
 10185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10188 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10189 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10190 ;;Total ram usage:        4 bytes
 10191 ;; Hardware stack levels used: 1
 10192 ;; Hardware stack levels required when called: 3
 10193 ;; This function calls:
 10194 ;;		Absolute function
 10195 ;;		_EUSART_Receive_ISR
 10196 ;;		_EUSART_Transmit_ISR
 10197 ;; This function is called by:
 10198 ;;		Interrupt level 2
 10199 ;; This function uses a non-reentrant model
 10200 ;;
 10201                           
 10202                           	psect	intcode
 10203  000008                     __pintcode:
 10204                           	callstack 0
 10205  000008                     _INTERRUPT_InterruptManager:
 10206                           	callstack 18
 10207                           
 10208                           ;incstack = 0
 10209  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10210  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 10211  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 10212  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 10213  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 10214  00001A                     
 10215                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 10216  00001A  ACF2               	btfss	242,6,c	;volatile
 10217  00001C  EF12  F000         	goto	i2u596_41
 10218  000020  EF14  F000         	goto	i2u596_40
 10219  000024                     i2u596_41:
 10220  000024  EF4E  F000         	goto	i2l671
 10221  000028                     i2u596_40:
 10222  000028                     
 10223                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 10224  000028  A89D               	btfss	157,4,c	;volatile
 10225  00002A  EF19  F000         	goto	i2u597_41
 10226  00002E  EF1B  F000         	goto	i2u597_40
 10227  000032                     i2u597_41:
 10228  000032  EF31  F000         	goto	i2l666
 10229  000036                     i2u597_40:
 10230  000036  A89E               	btfss	158,4,c	;volatile
 10231  000038  EF20  F000         	goto	i2u598_41
 10232  00003C  EF22  F000         	goto	i2u598_40
 10233  000040                     i2u598_41:
 10234  000040  EF31  F000         	goto	i2l666
 10235  000044                     i2u598_40:
 10236  000044                     
 10237                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART_TxDefaultInterruptHandler();
 10238  000044  D802               	call	i2u599_48
 10239  000046  EF2F  F000         	goto	i2u599_49
 10240  00004A                     i2u599_48:
 10241  00004A  0005               	push	
 10242  00004C  6EFA               	movwf	pclath,c
 10243  00004E  0100               	movlb	0	; () banked
 10244  000050  51FC               	movf	_EUSART_TxDefaultInterruptHandler& (0+255),w,b
 10245  000052  6EFD               	movwf	tosl,c
 10246  000054  51FD               	movf	(_EUSART_TxDefaultInterruptHandler+1)& (0+255),w,b
 10247  000056  6EFE               	movwf	tosh,c
 10248  000058  6AFF               	clrf	tosu,c
 10249  00005A  50FA               	movf	pclath,w,c
 10250  00005C  0012               	return		;indir
 10251  00005E                     i2u599_49:
 10252                           
 10253                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 10254  00005E  EF4E  F000         	goto	i2l671
 10255  000062                     i2l666:
 10256  000062  AA9D               	btfss	157,5,c	;volatile
 10257  000064  EF36  F000         	goto	i2u600_41
 10258  000068  EF38  F000         	goto	i2u600_40
 10259  00006C                     i2u600_41:
 10260  00006C  EF4E  F000         	goto	i2l667
 10261  000070                     i2u600_40:
 10262  000070  AA9E               	btfss	158,5,c	;volatile
 10263  000072  EF3D  F000         	goto	i2u601_41
 10264  000076  EF3F  F000         	goto	i2u601_40
 10265  00007A                     i2u601_41:
 10266  00007A  EF4E  F000         	goto	i2l667
 10267  00007E                     i2u601_40:
 10268  00007E                     
 10269                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART_RxDefaultInterruptHandler();
 10270  00007E  D802               	call	i2u602_48
 10271  000080  EF4C  F000         	goto	i2u602_49
 10272  000084                     i2u602_48:
 10273  000084  0005               	push	
 10274  000086  6EFA               	movwf	pclath,c
 10275  000088  0101               	movlb	1	; () banked
 10276  00008A  5166               	movf	_EUSART_RxDefaultInterruptHandler& (0+255),w,b
 10277  00008C  6EFD               	movwf	tosl,c
 10278  00008E  5167               	movf	(_EUSART_RxDefaultInterruptHandler+1)& (0+255),w,b
 10279  000090  6EFE               	movwf	tosh,c
 10280  000092  6AFF               	clrf	tosu,c
 10281  000094  50FA               	movf	pclath,w,c
 10282  000096  0012               	return		;indir
 10283  000098                     i2u602_49:
 10284                           
 10285                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 10286  000098  EF4E  F000         	goto	i2l671
 10287  00009C                     i2l667:
 10288  00009C                     i2l671:
 10289  00009C  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 10290  0000A0  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 10291  0000A4  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 10292  0000A8  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 10293  0000AC  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10294  0000AE  0011               	retfie		f
 10295  0000B0                     __end_of_INTERRUPT_InterruptManager:
 10296                           	callstack 0
 10297                           
 10298 ;; *************** function _EUSART_Transmit_ISR *****************
 10299 ;; Defined at:
 10300 ;;		line 206 in file "mcc_generated_files/eusart.c"
 10301 ;; Parameters:    Size  Location     Type
 10302 ;;		None
 10303 ;; Auto vars:     Size  Location     Type
 10304 ;;		None
 10305 ;; Return value:  Size  Location     Type
 10306 ;;                  1    wreg      void 
 10307 ;; Registers used:
 10308 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10309 ;; Tracked objects:
 10310 ;;		On entry : 0/0
 10311 ;;		On exit  : 0/0
 10312 ;;		Unchanged: 0/0
 10313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10318 ;;Total ram usage:        0 bytes
 10319 ;; Hardware stack levels used: 1
 10320 ;; This function calls:
 10321 ;;		Nothing
 10322 ;; This function is called by:
 10323 ;;		_EUSART_Initialize
 10324 ;;		_INTERRUPT_InterruptManager
 10325 ;; This function uses a non-reentrant model
 10326 ;;
 10327                           
 10328                           	psect	text56
 10329  0042A0                     __ptext56:
 10330                           	callstack 0
 10331  0042A0                     _EUSART_Transmit_ISR:
 10332                           	callstack 20
 10333  0042A0                     
 10334                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 10335  0042A0  0E08               	movlw	8
 10336  0042A2  0100               	movlb	0	; () banked
 10337  0042A4  61FE               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
 10338  0042A6  EF57  F021         	goto	i2u555_41
 10339  0042AA  EF59  F021         	goto	i2u555_40
 10340  0042AE                     i2u555_41:
 10341  0042AE  EF6F  F021         	goto	i2l607
 10342  0042B2                     i2u555_40:
 10343  0042B2                     
 10344                           ; BSR set to: 0
 10345                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
 10346  0042B2  0E94               	movlw	low _eusartTxBuffer
 10347  0042B4  2459               	addwf	_eusartTxTail^0,w,c	;volatile
 10348  0042B6  6ED9               	movwf	fsr2l,c
 10349  0042B8  6ADA               	clrf	fsr2h,c
 10350  0042BA  0E00               	movlw	high _eusartTxBuffer
 10351  0042BC  22DA               	addwfc	fsr2h,f,c
 10352  0042BE  50DF               	movf	indf2,w,c
 10353  0042C0  6EAD               	movwf	173,c	;volatile
 10354  0042C2                     
 10355                           ; BSR set to: 0
 10356  0042C2  2A59               	incf	_eusartTxTail^0,f,c	;volatile
 10357  0042C4                     
 10358                           ; BSR set to: 0
 10359                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 10360  0042C4  0E07               	movlw	7
 10361  0042C6  6459               	cpfsgt	_eusartTxTail^0,c	;volatile
 10362  0042C8  EF68  F021         	goto	i2u556_41
 10363  0042CC  EF6A  F021         	goto	i2u556_40
 10364  0042D0                     i2u556_41:
 10365  0042D0  EF6C  F021         	goto	i2l5875
 10366  0042D4                     i2u556_40:
 10367  0042D4                     
 10368                           ; BSR set to: 0
 10369                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 10370  0042D4  0E00               	movlw	0
 10371  0042D6  6E59               	movwf	_eusartTxTail^0,c	;volatile
 10372  0042D8                     i2l5875:
 10373                           
 10374                           ; BSR set to: 0
 10375                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 10376  0042D8  2BFE               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 10377                           
 10378                           ;mcc_generated_files/eusart.c: 218:     }
 10379  0042DA  EF70  F021         	goto	i2l610
 10380  0042DE                     i2l607:
 10381                           
 10382                           ; BSR set to: 0
 10383                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TX1IE = 0;
 10384  0042DE  989D               	bcf	157,4,c	;volatile
 10385  0042E0                     i2l610:
 10386                           
 10387                           ; BSR set to: 0
 10388  0042E0  0012               	return		;funcret
 10389  0042E2                     __end_of_EUSART_Transmit_ISR:
 10390                           	callstack 0
 10391                           
 10392 ;; *************** function _EUSART_Receive_ISR *****************
 10393 ;; Defined at:
 10394 ;;		line 225 in file "mcc_generated_files/eusart.c"
 10395 ;; Parameters:    Size  Location     Type
 10396 ;;		None
 10397 ;; Auto vars:     Size  Location     Type
 10398 ;;		None
 10399 ;; Return value:  Size  Location     Type
 10400 ;;                  1    wreg      void 
 10401 ;; Registers used:
 10402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10403 ;; Tracked objects:
 10404 ;;		On entry : 0/0
 10405 ;;		On exit  : 0/0
 10406 ;;		Unchanged: 0/0
 10407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10412 ;;Total ram usage:        0 bytes
 10413 ;; Hardware stack levels used: 1
 10414 ;; Hardware stack levels required when called: 2
 10415 ;; This function calls:
 10416 ;;		Absolute function
 10417 ;;		_EUSART_DefaultErrorHandler
 10418 ;;		_EUSART_DefaultFramingErrorHandler
 10419 ;;		_EUSART_DefaultOverrunErrorHandler
 10420 ;;		_EUSART_RxDataHandler
 10421 ;; This function is called by:
 10422 ;;		_EUSART_Initialize
 10423 ;;		_INTERRUPT_InterruptManager
 10424 ;; This function uses a non-reentrant model
 10425 ;;
 10426                           
 10427                           	psect	text57
 10428  003BD8                     __ptext57:
 10429                           	callstack 0
 10430  003BD8                     _EUSART_Receive_ISR:
 10431                           	callstack 18
 10432  003BD8                     
 10433                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 10434  003BD8  0E84               	movlw	low _eusartRxStatusBuffer
 10435  003BDA  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 10436  003BDC  6ED9               	movwf	fsr2l,c
 10437  003BDE  6ADA               	clrf	fsr2h,c
 10438  003BE0  0E00               	movlw	high _eusartRxStatusBuffer
 10439  003BE2  22DA               	addwfc	fsr2h,f,c
 10440  003BE4  0E00               	movlw	0
 10441  003BE6  6EDF               	movwf	indf2,c
 10442  003BE8                     
 10443                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
 10444  003BE8  A4AB               	btfss	171,2,c	;volatile
 10445  003BEA  EFF9  F01D         	goto	i2u557_41
 10446  003BEE  EFFB  F01D         	goto	i2u557_40
 10447  003BF2                     i2u557_41:
 10448  003BF2  EF10  F01E         	goto	i2l5885
 10449  003BF6                     i2u557_40:
 10450  003BF6                     
 10451                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 10452  003BF6  0E84               	movlw	low _eusartRxStatusBuffer
 10453  003BF8  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 10454  003BFA  6ED9               	movwf	fsr2l,c
 10455  003BFC  6ADA               	clrf	fsr2h,c
 10456  003BFE  0E00               	movlw	high _eusartRxStatusBuffer
 10457  003C00  22DA               	addwfc	fsr2h,f,c
 10458  003C02  0100               	movlb	0	; () banked
 10459  003C04  82DF               	bsf	indf2,1,c
 10460  003C06                     
 10461                           ; BSR set to: 0
 10462                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 10463  003C06  D802               	call	i2u558_48
 10464  003C08  EF10  F01E         	goto	i2u558_49
 10465  003C0C                     i2u558_48:
 10466  003C0C  0005               	push	
 10467  003C0E  6EFA               	movwf	pclath,c
 10468  003C10  0101               	movlb	1	; () banked
 10469  003C12  5164               	movf	_EUSART_FramingErrorHandler& (0+255),w,b
 10470  003C14  6EFD               	movwf	tosl,c
 10471  003C16  5165               	movf	(_EUSART_FramingErrorHandler+1)& (0+255),w,b
 10472  003C18  6EFE               	movwf	tosh,c
 10473  003C1A  6AFF               	clrf	tosu,c
 10474  003C1C  50FA               	movf	pclath,w,c
 10475  003C1E  0012               	return		;indir
 10476  003C20                     i2u558_49:
 10477  003C20                     i2l5885:
 10478                           
 10479                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
 10480  003C20  A2AB               	btfss	171,1,c	;volatile
 10481  003C22  EF15  F01E         	goto	i2u559_41
 10482  003C26  EF17  F01E         	goto	i2u559_40
 10483  003C2A                     i2u559_41:
 10484  003C2A  EF2C  F01E         	goto	i2l5891
 10485  003C2E                     i2u559_40:
 10486  003C2E                     
 10487                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 10488  003C2E  0E84               	movlw	low _eusartRxStatusBuffer
 10489  003C30  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 10490  003C32  6ED9               	movwf	fsr2l,c
 10491  003C34  6ADA               	clrf	fsr2h,c
 10492  003C36  0E00               	movlw	high _eusartRxStatusBuffer
 10493  003C38  22DA               	addwfc	fsr2h,f,c
 10494  003C3A  0100               	movlb	0	; () banked
 10495  003C3C  84DF               	bsf	indf2,2,c
 10496  003C3E                     
 10497                           ; BSR set to: 0
 10498                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 10499  003C3E  D802               	call	i2u560_48
 10500  003C40  EF2C  F01E         	goto	i2u560_49
 10501  003C44                     i2u560_48:
 10502  003C44  0005               	push	
 10503  003C46  6EFA               	movwf	pclath,c
 10504  003C48  0101               	movlb	1	; () banked
 10505  003C4A  5162               	movf	_EUSART_OverrunErrorHandler& (0+255),w,b
 10506  003C4C  6EFD               	movwf	tosl,c
 10507  003C4E  5163               	movf	(_EUSART_OverrunErrorHandler+1)& (0+255),w,b
 10508  003C50  6EFE               	movwf	tosh,c
 10509  003C52  6AFF               	clrf	tosu,c
 10510  003C54  50FA               	movf	pclath,w,c
 10511  003C56  0012               	return		;indir
 10512  003C58                     i2u560_49:
 10513  003C58                     i2l5891:
 10514                           
 10515                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 10516  003C58  0E84               	movlw	low _eusartRxStatusBuffer
 10517  003C5A  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 10518  003C5C  6ED9               	movwf	fsr2l,c
 10519  003C5E  6ADA               	clrf	fsr2h,c
 10520  003C60  0E00               	movlw	high _eusartRxStatusBuffer
 10521  003C62  22DA               	addwfc	fsr2h,f,c
 10522  003C64  50DF               	movf	indf2,w,c
 10523  003C66  B4D8               	btfsc	status,2,c
 10524  003C68  EF38  F01E         	goto	i2u561_41
 10525  003C6C  EF3A  F01E         	goto	i2u561_40
 10526  003C70                     i2u561_41:
 10527  003C70  EF49  F01E         	goto	i2l5895
 10528  003C74                     i2u561_40:
 10529  003C74                     
 10530                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 10531  003C74  D802               	call	i2u562_48
 10532  003C76  EF47  F01E         	goto	i2u562_49
 10533  003C7A                     i2u562_48:
 10534  003C7A  0005               	push	
 10535  003C7C  6EFA               	movwf	pclath,c
 10536  003C7E  0101               	movlb	1	; () banked
 10537  003C80  5160               	movf	_EUSART_ErrorHandler& (0+255),w,b
 10538  003C82  6EFD               	movwf	tosl,c
 10539  003C84  5161               	movf	(_EUSART_ErrorHandler+1)& (0+255),w,b
 10540  003C86  6EFE               	movwf	tosh,c
 10541  003C88  6AFF               	clrf	tosu,c
 10542  003C8A  50FA               	movf	pclath,w,c
 10543  003C8C  0012               	return		;indir
 10544  003C8E                     i2u562_49:
 10545                           
 10546                           ;mcc_generated_files/eusart.c: 242:     } else {
 10547  003C8E  EF4B  F01E         	goto	i2l617
 10548  003C92                     i2l5895:
 10549                           
 10550                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 10551  003C92  EC5F  F022         	call	_EUSART_RxDataHandler	;wreg free
 10552  003C96                     i2l617:
 10553  003C96  0012               	return		;funcret
 10554  003C98                     __end_of_EUSART_Receive_ISR:
 10555                           	callstack 0
 10556                           
 10557 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 10558 ;; Defined at:
 10559 ;;		line 261 in file "mcc_generated_files/eusart.c"
 10560 ;; Parameters:    Size  Location     Type
 10561 ;;		None
 10562 ;; Auto vars:     Size  Location     Type
 10563 ;;		None
 10564 ;; Return value:  Size  Location     Type
 10565 ;;                  1    wreg      void 
 10566 ;; Registers used:
 10567 ;;		None
 10568 ;; Tracked objects:
 10569 ;;		On entry : 0/0
 10570 ;;		On exit  : 0/0
 10571 ;;		Unchanged: 0/0
 10572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10577 ;;Total ram usage:        0 bytes
 10578 ;; Hardware stack levels used: 1
 10579 ;; This function calls:
 10580 ;;		Nothing
 10581 ;; This function is called by:
 10582 ;;		_EUSART_Initialize
 10583 ;;		_EUSART_Receive_ISR
 10584 ;; This function uses a non-reentrant model
 10585 ;;
 10586                           
 10587                           	psect	text58
 10588  0045CA                     __ptext58:
 10589                           	callstack 0
 10590  0045CA                     _EUSART_DefaultOverrunErrorHandler:
 10591                           	callstack 19
 10592  0045CA                     
 10593                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
 10594  0045CA  98AB               	bcf	171,4,c	;volatile
 10595                           
 10596                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
 10597  0045CC  88AB               	bsf	171,4,c	;volatile
 10598  0045CE  0012               	return		;funcret
 10599  0045D0                     __end_of_EUSART_DefaultOverrunErrorHandler:
 10600                           	callstack 0
 10601                           
 10602 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 10603 ;; Defined at:
 10604 ;;		line 259 in file "mcc_generated_files/eusart.c"
 10605 ;; Parameters:    Size  Location     Type
 10606 ;;		None
 10607 ;; Auto vars:     Size  Location     Type
 10608 ;;		None
 10609 ;; Return value:  Size  Location     Type
 10610 ;;                  1    wreg      void 
 10611 ;; Registers used:
 10612 ;;		None
 10613 ;; Tracked objects:
 10614 ;;		On entry : 0/0
 10615 ;;		On exit  : 0/0
 10616 ;;		Unchanged: 0/0
 10617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10622 ;;Total ram usage:        0 bytes
 10623 ;; Hardware stack levels used: 1
 10624 ;; This function calls:
 10625 ;;		Nothing
 10626 ;; This function is called by:
 10627 ;;		_EUSART_Initialize
 10628 ;;		_EUSART_Receive_ISR
 10629 ;; This function uses a non-reentrant model
 10630 ;;
 10631                           
 10632                           	psect	text59
 10633  0045DA                     __ptext59:
 10634                           	callstack 0
 10635  0045DA                     _EUSART_DefaultFramingErrorHandler:
 10636                           	callstack 19
 10637  0045DA  0012               	return		;funcret
 10638  0045DC                     __end_of_EUSART_DefaultFramingErrorHandler:
 10639                           	callstack 0
 10640                           
 10641 ;; *************** function _EUSART_DefaultErrorHandler *****************
 10642 ;; Defined at:
 10643 ;;		line 269 in file "mcc_generated_files/eusart.c"
 10644 ;; Parameters:    Size  Location     Type
 10645 ;;		None
 10646 ;; Auto vars:     Size  Location     Type
 10647 ;;		None
 10648 ;; Return value:  Size  Location     Type
 10649 ;;                  1    wreg      void 
 10650 ;; Registers used:
 10651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10652 ;; Tracked objects:
 10653 ;;		On entry : 0/0
 10654 ;;		On exit  : 0/0
 10655 ;;		Unchanged: 0/0
 10656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10661 ;;Total ram usage:        0 bytes
 10662 ;; Hardware stack levels used: 1
 10663 ;; Hardware stack levels required when called: 1
 10664 ;; This function calls:
 10665 ;;		_EUSART_RxDataHandler
 10666 ;; This function is called by:
 10667 ;;		_EUSART_Initialize
 10668 ;;		_EUSART_Receive_ISR
 10669 ;; This function uses a non-reentrant model
 10670 ;;
 10671                           
 10672                           	psect	text60
 10673  0045D0                     __ptext60:
 10674                           	callstack 0
 10675  0045D0                     _EUSART_DefaultErrorHandler:
 10676                           	callstack 18
 10677  0045D0                     
 10678                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 10679  0045D0  EC5F  F022         	call	_EUSART_RxDataHandler	;wreg free
 10680  0045D4  0012               	return		;funcret
 10681  0045D6                     __end_of_EUSART_DefaultErrorHandler:
 10682                           	callstack 0
 10683                           
 10684 ;; *************** function _EUSART_RxDataHandler *****************
 10685 ;; Defined at:
 10686 ;;		line 249 in file "mcc_generated_files/eusart.c"
 10687 ;; Parameters:    Size  Location     Type
 10688 ;;		None
 10689 ;; Auto vars:     Size  Location     Type
 10690 ;;		None
 10691 ;; Return value:  Size  Location     Type
 10692 ;;                  1    wreg      void 
 10693 ;; Registers used:
 10694 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10695 ;; Tracked objects:
 10696 ;;		On entry : 0/0
 10697 ;;		On exit  : 0/0
 10698 ;;		Unchanged: 0/0
 10699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10704 ;;Total ram usage:        0 bytes
 10705 ;; Hardware stack levels used: 1
 10706 ;; This function calls:
 10707 ;;		Nothing
 10708 ;; This function is called by:
 10709 ;;		_EUSART_Receive_ISR
 10710 ;;		_EUSART_DefaultErrorHandler
 10711 ;; This function uses a non-reentrant model
 10712 ;;
 10713                           
 10714                           	psect	text61
 10715  0044BE                     __ptext61:
 10716                           	callstack 0
 10717  0044BE                     _EUSART_RxDataHandler:
 10718                           	callstack 19
 10719  0044BE                     
 10720                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
 10721  0044BE  0E8C               	movlw	low _eusartRxBuffer
 10722  0044C0  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 10723  0044C2  6ED9               	movwf	fsr2l,c
 10724  0044C4  6ADA               	clrf	fsr2h,c
 10725  0044C6  0E00               	movlw	high _eusartRxBuffer
 10726  0044C8  22DA               	addwfc	fsr2h,f,c
 10727  0044CA  CFAE FFDF          	movff	4014,indf2	;volatile
 10728  0044CE  2A58               	incf	_eusartRxHead^0,f,c	;volatile
 10729  0044D0                     
 10730                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 10731  0044D0  0E07               	movlw	7
 10732  0044D2  6458               	cpfsgt	_eusartRxHead^0,c	;volatile
 10733  0044D4  EF6E  F022         	goto	i2u509_41
 10734  0044D8  EF70  F022         	goto	i2u509_40
 10735  0044DC                     i2u509_41:
 10736  0044DC  EF72  F022         	goto	i2l5339
 10737  0044E0                     i2u509_40:
 10738  0044E0                     
 10739                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 10740  0044E0  0E00               	movlw	0
 10741  0044E2  6E58               	movwf	_eusartRxHead^0,c	;volatile
 10742  0044E4                     i2l5339:
 10743                           
 10744                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 10745  0044E4  2A56               	incf	_eusartRxCount^0,f,c	;volatile
 10746  0044E6  0012               	return		;funcret
 10747  0044E8                     __end_of_EUSART_RxDataHandler:
 10748                           	callstack 0
 10749                           
 10750                           	psect	text62
 10751  000000                     __ptext62:
 10752                           	callstack 0
 10753  000000                     
 10754                           	psect	rparam
 10755  0000                     
 10756                           	psect	temp
 10757  00005B                     btemp:
 10758                           	callstack 0
 10759  00005B                     	ds	1
 10760  0000                     int$flags	set	btemp
 10761  0000                     wtemp8	set	btemp+1
 10762  0000                     ttemp5	set	btemp+1
 10763  0000                     ttemp6	set	btemp+4
 10764  0000                     ttemp7	set	btemp+8
 10765                           
 10766                           	psect	idloc
 10767                           
 10768                           ;Config register IDLOC0 @ 0x200000
 10769                           ;	unspecified, using default values
 10770  200000                     	org	2097152
 10771  200000  FF                 	db	255
 10772                           
 10773                           ;Config register IDLOC1 @ 0x200001
 10774                           ;	unspecified, using default values
 10775  200001                     	org	2097153
 10776  200001  FF                 	db	255
 10777                           
 10778                           ;Config register IDLOC2 @ 0x200002
 10779                           ;	unspecified, using default values
 10780  200002                     	org	2097154
 10781  200002  FF                 	db	255
 10782                           
 10783                           ;Config register IDLOC3 @ 0x200003
 10784                           ;	unspecified, using default values
 10785  200003                     	org	2097155
 10786  200003  FF                 	db	255
 10787                           
 10788                           ;Config register IDLOC4 @ 0x200004
 10789                           ;	unspecified, using default values
 10790  200004                     	org	2097156
 10791  200004  FF                 	db	255
 10792                           
 10793                           ;Config register IDLOC5 @ 0x200005
 10794                           ;	unspecified, using default values
 10795  200005                     	org	2097157
 10796  200005  FF                 	db	255
 10797                           
 10798                           ;Config register IDLOC6 @ 0x200006
 10799                           ;	unspecified, using default values
 10800  200006                     	org	2097158
 10801  200006  FF                 	db	255
 10802                           
 10803                           ;Config register IDLOC7 @ 0x200007
 10804                           ;	unspecified, using default values
 10805  200007                     	org	2097159
 10806  200007  FF                 	db	255
 10807                           
 10808                           	psect	config
 10809                           
 10810                           ; Padding undefined space
 10811  300000                     	org	3145728
 10812  300000  FF                 	db	255
 10813                           
 10814                           ;Config register CONFIG1H @ 0x300001
 10815                           ;	Oscillator Selection bits
 10816                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
 10817                           ;	Fail-Safe Clock Monitor Enable bit
 10818                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10819                           ;	Internal/External Oscillator Switchover bit
 10820                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10821  300001                     	org	3145729
 10822  300001  08                 	db	8
 10823                           
 10824                           ;Config register CONFIG2L @ 0x300002
 10825                           ;	Power-up Timer Enable bit
 10826                           ;	PWRT = OFF, PWRT disabled
 10827                           ;	Brown-out Reset Enable bits
 10828                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 10829                           ;	Brown Out Reset Voltage bits
 10830                           ;	BORV = 18, VBOR set to 1.8 V nominal
 10831  300002                     	org	3145730
 10832  300002  1F                 	db	31
 10833                           
 10834                           ;Config register CONFIG2H @ 0x300003
 10835                           ;	Watchdog Timer Enable bit
 10836                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 10837                           ;	Watchdog Timer Postscale Select bits
 10838                           ;	WDTPS = 32768, 1:32768
 10839  300003                     	org	3145731
 10840  300003  1E                 	db	30
 10841                           
 10842                           ; Padding undefined space
 10843  300004                     	org	3145732
 10844  300004  FF                 	db	255
 10845                           
 10846                           ;Config register CONFIG3H @ 0x300005
 10847                           ;	CCP2 MUX bit
 10848                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 10849                           ;	PORTB A/D Enable bit
 10850                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 10851                           ;	Low-Power Timer1 Oscillator Enable bit
 10852                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10853                           ;	HFINTOSC Fast Start-up
 10854                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 10855                           ;	MCLR Pin Enable bit
 10856                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
 10857  300005                     	org	3145733
 10858  300005  0B                 	db	11
 10859                           
 10860                           ;Config register CONFIG4L @ 0x300006
 10861                           ;	Stack Full/Underflow Reset Enable bit
 10862                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10863                           ;	Single-Supply ICSP Enable bit
 10864                           ;	LVP = OFF, Single-Supply ICSP disabled
 10865                           ;	Extended Instruction Set Enable bit
 10866                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10867                           ;	Background Debugger Enable bit
 10868                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 10869  300006                     	org	3145734
 10870  300006  81                 	db	129
 10871                           
 10872                           ; Padding undefined space
 10873  300007                     	org	3145735
 10874  300007  FF                 	db	255
 10875                           
 10876                           ;Config register CONFIG5L @ 0x300008
 10877                           ;	Code Protection Block 0
 10878                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 10879                           ;	Code Protection Block 1
 10880                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 10881                           ;	Code Protection Block 2
 10882                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 10883                           ;	Code Protection Block 3
 10884                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 10885  300008                     	org	3145736
 10886  300008  0F                 	db	15
 10887                           
 10888                           ;Config register CONFIG5H @ 0x300009
 10889                           ;	Boot Block Code Protection bit
 10890                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 10891                           ;	Data EEPROM Code Protection bit
 10892                           ;	CPD = OFF, Data EEPROM not code-protected
 10893  300009                     	org	3145737
 10894  300009  C0                 	db	192
 10895                           
 10896                           ;Config register CONFIG6L @ 0x30000A
 10897                           ;	Write Protection Block 0
 10898                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 10899                           ;	Write Protection Block 1
 10900                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 10901                           ;	Write Protection Block 2
 10902                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 10903                           ;	Write Protection Block 3
 10904                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 10905  30000A                     	org	3145738
 10906  30000A  0F                 	db	15
 10907                           
 10908                           ;Config register CONFIG6H @ 0x30000B
 10909                           ;	Configuration Register Write Protection bit
 10910                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 10911                           ;	Boot Block Write Protection bit
 10912                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 10913                           ;	Data EEPROM Write Protection bit
 10914                           ;	WRTD = OFF, Data EEPROM not write-protected
 10915  30000B                     	org	3145739
 10916  30000B  E0                 	db	224
 10917                           
 10918                           ;Config register CONFIG7L @ 0x30000C
 10919                           ;	Table Read Protection Block 0
 10920                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 10921                           ;	Table Read Protection Block 1
 10922                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 10923                           ;	Table Read Protection Block 2
 10924                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 10925                           ;	Table Read Protection Block 3
 10926                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 10927  30000C                     	org	3145740
 10928  30000C  0F                 	db	15
 10929                           
 10930                           ;Config register CONFIG7H @ 0x30000D
 10931                           ;	Boot Block Table Read Protection bit
 10932                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 10933  30000D                     	org	3145741
 10934  30000D  40                 	db	64
 10935                           tosu	equ	0xFFF
 10936                           tosh	equ	0xFFE
 10937                           tosl	equ	0xFFD
 10938                           stkptr	equ	0xFFC
 10939                           pclatu	equ	0xFFB
 10940                           pclath	equ	0xFFA
 10941                           pcl	equ	0xFF9
 10942                           tblptru	equ	0xFF8
 10943                           tblptrh	equ	0xFF7
 10944                           tblptrl	equ	0xFF6
 10945                           tablat	equ	0xFF5
 10946                           prodh	equ	0xFF4
 10947                           prodl	equ	0xFF3
 10948                           indf0	equ	0xFEF
 10949                           postinc0	equ	0xFEE
 10950                           postdec0	equ	0xFED
 10951                           preinc0	equ	0xFEC
 10952                           plusw0	equ	0xFEB
 10953                           fsr0h	equ	0xFEA
 10954                           fsr0l	equ	0xFE9
 10955                           wreg	equ	0xFE8
 10956                           indf1	equ	0xFE7
 10957                           postinc1	equ	0xFE6
 10958                           postdec1	equ	0xFE5
 10959                           preinc1	equ	0xFE4
 10960                           plusw1	equ	0xFE3
 10961                           fsr1h	equ	0xFE2
 10962                           fsr1l	equ	0xFE1
 10963                           bsr	equ	0xFE0
 10964                           indf2	equ	0xFDF
 10965                           postinc2	equ	0xFDE
 10966                           postdec2	equ	0xFDD
 10967                           preinc2	equ	0xFDC
 10968                           plusw2	equ	0xFDB
 10969                           fsr2h	equ	0xFDA
 10970                           fsr2l	equ	0xFD9
 10971                           status	equ	0xFD8

Data Sizes:
    Strings     41
    Constant    32
    Data        0
    BSS         183
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      90
    BANK0           160     74     159
    BANK1           256      4     108
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2777$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2783$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2789$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX_EMPTY$2795$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2213$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S2213$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_1(CODE[22]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_1(CODE[22]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_1(CODE[22]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_1(CODE[22]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    addressOneWireDevice@CurrentAdressedOneWireDevice	PTR unsigned char  size(2) Largest target is 16
		 -> DeviceAddressMap(BANK1[16]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    S248$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue.data(COMRAM[3]), I2C_Read2ByteRegister@returnValue.data(COMRAM[3]), I2C_Write1ByteRegister@data.data(COMRAM[3]), I2C_Write2ByteRegister@data.data(COMRAM[3]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), bufferBlock.data(COMRAM[3]), I2C_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E3112[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    S96$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _DS18B20_temp_GetValue->___fldiv
    _readOneWireByte->_readOneWireBit
    _addressOneWireDevice->_writeOneWireByte
    ___fldiv->___xxtofl
    _DS18B20_init->_searchOneWireDevicesROM
    _searchOneWireDevicesROM->___awdiv
    _writeOneWireByte->_writeOneWireBit
    _resetOneWirePin->_sampleOneWirePin
    _readOneWireBit->_sampleOneWirePin

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   45648
                                              2 BANK1      2     2      0
                       _DS18B20_init
              _DS18B20_temp_GetValue
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   39181
                                             68 BANK0      6     0      6
                                              0 BANK1      2     2      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   38992
                                             60 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   38432
                                             75 COMRAM    10     4      6
                                             50 BANK0     10    10      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   29752
                                             63 COMRAM    12     5      7
                                              0 BANK0     50    50      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2    1105
                                             10 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3957
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             43 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             29 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3593
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     986
                                             29 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    3274
                                             11 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2282
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DS18B20_temp_GetValue                               15    11      4    4077
                                             43 COMRAM    15    11      4
                            ___fldiv
                           ___xxtofl
               _addressOneWireDevice
                    _readOneWireByte
                    _resetOneWirePin
                   _writeOneWireByte
 ---------------------------------------------------------------------------------
 (2) _readOneWireByte                                      3     3      0     119
                                              6 COMRAM     3     3      0
                     _readOneWireBit
 ---------------------------------------------------------------------------------
 (2) _addressOneWireDevice                                 4     2      2     380
                                              8 COMRAM     4     2      2
                    _resetOneWirePin
                   _writeOneWireByte
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2903
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _DS18B20_init                                         0     0      0    1900
            _searchOneWireDevicesROM
 ---------------------------------------------------------------------------------
 (2) _searchOneWireDevicesROM                             25    25      0    1900
                                             12 COMRAM    25    25      0
                            ___awdiv
                     _readOneWireBit
                    _resetOneWirePin
                    _writeOneWireBit
                   _writeOneWireByte
 ---------------------------------------------------------------------------------
 (2) _writeOneWireByte                                     3     3      0      91
                                              5 COMRAM     3     3      0
                    _writeOneWireBit
 ---------------------------------------------------------------------------------
 (3) _writeOneWireBit                                      1     1      0      22
                                              4 COMRAM     1     1      0
                   _driveOneWireHigh
                    _driveOneWireLow
 ---------------------------------------------------------------------------------
 (2) _resetOneWirePin                                      1     1      0      47
                                              5 COMRAM     1     1      0
                   _driveOneWireHigh
                    _driveOneWireLow
                   _sampleOneWirePin
 ---------------------------------------------------------------------------------
 (3) _readOneWireBit                                       1     1      0      48
                                              5 COMRAM     1     1      0
                   _driveOneWireHigh
                    _driveOneWireLow
                   _sampleOneWirePin
 ---------------------------------------------------------------------------------
 (3) _sampleOneWirePin                                     1     1      0      24
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _driveOneWireLow                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _driveOneWireHigh                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     805
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS18B20_init
     _searchOneWireDevicesROM
       ___awdiv
       _readOneWireBit
         _driveOneWireHigh
         _driveOneWireLow
         _sampleOneWirePin
       _resetOneWirePin
         _driveOneWireHigh
         _driveOneWireLow
         _sampleOneWirePin
       _writeOneWireBit
         _driveOneWireHigh
         _driveOneWireLow
       _writeOneWireByte
         _writeOneWireBit
   _DS18B20_temp_GetValue
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _addressOneWireDevice
       _resetOneWirePin
       _writeOneWireByte
     _readOneWireByte
       _readOneWireBit
     _resetOneWirePin
     _writeOneWireByte
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      52        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      6C       7       42.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4A      9F       5       99.4%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      5A       1       95.7%
BITBIGSFRhhl        1D      0       0      38        0.0%
BITBIGSFRllllll     1C      0       0      51        0.0%
BITBIGSFRhhh         D      0       0      37        0.0%
BITBIGSFRlhh         C      0       0      41        0.0%
BITBIGSFRlhll        9      0       0      43        0.0%
BITBIGSFRlhlhh       7      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      48        0.0%
BITBIGSFRhll         6      0       0      40        0.0%
BITBIGSFRllllhh      4      0       0      46        0.0%
BITBIGSFRllllhl      4      0       0      47        0.0%
BITBIGSFRhlh         2      0       0      39        0.0%
BITBIGSFRllllll      2      0       0      49        0.0%
BITBIGSFRllh         2      0       0      44        0.0%
BITBIGSFRllllll      1      0       0      50        0.0%
BITBIGSFRlllh        1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     165      28        0.0%
DATA                 0      0     165       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Fri May 06 08:28:08 2022

                   ?_EUSART_SetRxInterruptHandler 0005                                      ___fldiv@aexp 002B  
                                    ___fldiv@bexp 002A                                      ___fldiv@sign 0023  
                                     _SSPSTATbits 000FC7                                      ___awdiv@sign 000A  
                             ___wmul@multiplicand 0007                                               l209 455E  
                                             l604 4576                                               l456 454A  
                                             l633 45A8                                               l722 3A4C  
                                             l642 458A                                               l570 3F7A  
                                             l459 4580                                               l732 45C4  
                                             l636 459E                                               l660 45D8  
                                             l492 4466                                               l725 45BE  
                                             l741 456C                                               l645 4594  
                                             l734 45C6                                               l718 45BC  
                                             l727 45C0                                               l639 45B2  
                                             l736 45C8                                               l744 450E  
                                             l752 4320                                               l729 45C2  
                                             l762 4164                                               l594 4052  
                                             l763 4186                                               l595 4068  
                                             l749 41CE                                               l757 4400  
                                             l598 4094                                               l769 40EA  
                                             l778 3070                                               l794 4534  
                                             l789 2FDC                            ??_EUSART_RxDataHandler 0001  
                                             _pad 3A4E                    ?_EUSART_SetFramingErrorHandler 0005  
                                    ___awmod@sign 000A                                               tosl 000FFD  
                                             wreg 000FE8                                      ___flmul@aexp 0012  
                                    ___flmul@bexp 0017                                      ___flmul@sign 0011  
                                    ___flmul@temp 001C                                      ___flmul@prod 0018  
                                    _I2C_DO_RESET 000000                                      ___fltol@exp1 000E  
                                            l1025 3BD6                                              l1053 3DF0  
                                            l1038 3D46                                              l1064 37A0  
                                            l1322 23C4                                              l1059 375A  
                                            l1331 2694                                              l1323 23B2  
                                            l1091 369C                                              l1412 2ABE  
                                            l1068 4390                                              l1324 2378  
                                            l1415 2950                                              l1408 275A  
                                            l1425 2A80                                              l1417 29C8  
                                            l1513 3A94                                              l1418 29B6  
                                            l1339 24DE                                              l1452 3436  
                                            l1348 25AE                                              l1364 425A  
                                            l1516 3AD6                                              l1381 2C7C  
                                            l1349 259C                                              l1390 2D64  
                                            l1518 3B12                                              l1710 4358  
                                            l1550 1436                                              l1534 1CA6  
                                            l1463 33CE                                              l1376 2E58  
                                            l1456 3372                                              l1704 413C  
                                            l1632 21D4                                              l1472 44BC  
                                            l1449 32DA                                              l1378 2CB8  
                                            l1387 2CFE                                              l1619 1D9E  
                                            l1643 3FD6                                              l1644 3FDE  
                                            l1389 2D76                                              l1725 3E86  
                                            l1733 429E                                              l1637 20F2  
                                            l1654 389E                                              l1680 3596  
                                            l1745 4436                                              l1762 4214  
                                            l1578 1876                                              l1739 403C  
                                            l1677 358E                                              l1749 397A  
                                            l1686 3282                                              l1759 420C  
                                            l1696 43C8                                              l5321 458C  
                                            l7001 4216                                              l1689 31C6  
                                            l7011 3B26                                              l5323 4582  
                                            l7003 4226                                              l7021 3B4C  
                                            l7013 3B2E                                              l5341 42E2  
                                            l5325 45A0                                              ?_pad 0017  
                                            l7031 3B84                                              l7023 3B54  
                                            l7015 3B32                                              l7007 3B14  
                                            l5351 4306                                              l5343 42E6  
                                            l5327 4596                                              l7111 371A  
                                            l7103 369E                                              l7041 3BB0  
                                            l7033 3B8A                                              l7025 3B66  
                                            l7017 3B40                                              l7009 3B18  
                                            l5353 4310                                              l5345 42EC  
                                            l5361 43CC                                              l5329 45AA  
                                            l7121 379E                                              l7113 3728  
                                            l7105 36CC                                              l7201 37C2  
                                            l7035 3BA0                                              l7027 3B6E  
                                            l7043 3BB6                                              l7019 3B48  
                                            l5355 431A                                              l5347 42F6  
                                            l5371 43E0                                              l5531 455C  
                                            l7051 3C98                                              l7115 373A  
                                            l7107 36DC                                              l7203 3800  
                                            l7211 3840                                              l7045 3BC6  
                                            l7037 3BA8                                              l7029 3B76  
                                            l5381 44F2                                              l5357 431E  
                                            l5349 4300                                              l5373 43E4  
                                            l5701 4184                                              l5533 45D6  
                                            l5541 4458                                              l7061 3CC4  
                                            l7053 3C9C                                              l7117 3748  
                                            l7109 370A                                              l7125 435A  
                                            l7141 35EC                                              l7133 3598  
                                            l7213 3852                                              l7205 3828  
                                            l7221 3FE0                                              l7301 10F0  
                                            l7047 3BCE                                              l7039 3BAA  
                                            l5383 44F6                                              l5375 44E8  
                                            l5367 43D4                                              l5711 32EA  
                                            l5551 3F08                                              l5543 445A  
                                            l5535 4438                                              l7071 3CFC  
                                            l7063 3CCC                                              l7055 3CAA  
                                            l7119 3798                                              l7127 4370  
                                            l6511 2202                                              l6503 21D6  
                                            l7143 35EE                                              l7135 35AE  
                                            l7207 3834                                              l7223 3FF0  
                                            l7231 41FE                                              l7303 10F8  
                                            l5385 44FC                                              l5377 44E8  
                                            l5369 43DC                                              l5721 3328  
                                            l5713 3300                                              l5705 3286  
                                            l5561 3F2E                                              l5553 3F14  
                                            l5529 454C                                              l5545 4464  
                                            l5537 4450                                              l7081 3D36  
                                            l7073 3D12                                              l7065 3CDE  
                                            l7057 3CB2                                              l7129 4380  
                                            l6601 23B0                                              l6521 223C  
                                            l6513 2212                                              l6505 21E2  
                                            l7145 35FE                                              l7217 3896  
                                            l7241 30FC                                              l7225 41D0  
                                            l7401 14FE                                              l7321 1190  
                                            l7305 10FC                                              l5387 4502  
                                            l5379 44EC                                              l5731 33B0  
                                            l5723 335A                                              l5707 3296  
                                            l5571 3F78                                              l5563 3F32  
                                            l5555 3F22                                              l5547 4578  
                                            l5539 4452                                              l7083 3D3E  
                                            l7075 3D1A                                              l7067 3CE6  
                                            l7059 3CB6                                              l7091 3D86  
                                            l6611 2406                                              l6603 23D2  
                                            l6531 226A                                              l6523 2242  
                                            l6515 2222                                              l6507 21F0  
                                            l7171 367C                                              l7155 3628  
                                            l7147 3602                                              l7139 35C2  
                                            l7243 310A                                              l7251 31EA  
                                            l7235 3072                                              l7411 154C  
                                            l7403 1502                                              l7323 119A  
                                            l7315 112C                                              l7307 1100  
                                            l4933 4560                                              l5389 450C  
                                            l5741 3406                                              l5733 33BE  
                                            l5725 335C                                              l5717 3314  
                                            l5709 32A4                                              l5565 3F36  
                                            l5557 3F26                                              l5549 3F06  
                                            l7077 3D20                                              l7069 3CEE  
                                            l7093 3DB4                                              l6701 2684  
                                            l6621 2440                                              l6613 2414  
                                            l6605 23E2                                              l6541 229E  
                                            l6533 226C                                              l6525 2254  
                                            l6517 2224                                              l6509 21F2  
                                            l7173 368C                                              l7165 3650  
                                            l7157 3632                                              l7149 3610  
                                            l7253 3226                                              l7237 3092  
                                            l7181 3A72                                              l7229 41D0  
                                            l7501 19D4                                              l7421 15E4  
                                            l7405 1514                                              l7413 1554  
                                            l7341 1256                                              l7333 11E8  
                                            l7317 1158                                              l7309 1106  
                                            l4935 4560                                              l4951 41B6  
                                            l4943 418A                                              l5743 3416  
                                            l5735 33DC                                              l5727 3368  
                                            l5719 331C                                              l5671 40AA  
                                            l5567 3F42                                              l5559 3F2A  
                                            l7263 4392                                              l7271 4104  
                                            l7079 3D26                                              l7095 3DC4  
                                            l7087 3D48                                              l6631 24AC  
                                            l6623 2442                                              l6615 2422  
                                            l6551 22DA                                              l6535 227C  
                                            l6543 22A6                                              l6527 2256  
                                            l6519 222C                                              l7167 365C  
                                            l7159 363C                                              l7255 323A  
                                            l7247 317A                                              l7239 30E8  
                                            l6471 4040                                              l6711 427E  
                                            l7191 3AB8                                              l7183 3A80  
                                            l7511 1A8A                                              l7503 1A2C  
                                            l7431 16C8                                              l7423 163C  
                                            l7415 155C                                              l7407 1522  
                                            l7351 12CE                                              l7335 1214  
                                            l7319 1176                                              l7327 11C2  
                                            l4937 4562                                              l4953 41BA  
                                            l4945 419A                                              l6801 2C48  
                                            l5745 3424                                              l5737 33DE  
                                            l5729 33A4                                              l5681 40CA  
                                            l5673 40B0                                              l5569 3F4E  
                                            l5841 4546                                              l5833 4536  
                                            l7273 4132                                              l7601 34F0  
                                            l7097 3DE8                                              l7089 3D76  
                                            l6641 2504                                              l6633 24AE  
                                            l6625 244C                                              l6617 242E  
                                            l6609 23F6                                              l6561 22EE  
                                            l6553 22DE                                              l6545 22B6  
                                            l6537 228C                                              l6529 225C  
                                            l7169 366C                                              l7257 3262  
                                            l7249 31B6                                              l6481 408C  
                                            l6473 4060                                              l6705 425C  
                                            l6713 4402                                              l7193 3AE6  
                                            l7185 3A8C                                              l7177 3A4E  
                                            l7521 1ADA                                              l7513 1AA6  
                                            l7505 1A60                                              l7441 1762  
                                            l7433 16FA                                              l7425 1670  
                                            l7417 156C                                              l7409 153A  
                                            l7361 139E                                              l7353 1302  
                                            l7337 1232                                              l7345 127E  
                                            l7281 1056                                              l4939 456A  
                                            l4955 41C0                                              l4947 419E  
                                            l6811 2CA4                                              l6803 2C58  
                                            l5747 3426                                              l5739 33E2  
                                            l5683 40CE                                              l5835 453A  
                                            l7275 4136                                              l7267 40EC  
                                            l7611 3572                                              l7099 3DEE  
                                            l6651 2532                                              l6635 24BE  
                                            l6619 2432                                              l6627 2452  
                                            l6571 2302                                              l6563 22F2  
                                            l6555 22E2                                              l6547 22C8  
                                            l6539 229C                                              l7259 3272  
                                            l6483 4090                                              l6475 406A  
                                            l6491 3E04                                              l6707 4268  
                                            l6715 440E                                              l7195 3AFA  
                                            l7187 3AA0                                              l7179 3A5E  
                                            l6723 4322                                              l7531 1B1C  
                                            l7523 1AEA                                              l7515 1AB8  
                                            l7507 1A68                                              l7451 183A  
                                            l7443 1796                                              l7435 1710  
                                            l7419 1580                                              l7427 1676  
                                            l7371 1408                                              l7355 1308  
                                            l7363 13D0                                              l7347 1298  
                                            l7339 124C                                              l7291 10AA  
                                            l7283 1066                                              l4949 41A4  
                                            l6821 2CE4                                              l6813 2CA6  
                                            l6805 2C6C                                              l6741 2AEC  
                                            l6733 2AC0                                              l5669 4096  
                                            l5693 414A                                              l5837 453E  
                                            l7269 40F0                                              l6901 2744  
                                            l6653 2540                                              l6645 2518  
                                            l6661 255E                                              l6629 2478  
                                            l6637 24CE                                              l6573 2306  
                                            l6565 22F6                                              l6557 22E6  
                                            l6549 22D6                                              l6581 2316  
                                            l6477 407A                                              l6485 4092  
                                            l6469 4040                                              l6493 3E16  
                                            l6709 427A                                              l6717 4412  
                                            l7189 3AB4                                              l7541 1B4C  
                                            l7533 1B2A                                              l7525 1AFC  
                                            l7517 1AC6                                              l7461 1892  
                                            l7509 1A6C                                              l7445 17EC  
                                            l7453 183E                                              l7437 1742  
                                            l7429 1694                                              l7373 1410  
                                            l7365 13E0                                              l7357 1362  
                                            l7293 10B2                                              l7285 1074  
                                            l7701 1F20                                              l6831 2D20  
                                            l6823 2CEE                                              l6815 2CB6  
                                            l6807 2C7A                                              l6751 2B26  
                                            l6743 2AFC                                              l6735 2ACC  
                                            l5679 40B8                                              l5695 414E  
                                            l5687 413E                                              l5839 4542  
                                            l6727 4510                                              l7607 3528  
                                            l6911 278E                                              l6903 274A  
                                            l6655 2548                                              l6647 2522  
                                            l6639 24F4                                              l6663 256C  
                                            l6591 2386                                              l6583 231A  
                                            l6575 230A                                              l6567 22FA  
                                            l6559 22EA                                              l7199 37A2  
                                            l6479 407C                                              l6487 4570  
                                            l6495 3E20                                              l6719 442A  
                                            l7551 1BAE                                              l7543 1B72  
                                            l7535 1B32                                              l7527 1B04  
                                            l7519 1AD6                                              l7471 1938  
                                            l7463 18F6                                              l7455 184E  
                                            l7447 17F2                                              l7439 1752  
                                            l7391 14C0                                              l7383 1454  
                                            l7375 142A                                              l7367 13E4  
                                            l7359 1396                                              l7295 10C4  
                                            l7287 107C                                              l7279 104C  
                                            l7631 392C                                              l7623 38D6  
                                            l7711 1F9C                                              l7703 1F30  
                                            l7801 2EFC                                              l6841 2D92  
                                            l6833 2D2E                                              l6825 2CFC  
                                            l6817 2CC8                                              l6809 2C86  
                                            l6761 2B52                                              l6753 2B2C  
                                            l6745 2B0C                                              l6737 2ADA  
                                            l5697 4162                                              l6729 452C  
                                            l7609 3560                                              l6921 27DE  
                                            l6913 279A                                              l6905 276A  
                                            l6673 25BE                                              l6681 2614  
                                            l6665 2570                                              l6657 254C  
                                            l6649 2530                                              l6593 2392  
                                            l6585 2344                                              l6577 230E  
                                            l6569 22FE                                              l6497 3E3E  
                                            l6489 3DF2                                              l7561 1BF4  
                                            l7553 1BC8                                              l7545 1B8E  
                                            l7537 1B3A                                              l7529 1B14  
                                            l7481 1974                                              l7465 1906  
                                            l7473 1940                                              l7457 1862  
                                            l7449 1826                                              l7385 1466  
                                            l7393 14C4                                              l7369 13F6  
                                            l7377 1442                                              l7297 10D2  
                                            l7289 10A0                                              l7633 3956  
                                            l7625 38E4                                              l7617 38A0  
                                            l7713 1FCC                                              l7705 1F64  
                                            l7641 1CDC                                              l7811 2F24  
                                            l7803 2EFE                                              l6851 2DFE  
                                            l6843 2DA0                                              l6835 2D5C  
                                            l6819 2CDE                                              l6827 2D0E  
                                            l6771 2B8C                                              l6763 2B62  
                                            l6755 2B32                                              l6747 2B0E  
                                            l6739 2ADC                                              l5699 4168  
                                            l6931 2820                                              l6923 27EA  
                                            l6915 27A4                                              l6907 277A  
                                            l6691 2666                                              l6683 2624  
                                            l6675 25CA                                              l6667 257E  
                                            l6659 255C                                              l6595 2396  
                                            l6587 2360                                              l6579 2312  
                                            l6499 3E74                                              l7571 1C3C  
                                            l7563 1C04                                              l7555 1BCE  
                                            l7547 1B96                                              l7539 1B46  
                                            l7491 19A0                                              l7483 197A  
                                            l7475 1952                                              l7467 1918  
                                            l7459 186E                                              l7395 14CC  
                                            l7387 1482                                              l7299 10E4  
                                            l7627 38FC                                              l7619 38CA  
                                            l7723 204E                                              l7707 1F76  
                                            l7651 1D12                                              l7643 1CEE  
                                            l7821 2F5C                                              l7813 2F2E  
                                            l6861 2E4C                                              l6853 2E18  
                                            l6845 2DCA                                              l6829 2D1C  
                                            l6773 2BA2                                              l6765 2B72  
                                            l6757 2B40                                              l6749 2B16  
                                            l6941 2882                                              l6933 282C  
                                            l6925 27F6                                              l6917 27BA  
                                            l6693 266C                                              l6685 2634  
                                            l6677 25D8                                              l6669 2594  
                                            l6597 23A4                                              l6589 2370  
                                            l7573 1C48                                              l7565 1C0A  
                                            l7557 1BE0                                              l7549 1B9C  
                                            l7581 1C82                                              l7485 1986  
                                            l7477 1960                                              l7493 19A6  
                                            l7469 192A                                              l7397 14DE  
                                            l7389 14B8                                              l7629 391A  
                                            l7725 208E                                              l7733 212E  
                                            l7709 1F8E                                              l7717 1FF8  
                                            l7645 1CF2                                              l7637 1CA8  
                                            l7901 3E8C                                              l7831 2FBC  
                                            l7823 2F62                                              l7815 2F4C  
                                            l6863 2E4E                                              l6855 2E34  
                                            l6839 2D86                                              l6847 2DCE  
                                            l6791 2BF6                                              l6775 2BB2  
                                            l6783 2BD2                                              l6767 2B74  
                                            l6759 2B42                                              l7591 3450  
                                            l6951 2918                                              l6943 288E  
                                            l6935 283C                                              l6927 2804  
                                            l6919 27C6                                              l6871 2696  
                                            l6695 266E                                              l6687 2654  
                                            l6679 2612                                              l6599 23A6  
                                            l7575 1C50                                              l7559 1BEC  
                                            l7495 19B8                                              l7487 1996  
                                            l7479 1970                                              l7399 14F0  
                                            l7751 21C2                                              l7735 2154  
                                            l7743 2182                                              l7727 20C2  
                                            l7719 2026                                              l7671 1D36  
                                            l7663 1D24                                              l7655 1D18  
                                            l7647 1CFE                                              l7639 1CCE  
                                            l7911 3EC4                                              l7903 3EA8  
                                            l7841 2FE8                                              l7825 2F66  
                                            l7817 2F54                                              l7809 2F14  
                                            l7833 2FC0                                              l6857 2E38  
                                            l6849 2DE8                                              l6793 2C10  
                                            l6785 2BE2                                              l6777 2BBA  
                                            l6769 2B7C                                              l7593 346E  
                                            l7585 3438                                              l6961 296E  
                                            l6953 2936                                              l6945 28AA  
                                            l6937 2856                                              l6929 2810  
                                            l6881 26D2                                              l6873 26A2  
                                            l6697 2674                                              l6689 2658  
                                            l7577 1C60                                              l7569 1C10  
                                            l7497 19CA                                              l7489 199A  
                                            l7745 2190                                              l7737 2162  
                                            l7729 2102                                              l7681 1DDC  
                                            l7649 1D00                                              l7673 1D8C  
                                            l7913 3EE2                                              l7905 3EAA  
                                            l7851 306E                                              l7843 302E  
                                            l7835 2FE0                                              l7827 2F84  
                                            l7819 2F58                                              l7763 2E5A  
                                            l6859 2E46                                              l6795 2C20  
                                            l6787 2BE2                                              l6779 2BBE  
                                            l7595 34AA                                              l7587 344C  
                                            l6971 29D8                                              l6963 2972  
                                            l6955 2940                                              l6947 28D4  
                                            l6939 2866                                              l6891 2704  
                                            l6883 26E2                                              l6875 26B0  
                                            l6699 2682                                              l7579 1C66  
                                            l7499 19CE                                              l7739 2176  
                                            l7683 1DEA                                              l7675 1DAC  
                                            l7667 1D2A                                              l7659 1D1E  
                                            l7907 3EAC                                              l7845 3032  
                                            l7829 2F94                                              l7781 2E9E  
                                            l6797 2C30                                              l7597 34B2  
                                            l6981 2A3A                                              l6973 29E4  
                                            l6965 2980                                              l6957 294E  
                                            l6949 290A                                              l6893 2712  
                                            l6885 26E8                                              l6877 26B2  
                                            l7693 1E78                                              l7685 1E10  
                                            l7677 1DAE                                              l7749 219C  
                                            l7861 3FB8                                              l7909 3EB0  
                                            l7847 304E                                              l7791 2EC6  
                                            l7783 2EB2                                              l7775 2E6E  
                                            l7863 45B4                                              l6799 2C40  
                                            l7871 3992                                              l7599 34BA  
                                            l6991 2AA2                                              l6983 2A4E  
                                            l6975 29F2                                              l6967 29AE  
                                            l6959 2960                                              l6895 2714  
                                            l6887 26F8                                              l6879 26C2  
                                            l7687 1E4A                                              l7679 1DD4  
                                            l7695 1EB8                                              l7855 3F7C  
                                            l7849 3052                                              l7793 2ECE  
                                            l7777 2E7E                                              l7769 2E66  
                                            l7881 39CA                                              l7873 399E  
                                            l7865 397C                                              l6993 2AA4  
                                            l6985 2A68                                              l6977 2A1C  
                                            l6897 2724                                              l6889 26FE  
                                            l7697 1EDC                                              l7689 1E6A  
                                            l7857 3F84                                              l7795 2ED2  
                                            l7787 2EB8                                              l7779 2E82  
                                            l7883 39D0                                              l7875 39A4  
                                            l7867 397C                                              l6987 2A84  
                                            l6995 2AAA                                              l6979 2A20  
                                            l6899 2734                                              l7699 1EEC  
                                            l7859 3F92                                              l7797 2EE6  
                                            l7789 2EBE                                              l7885 39D6  
                                            l7877 39BA                                              l7869 3982  
                                            l6997 2AAE                                              l6989 2A94  
                                            l7965 1D5E                                              l7893 4494  
                                            l7799 2EE8                                              l7887 39DC  
                                            l7879 39BE                                              l7967 34DA  
                                            l7895 449E                                              l7889 3A3C  
                                            l7899 3E88                                              STR_1 1021  
                                            STR_2 1037                                              STR_3 103F  
                                            STR_6 103B                                              STR_7 1043  
                                            _LATA 000F89                                              _LATB 000F8A  
                                            _LATC 000F8B                                              _LATD 000F8C  
                                            _LATE 000F8D                                              u5100 4400  
                                            u5101 43FC                                              u4500 419A  
                                            u6100 21F0                                              u4501 4196  
                                            u6101 21EC                                              u6110 2202  
                                            u6030 4052                                              u6111 21FE  
                                            u6031 404E                                              u7000 3BC6  
                                            u5400 3296                                              u6200 235C  
                                            u6120 2212                                              u6040 4060  
                                            u7001 3BC2                                              u5401 3292  
                                            u6201 2356                                              u6121 220E  
                                            u6041 405C                                              u5410 32A4  
                                            u7010 3CAA                                              u6210 235E  
                                            u6130 2254                                              u6050 408C  
                                            u5411 32A0                                              u7011 3CA6  
                                            u6131 2250                                              u6051 4088  
                                            u5420 3300                                              u7020 3CC4  
                                            u7100 36CC                                              u6300 2478  
                                            u6220 2386                                              u6140 226A  
                                            u6060 3E04                                              u5421 32FC  
                                            u7021 3CC0                                              u7101 36C8  
                                            u6301 2474                                              u6221 2382  
                                            u6141 2266                                              u6061 3E00  
                                            u5430 3356                                              u7030 3CDE  
                                            u7110 370A                                              u6310 24BE  
                                            u6230 23A4                                              u6150 227C  
                                            u6070 3E16                                              u5431 3352  
                                            u7031 3CDA                                              u7111 3706  
                                            u6311 24BA                                              u6231 23A0  
                                            u6151 2278                                              u6071 3E12  
                                            u5440 33A0                                              u5360 40AA  
                                            u8000 34A6                                              u7040 3CFC  
                                            u7120 3728                                              u6400 25AA  
                                            u6320 24F4                                              u6240 23C4  
                                            u6160 228C                                              u7200 364C  
                                            u6080 3E3E                                              u5441 339C  
                                            u5361 40A6                                              u8001 34A2  
                                            u7041 3CF8                                              u7121 3724  
                                            u6401 25A6                                              u6321 24F0  
                                            u6241 23C0                                              u6161 2288  
                                            u7201 3648                                              u6081 3E3A  
                                            u5450 33BE                                              u5370 40EA  
                                            u8010 3560                                              u7050 3D12  
                                            u7130 3748                                              u6410 25BE  
                                            u6330 2504                                              u6250 23D2  
                                            u6170 22C8                                              u7210 366C  
                                            u6090 3E74                                              u5451 33BA  
                                            u5371 40E6                                              u8011 355C  
                                            u7051 3D0E                                              u7131 3744  
                                            u6411 25BA                                              u6331 2500  
                                            u6251 23CE                                              u6171 22C4  
                                            u7211 3668                                              u6091 3E70  
                                            u5460 33CE                                              u5380 4162  
                                            u8020 3572                                              u7060 3D36  
                                            u7140 3798                                              u6420 25D8  
                                            u6340 2530                                              u6260 23E2  
                                            u6180 22D6                                              u7220 367C  
                                            u7300 3852                                              u6500 442A  
                                            u8100 1DAC                                              u5461 33CA  
                                            u5381 415E                                              u8021 356E  
                                            u7061 3D32                                              u7141 3794  
                                            u6421 25D4                                              u6341 252C  
                                            u6261 23DE                                              u6181 22D2  
                                            u7221 3678                                              u7301 384E  
                                            u6501 4426                                              u8101 1DA8  
                                            u5470 33DC                                              u5390 4184  
                                            u7070 3D76                                              u7150 4370  
                                            u6430 2612                                              u6350 2540  
                                            u6270 2414                                              u6190 2344  
                                            u7230 3A5E                                              u6510 4352  
                                            u8030 38CA                                              u8110 1DD4  
                                            u5471 33D8                                              u5391 4180  
                                            u7071 3D72                                              u7151 436C  
                                            u6431 260E                                              u6351 253C  
                                            u6271 2410                                              u6191 2340  
                                            u7231 3A5A                                              u6511 434C  
                                            u8031 38C6                                              u8111 1DD0  
                                            u8200 2E9E                                              u6600 2BE2  
                                            u5480 3416                                              u7080 3DB4  
                                            u6440 2624                                              u6360 255C  
                                            u6280 2422                                              u7160 35AE  
                                            u7320 388C                                              u7240 3A80  
                                            u6520 4354                                              u8040 38FC  
                                            u8120 1E10                                              u8201 2E9A  
                                            u6601 2BDE                                              u5481 3412  
                                            u7081 3DB0                                              u6441 2620  
                                            u6361 2558                                              u6281 241E  
                                            u7161 35AA                                              u7321 3886  
                                            u7241 3A7C                                              u8041 38F8  
                                            u8121 1E0C                                              u8210 2EB2  
                                            u6610 2C58                                              u6530 2ADA  
                                            u5490 3424                                              u7090 3DE8  
                                            u6450 2634                                              u6370 256C  
                                            u6290 2440                                              u7170 35E2  
                                            u7330 388E                                              u7410 3176  
                                            u7250 3AD6                                              u8050 391A  
                                            u8130 1EB8                                              u8211 2EAE  
                                            u6611 2C54                                              u6531 2AD6  
                                            u5491 3420                                              u7091 3DE4  
                                            u6451 2630                                              u6371 2568  
                                            u6291 243C                                              u7315 3864  
                                            u7411 3172                                              u7251 3AD2  
                                            u8051 3916                                              u8131 1EB4  
                                            u8300 304E                                              u8220 2EE6  
                                            u6700 2D72                                              u6620 2C7A  
                                            u6540 2AEC                                              u7500 4132  
                                            u6460 2654                                              u6380 257E  
                                            u7180 3610                                              u7420 319A  
                                            u7260 3AE6                                              u7340 402A  
                                            u8060 392C                                              u8140 1EEC  
                                            u8301 304A                                              u8221 2EE2  
                                            u6701 2D6E                                              u6621 2C76  
                                            u6541 2AE8                                              u7501 412E  
                                            u6461 2650                                              u6381 257A  
                                            u7181 360C                                              u7405 311E  
                                            u7261 3AE2                                              u8061 3928  
                                            u8141 1EE8                                              u8310 306E  
                                            u8230 2EFC                                              u6710 2D86  
                                            u6630 2CA4                                              u6550 2AFC  
                                            u6470 2666                                              u6390 2594  
                                            u7190 3624                                              u7270 37E2  
                                            u7430 31B6                                              u7406 3128  
                                            u7350 403C                                              u7510 1074  
                                            u8070 3956                                              u8150 1F30  
                                            u8311 306A                                              u8231 2EF8  
                                            u6711 2D82                                              u6631 2CA0  
                                            u6551 2AF8                                              u6471 2662  
                                            u6391 2590                                              u7191 3620  
                                            u7175 35D8                                              u7431 31B2  
                                            u7407 3138                                              u7351 4038  
                                            u7511 1070                                              u8071 3952  
                                            u8151 1F2C                                              u8240 2F10  
                                            u6720 2DA0                                              u6640 2CC8  
                                            u6560 2B40                                              u6800 2724  
                                            u6480 2682                                              u7280 3800  
                                            u7440 320A                                              u7360 41FE  
                                            u7600 135E                                              u7520 10C4  
                                            u8160 1F76                                              u8080 1CCE  
                                            u8320 3FD6                                              u8241 2F0C  
                                            u6721 2D9C                                              u6641 2CC4  
                                            u6561 2B3C                                              u6801 2720  
                                            u6481 267E                                              u7281 37FC  
                                            u7425 3190                                              u7361 41FA  
                                            u7601 135A                                              u7521 10C0  
                                            u8161 1F72                                              u8081 1CCA  
                                            u8321 3FD2                                              u8250 2F24  
                                            u6730 2DE8                                              u6650 2CDE  
                                            u6570 2B52                                              u8330 3992  
                                            u6810 2734                                              u7290 3828  
                                            u7450 3226                                              u7370 30BA  
                                            u6490 429E                                              u7610 13D0  
                                            u7530 10D2                                              u8170 2026  
                                            u8090 1D9E                                              u8251 2F20  
                                            u6731 2DE4                                              u6651 2CDA  
                                            u6571 2B4E                                              u8331 398E  
                                            u6811 2730                                              u7291 3824  
                                            u7275 37D8                                              u7451 3222  
                                            u6491 429A                                              u7347 4020  
                                            u7611 13CC                                              u7531 10CE  
                                            u8171 2022                                              u8091 1D9A  
                                            u8260 2F4C                                              u6740 2E18  
                                            u6660 2CFC                                              u6580 2B62  
                                            u6900 29D8                                              u6820 276A  
                                            u7460 3262                                              u7380 30E8  
                                            u7700 14F0                                              u7620 13F6  
                                            u7540 10E4                                              u8180 208E  
                                            u8261 2F48                                              u6741 2E14  
                                            u6661 2CF8                                              u6581 2B5E  
                                            u6901 29D4                                              u6821 2766  
                                            u7461 325E                                              u7445 3200  
                                            u7381 30E4                                              u7701 14EC  
                                            u7621 13F2                                              u7541 10E0  
                                            u8181 208A                                              u8270 2F7E  
                                            u6750 2E46                                              u6670 2D1C  
                                            u6590 2BA2                                              u7470 43C2  
                                            u6910 29F2                                              u6830 277A  
                                            u7390 310A                                              u7710 14FE  
                                            u7630 1408                                              u7550 112C  
                                            u8190 2154                                              u8407 41C6  
                                            u6751 2E42                                              u6671 2D18  
                                            u6591 2B9E                                              u7471 43BC  
                                            u6911 29EE                                              u6831 2776  
                                            u7391 3106                                              u7375 30B0  
                                            u7711 14FA                                              u7631 1404  
                                            u7551 1128                                              u8191 2150  
                                            u8280 2F94                                              u6680 2D2E  
                                            u7480 43C4                                              u6920 2A3A  
                                            u6840 28F4                                              u6760 26B0  
                                            u7800 183A                                              u7720 1514  
                                            u7640 142A                                              u7560 1158  
                                            u8417 42E8                                              u8281 2F90  
                                            u6681 2D2A                                              u6921 2A36  
                                            u6761 26AC                                              u7801 1836  
                                            u7721 1510                                              u7641 1426  
                                            u7561 1154                                              u8290 2FDC  
                                            u6690 2D5C                                              u7490 4104  
                                            u6930 2A68                                              u6850 294E  
                                            u6770 26C2                                              u7810 1862  
                                            u7730 1522                                              u7650 1450  
                                            u7570 11E8                                              u8427 42EE  
                                            u8291 2FD8                                              u8275 2F7A  
                                            u6691 2D58                                              u7491 4100  
                                            u6931 2A64                                              u6851 294A  
                                            u6771 26BE                                              u7811 185E  
                                            u7731 151E                                              u7651 144C  
                                            u7571 11E4                                              u8347 3E98  
                                            u6940 2AA2                                              u6860 296E  
                                            u6780 26D2                                              u7900 1AA6  
                                            u7820 1906                                              u7740 154C  
                                            u7660 1466                                              u7580 1214  
                                            u8437 42F8                                              u6941 2A9E  
                                            u6861 296A                                              u6845 28EA  
                                            u6781 26CE                                              u7901 1AA2  
                                            u7821 1902                                              u7741 1548  
                                            u7661 1462                                              u7581 1210  
                                            u8357 3EEE                                              u6950 3B26  
                                            u6870 2980                                              u6790 2712  
                                            u7910 1AB8                                              u7830 1918  
                                            u7750 1694                                              u7670 1482  
                                            u7590 12CA                                              u6951 3B22  
                                            u8447 4308                                              u8367 39AE  
                                            u6871 297C                                              u6791 270E  
                                            u7911 1AB4                                              u7831 1914  
                                            u7751 1690                                              u7671 147E  
                                            u7591 12C6                                              u6960 3B40  
                                            u6880 29AE                                              u7920 1AC6  
                                            u7840 192A                                              u7760 16FA  
                                            u7680 14B8                                              u6961 3B3C  
                                            u8457 4312                                              u8377 41A0  
                                            u6881 29AA                                              u7921 1AC2  
                                            u7841 1926                                              u7761 16F6  
                                            u7681 14B4                                              u6970 3B66  
                                            u6890 29C4                                              u7930 1AFC  
                                            u7850 1938                                              u7770 1742  
                                            u7690 14DE                                              u6971 3B62  
                                            u8467 44EE                                              u8387 41AA  
                                            u6891 29C0                                              u7931 1AF8  
                                            u7851 1934                                              u7771 173E  
                                            u7691 14DA                                              u6980 3B84  
                                            u7940 1B2A                                              u7860 1952  
                                            u7780 1752                                              u6981 3B80  
                                            u8477 44F8                                              u8397 41BC  
                                            u7941 1B26                                              u7861 194E  
                                            u7781 174E                                              u6990 3BA0  
                                            u7950 1BAE                                              u7870 1960  
                                            u7790 17EC                                              u6991 3B9C  
                                            u8487 4504                                              u7951 1BAA  
                                            u7871 195C                                              u7791 17E8  
                                            u7960 1BC8                                              u7880 19B8  
                                            u7961 1BC4                                              u7881 19B4  
                                            u7970 1BE0                                              u7890 1A8A  
                                            u7971 1BDC                                              u7891 1A86  
                                            u7980 1C3C                                              u7981 1C38  
                                            u7990 346E                                              u7991 346A  
                                            _WPUB 000F7C                                              _dbuf 0100  
                                            _atoi 3438                                              _main 3E88  
                                            _prec 00AC                                              _nout 00A8  
                                            pad@i 001E                                              pad@p 001B  
                                            fsr0h 000FEA                                              fsr1h 000FE2  
                                            indf0 000FEF                                              fsr2h 000FDA  
                                            fsr0l 000FE9                                              indf1 000FE7  
                                            indf2 000FDF                                              fsr1l 000FE1  
                                            pad@w 0020                                              fsr2l 000FD9  
                                            btemp 005B                                     ___fpclassifyf 37A2  
                                            prodh 000FF4                                              prodl 000FF3  
                                            start 00B0                                   ___fldiv@new_exp 0024  
                                    _DS18B20_init 45B4                         ??_searchOneWireDevicesROM 000D  
                                    ___param_bank 000000                                   _readOneWireByte 413E  
                                           ??_pad 001D                                     ?_EUSART_Write 0001  
                                   _I2C_DO_RX_ACK 000000                     __end_of_OSCILLATOR_Initialize 4582  
                        __end_of_writeOneWireByte 4402                                     ___fltol@sign1 000D  
                                           ?_atoi 000C                                   __end_of___fladd 2696  
                                           ?_main 0001                                   __end_of___fldiv 2E5A  
                                 __end_of___awdiv 3BD8                                   __end_of___flneg 4392  
                                           STR_10 1047                                             STR_12 1047  
                                 __end_of___awmod 3D48                                   __end_of___flmul 2AC0  
                                 __end_of___flsub 425C                                   __end_of___fltol 369E  
                                           _ANSEL 000F7E                                   ___awdiv@divisor 0007  
                                           i2l610 42E0                                             i2l621 44E6  
                                           i2l630 45D4                                             i2l607 42DE  
                                           i2l624 45DA                                             i2l617 3C96  
                                           i2l627 45CE                                             i2l671 009C  
                                           i2l666 0062                                             i2l667 009C  
                                 ___awdiv@counter 0009                                             _RCREG 000FAE  
                                           _RCSTA 000FAB                                      vfpfcnvrt@fmt 004E  
                                           _SPBRG 000FAF                                             _TRISA 000F92  
                                           _TRISB 000F93                                             _TRISC 000F94  
                                           _TRISD 000F95                                             _TRISE 000F96  
                                           _TXREG 000FAD                                             _TXSTA 000FAC  
                               ??_driveOneWireLow 0005                                             _flags 00AE  
                                           _fputc 3DF2                                             _fputs 425C  
                                 __end_of_isdigit 43CA                     __end_of_DS18B20_temp_GetValue 3A4E  
                                           atoi@n 0014                                             pad@fp 0017  
                                           atoi@s 000C                                             _width 00AA  
                                           _putch 456E                                   __end_of_isspace 413E  
                                 __end_of_isupper 435A                                             pclath 000FFA  
                                           pclatu 000FFB                                             tablat 000FF5  
                 DS18B20_temp_GetValue@prisutnost 003A                                             ttemp5 005C  
                                           ttemp6 005F                                             ttemp7 0063  
                                           status 000FD8  addressOneWireDevice@CurrentAdressedOneWireDevice 0009  
                                           wtemp8 005C                                    ?___fpclassifyf 0005  
                                 __end_of_tolower 4216                                   __end_of_strncmp 397C  
                                   _fsmStateTable 1001                  DS18B20_temp_GetValue@tempDataAnz 0034  
                                 __initialization 4468                                      __end_of_atoi 3598  
                                    __end_of_main 3F06                                    ??_EUSART_Write 0005  
                     ?_INTERRUPT_InterruptManager 0001                    ??_EUSART_SetRxInterruptHandler 0007  
                                          ??_atoi 000E                                            ??_main 016A  
                                   __activetblptr 000003                   __end_of_searchOneWireDevicesROM 3072  
            fp__EUSART_DefaultFramingErrorHandler 0000         __end_of_EUSART_DefaultFramingErrorHandler 45DC  
             ??_EUSART_DefaultFramingErrorHandler 0001                ?_EUSART_DefaultFramingErrorHandler 0001  
               _EUSART_DefaultFramingErrorHandler 45DA                        _EUSART_OverrunErrorHandler 0162  
                                          ?_fputc 0007                                            ?_fputs 0010  
                                ___awdiv@dividend 0005                                            ?_putch 0001  
                                          _ANSELH 000F7F                                            i2l5331 44BE  
                                          i2l5333 44CE                                            i2l5335 44D0  
                               ??_writeOneWireBit 0005                                            i2l5337 44E0  
                                          i2l6401 007E                                            i2l5339 44E4  
                                          i2l5573 45CA                                            i2l5575 45D0  
                                          i2l6391 001A                                            i2l6393 0028  
                                          i2l6395 0036                                            i2l6397 0044  
                                          i2l5871 42C4                                            i2l6399 0070  
                                          i2l5881 3BF6                                            i2l5873 42D4  
                                          i2l5865 42A0                                            i2l5891 3C58  
                                          i2l5883 3C06                                            i2l5875 42D8  
                                          i2l5867 42B2                                            i2l5893 3C74  
                                          i2l5885 3C20                                            i2l5877 3BD8  
                                          i2l5869 42C2                                            i2l5895 3C92  
                                          i2l5887 3C2E                                            i2l5879 3BE8  
                                          i2l5889 3C3E                                            _OSCCON 000FD3  
                                   vfpfcnvrt@done 00E4                                            _SPBRGH 000FB0  
                         __end_of_readOneWireByte 4188                                            _SSPADD 000FC8  
                                          _SSPBUF 000FC9                             addressOneWireDevice@i 000B  
                                __end_of___xxtofl 3438                                 ?_driveOneWireHigh 0001  
                                    vfprintf@cfmt 00F4                                            ___flge 369E  
                                          ___fleq 3D48                                ??_driveOneWireHigh 0005  
                                       ??___fladd 000D                                            ___wmul 4510  
                                       ??___fldiv 001B                                         ??___awdiv 0009  
                                       ??___flneg 0009                                         ??___awmod 0009  
                                       ??___flmul 000D                                         ??___flsub 0026  
                                       ??___fltol 0009                                            _efgtoa 104C  
                             _EUSART_Transmit_ISR 42A0                                            _floorf 3072  
                                          clear_0 446E                                            clear_1 447A  
                                ___awdiv@quotient 000B                                   ___awmod@divisor 0007  
                                          isa$std 000001                                   ___awmod@counter 0009  
                                          _printf 4494                                            pad@buf 0019  
                                          _strcpy 3FE0                                            _strlen 4402  
                                          fputc@c 0007                                            fputs@c 0014  
                             _I2C_DO_ADDRESS_NACK 000000                                            fputs@i 0015  
                                          fputs@s 0010                                         ??_isdigit 0007  
                                 ___fpclassifyf@e 000D                                   ___fpclassifyf@u 000F  
                                 ___fpclassifyf@x 0005                                      __mediumconst 0000  
                                       ??_isspace 0007                                            tblptrh 000FF7  
                                       ??_isupper 0007                                            tblptrl 000FF6  
                                          tblptru 000FF8                     searchOneWireDevicesROM@bitnum 0024  
                                __end_of_vfprintf 3FE0                                         ??_tolower 000D  
                                       ??_strncmp 000B                              ?_EUSART_Transmit_ISR 0001  
                                      ___flge@ff1 001E                                        ___flge@ff2 0022  
                                 ??___fpclassifyf 0009                                      ___xxtofl@arg 000F  
                                    ___xxtofl@exp 000E                                 _SYSTEM_Initialize 4536  
                                    ___xxtofl@val 0005                                        ___fleq@ff1 0005  
                                      ___fleq@ff2 0009                                 ?_sampleOneWirePin 0001  
                                      __accesstop 0060                           __end_of__initialization 448A  
                                      ___flneg@f1 0005                                ?_SYSTEM_Initialize 0001  
                                   ___rparam_used 000001                                ??_sampleOneWirePin 0005  
                                      ___fltol@f1 0005              __end_of_EUSART_SetTxInterruptHandler 458C  
                    _EUSART_SetTxInterruptHandler 4582                           _rdBlkRegCompleteHandler 000000  
                                  __pcstackCOMRAM 0001                            _I2C_CallbackReturnStop 000000  
                             ??_SYSTEM_Initialize 0007                                     __end_of_fputc 3E88  
                                   __end_of_fputs 42A0                                     __end_of_putch 4578  
                            _eusartRxStatusBuffer 0084                           resetOneWirePin@presence 0006  
                 ??_EUSART_SetOverrunErrorHandler 0007                                           ??_fputc 000B  
                       __end_of_SYSTEM_Initialize 454C                                           ??_fputs 0014  
                           ??_EUSART_Transmit_ISR 0001                                           ??_putch 0006  
                                      __pbssBANK0 0060                                        __pbssBANK1 0100  
                            __end_of_EUSART_Write 4096                                  ?_readOneWireByte 0001  
                             _I2C_DO_RX_NACK_STOP 000000                             _rd1RegCompleteHandler 000000  
                           _wr1RegCompleteHandler 000000                                           ?___flge 001E  
                   ?_EUSART_SetTxInterruptHandler 0005                                           ?___fleq 0005  
                _EUSART_TxDefaultInterruptHandler 00FC                                   _I2C_DO_TX_EMPTY 000000  
                                         ?___wmul 0005                                           ?_efgtoa 0040  
                                         ?_floorf 002C                                           _BAUDCON 000FB8  
                                 _driveOneWireLow 45BE                      ??_EUSART_DefaultErrorHandler 0001  
                                         ?_printf 00F6                                           ?_strcpy 0005  
                                         ?_strlen 0005                                 ?_writeOneWireByte 0001  
                                   _eusartRxCount 0056                                         ?___xxtofl 0005  
                              ??_writeOneWireByte 0006                                           _OSCTUNE 000F9B  
                        ??_EUSART_SetErrorHandler 0007                                           _SSPCON1 000FC6  
                                         _SSPCON2 000FC5                                           _SSPSTAT 000FC7  
                                       _I2C_DO_RX 000000                                         _I2C_DO_TX 000000  
                                         __Hparam 0000                                           __Lparam 0000  
                                         ___fladd 21D6                                           ___fldiv 2AC0  
                                         ___awdiv 3B14                                           ___flneg 435A  
                                         ___awmod 3C98                                           ___flmul 2696  
                                         ___flsub 4216                                           ___fltol 3598  
                                       ?_vfprintf 00EE                                      __psmallconst 1000  
                                         __pcinit 4468                                    _I2C_Initialize 454C  
                                         __ramtop 1000                                           __ptext0 3E88  
                                         __ptext1 4494                                           __ptext2 3F7C  
                                         __ptext3 1CA8                                           __ptext4 38A0  
                                         __ptext5 104C                                           __ptext6 41D0  
                                         __ptext7 4322                                           __ptext8 3FE0  
                                         __ptext9 3A4E                                   _writeOneWireBit 4188  
                           _OSCILLATOR_Initialize 4578                                           _isdigit 4392  
                                      ??___xxtofl 0009                                  ___awmod@dividend 0005  
                        ??_PIN_MANAGER_Initialize 0005                                           _isspace 40EC  
                                         _isupper 4322                                           efgtoa@c 0046  
                                readOneWireByte@i 0008                                           efgtoa@d 00C4  
                                         efgtoa@e 00DC                                           efgtoa@f 0042  
                                         efgtoa@g 00D8                                           efgtoa@h 00CE  
                                         efgtoa@i 00D6                                           efgtoa@l 00D2  
                                         efgtoa@m 00BE                                           efgtoa@n 00DE  
                                         efgtoa@p 00C8                                           efgtoa@t 00B8  
                                         efgtoa@u 00E0                                           efgtoa@w 00CA  
                                         atoi@neg 0012                                           _tolower 41D0  
                                         _strncmp 38A0                              end_of_initialization 448A  
                                         floorf@e 003A                                           floorf@m 0036  
                                         floorf@u 003C                                           floorf@x 002C  
           __end_of_EUSART_SetOverrunErrorHandler 45A0                     _EUSART_SetOverrunErrorHandler 4596  
                           _DS18B20_temp_GetValue 397C                          ?_searchOneWireDevicesROM 0001  
                                         fputc@fp 0009                                           fputs@fp 0012  
                               _EUSART_Initialize 3F06                           __end_of_driveOneWireLow 45C4  
                             readOneWireByte@data 0007                                ?_EUSART_Initialize 0001  
                               __end_of_vfpfcnvrt 21D6                                        efgtoa@mode 00CD  
                                      efgtoa@sign 00C6                                         _RCSTAbits 000FAB  
                                         postdec2 000FDD                                           postinc0 000FEE  
                                         postinc1 000FE6                                           postinc2 000FDE  
                          __end_of_I2C_Initialize 4560                                        ??_vfprintf 0056  
                                      _temperatur 00A4                                           strcpy@d 000D  
                                         strlen@a 0007                                           strcpy@s 000B  
                                         strlen@s 0005                               ??_EUSART_Initialize 0007  
                  ??_EUSART_SetTxInterruptHandler 0007                                         _PORTCbits 000F82  
                               ??_resetOneWirePin 0006                                       ___fladd@grs 0014  
                                   ___xxtofl@sign 000D                                         _TRISCbits 000F94  
                                     ___fldiv@grs 0026                                       ___fldiv@rem 001F  
                                     ___flmul@grs 0013                         __end_of_EUSART_Initialize 3F7C  
                                     _I2C_DO_IDLE 000000                                       _I2C_DO_RCEN 000000  
                                       _TXSTAbits 000FAC                          _I2C_DO_SEND_RESTART_READ 000000  
                                  _readOneWireBit 44E8                      __end_of_INTERRUPT_Initialize 45DA  
                                 ?_I2C_Initialize 0001                           __end_of_writeOneWireBit 41D0  
                         _I2C_CallbackReturnReset 000000                                    __end_of___flge 37A2  
                                  __end_of___fleq 3DF2                __end_of_EUSART_DefaultErrorHandler 45D6  
                      _EUSART_DefaultErrorHandler 45D0                                       vfpfcnvrt@ap 0050  
                                     vfpfcnvrt@ct 00EA                                       vfpfcnvrt@fp 004C  
                                  __end_of___wmul 4536                                    __end_of_efgtoa 1CA8  
                                    _EUSART_Write 403E                                    __end_of_floorf 3284  
                          ?_OSCILLATOR_Initialize 0001                                        floorf@F526 009C  
                                  __end_of_printf 44BE                                    __end_of_strcpy 403E  
                                  __end_of_strlen 4438                               start_initialization 4468  
                                     __end_of_pad 3B14      EUSART_SetRxInterruptHandler@interruptHandler 0005  
    EUSART_SetTxInterruptHandler@interruptHandler 0005                                       putch@txData 0006  
                          ?_DS18B20_temp_GetValue 002C                             __end_of___fpclassifyf 38A0  
       searchOneWireDevicesROM@LastConflictBitNum 0019                            _I2C_DO_RX_NACK_RESTART 000000  
                    __end_of_addressOneWireDevice 40EC                            __end_of_readOneWireBit 4510  
                                   ?_DS18B20_init 0001                    ?_EUSART_SetOverrunErrorHandler 0005  
                                ?_driveOneWireLow 0001                                       vfprintf@fmt 00F0  
                      _EUSART_FramingErrorHandler 0164                                          ??___flge 0026  
                                        ??___fleq 000D                                          ??___wmul 0009  
                          _EUSART_SetErrorHandler 45AA                                          ??_efgtoa 0047  
                                        ??_floorf 0030                       searchOneWireDevicesROM@mask 001B  
                                _I2C_DO_SEND_STOP 000000                                          ??_printf 0056  
                                        ??_strcpy 0009                                          ??_strlen 0007  
                                       ___fladd@a 0009                                         ___fladd@b 0005  
                                       ___fldiv@a 0017                                         ___fldiv@b 0013  
                     __end_of_EUSART_Transmit_ISR 42E2                             _I2C_DO_SEND_ADR_WRITE 000000  
                                       ___flmul@a 0009                                         ___flmul@b 0005  
                                     __pbssCOMRAM 0056                                         ___flsub@a 0022  
                                       ___flsub@b 001E                                     __pcstackBANK0 00B2  
                                   __pcstackBANK1 0168                        __end_of_EUSART_Receive_ISR 3C98  
                       _I2C_DO_SEND_RESTART_WRITE 000000                  _EUSART_RxDefaultInterruptHandler 0166  
                                  ??_DS18B20_init 0026                                         __pnvBANK0 00FC  
                                       __pnvBANK1 0160                             _rd2RegCompleteHandler 000000  
                                 ?_readOneWireBit 0001          searchOneWireDevicesROM@SearchedROMDevice 0011  
                           __end_of_fsmStateTable 1021                                       _efgtoa$2341 00B4  
                                     _efgtoa$2333 00B2                                       _efgtoa$2342 00B6  
                    __end_of_EUSART_RxDataHandler 44E8                            _PIN_MANAGER_Initialize 4438  
                           _wr2RegCompleteHandler 000000                                         __pintcode 0008  
                                        ?___fladd 0005                                          ?___fldiv 0013  
                                        ?___awdiv 0005                                          ?___flneg 0005  
                                        ?___awmod 0005                                          ?___flmul 0005  
                                        ?___flsub 001E                                          ?___fltol 0005  
                                _DeviceAddressMap 0150                                  ?_writeOneWireBit 0001  
                                    _eusartRxHead 0058                                      _eusartTxHead 005A  
                                    _eusartRxTail 0057                                      _eusartTxTail 0059  
                    ??_INTERRUPT_InterruptManager 0001                           _eusartTxBufferRemaining 00FE  
                                     __smallconst 1000                                  _driveOneWireHigh 45C4  
                                        ?_isdigit 0005                                          ?_isspace 0005  
                                        ?_isupper 0005                                          ?_tolower 000B  
                                        ?_strncmp 0005                              _INTERRUPT_Initialize 45D6  
                                  _eusartRxBuffer 008C                                    _eusartTxBuffer 0094  
                                  ___wmul@product 0009            EUSART_SetErrorHandler@interruptHandler 0005  
                                        _LATCbits 000F8B                                 writeOneWireByte@i 0007  
              searchOneWireDevicesROM@SelectedBit 001C                                          _PIE1bits 000F9D  
                               _eusartRxLastError 00B1                                          i2u600_40 0070  
                                        i2u600_41 006C                                          i2u601_40 007E  
                                        i2u601_41 007A                                          _PIR1bits 000F9E  
                 ??_EUSART_SetFramingErrorHandler 0007                                          i2u602_48 0084  
                                        i2u602_49 0098                                          _PIR2bits 000FA1  
                                        i2u509_40 44E0                                          i2u509_41 44DC  
                                        i2u561_40 3C74                                          i2u560_48 3C44  
                                        i2u561_41 3C70                                          i2u560_49 3C58  
                                        i2u562_48 3C7A                                          i2u555_40 42B2  
                                        i2u562_49 3C8E                                          i2u555_41 42AE  
                                        i2u556_40 42D4                                          i2u556_41 42D0  
                                        i2u557_40 3BF6                                          i2u557_41 3BF2  
                                        i2u559_40 3C2E                                          i2u558_48 3C0C  
                                        i2u559_41 3C2A                                          i2u558_49 3C20  
                                 _resetOneWirePin 42E2                                          i2u596_40 0028  
                                        i2u596_41 0024                                          i2u597_40 0036  
                                        i2u597_41 0032                                          i2u598_40 0044  
                                        i2u598_41 0040                                          i2u599_48 004A  
                                        i2u599_49 005E                                          _RCONbits 000FD0  
            fp__EUSART_DefaultOverrunErrorHandler 0000         __end_of_EUSART_DefaultOverrunErrorHandler 45D0  
             ??_EUSART_DefaultOverrunErrorHandler 0001                ?_EUSART_DefaultOverrunErrorHandler 0001  
               _EUSART_DefaultOverrunErrorHandler 45CA                                  _sampleOneWirePin 4560  
                                       _vfpfcnvrt 1CA8                                 ___wmul@multiplier 0005  
                            _addressOneWireDevice 4096                                      _isspace$2420 000B  
                                      vfpfcnvrt@c 00ED                                        vfpfcnvrt@f 00E6  
                                     _INTCON2bits 000FF1                             ?_INTERRUPT_Initialize 0001  
                            writeOneWireByte@data 0006                                        _I2C_Status 0060  
                           fp__EUSART_Receive_ISR 0000                                  ??_I2C_Initialize 0005  
                          sampleOneWirePin@result 0005                                          __Hrparam 0000  
                                      vfprintf@ap 00F2                                          __Lrparam 0000  
                                      vfprintf@fp 00EE                           ??_OSCILLATOR_Initialize 0005  
                             _EUSART_ErrorHandler 0160      searchOneWireDevicesROM@CurrentConflictBitPos 001A  
                            _I2C_DO_SEND_ADR_READ 000000                       ?_EUSART_DefaultErrorHandler 0001  
                                      ?_vfpfcnvrt 004C                                ___fpclassifyf@F465 00A0  
                               ??_readOneWireByte 0007                             ?_addressOneWireDevice 0009  
                            __end_of_DS18B20_init 45BE                                          ___xxtofl 3284  
                         ??_DS18B20_temp_GetValue 0030                              _EUSART_RxDataHandler 44BE  
                                        __ptext10 4402                                          __ptext11 425C  
                                        __ptext20 435A                                          __ptext12 3DF2  
                                        __ptext21 2696                                          __ptext13 456E  
                                        __ptext30 4438                                          __ptext22 369E  
                                        __ptext14 403E                                          __ptext31 4578  
                                        __ptext23 3D48                                          __ptext15 3072  
                                        __ptext40 397C                                          __ptext32 45D6  
                                        __ptext24 3C98                                          __ptext16 37A2  
                                        __ptext41 413E                                          __ptext33 454C  
                                        __ptext25 3438                                          __ptext17 3598  
                                        __ptext50 44E8                                          __ptext42 4096  
                                        __ptext34 3F06                                          __ptext26 40EC  
                                        __ptext18 4216                                          __ptext51 4560  
                                        __ptext43 3284                                          __ptext35 4582  
                                        __ptext27 4392                                          __ptext19 21D6  
                                        __ptext60 45D0                                          __ptext52 45BE  
                                        __ptext44 2AC0                                          __ptext36 458C  
                                        __ptext28 4510                                          __ptext61 44BE  
                                        __ptext53 45C4                                          __ptext45 45B4  
                                        __ptext37 4596                                          __ptext29 4536  
                                        __ptext62 0000                                          __ptext54 3B14  
                                        __ptext46 2E5A                                          __ptext38 45A0  
                                        __ptext47 43CA                                          __ptext39 45AA  
                                        __ptext56 42A0                                          __ptext48 4188  
                                        __ptext57 3BD8                                          __ptext49 42E2  
                                        __ptext58 45CA                                          __ptext59 45DA  
                                      strcpy@dest 0005                                  _writeOneWireByte 43CA  
                         __end_of_resetOneWirePin 4322                              readOneWireBit@result 0006  
                         ?_EUSART_SetErrorHandler 0005                           writeOneWireBit@WriteArg 0005  
                                        efgtoa@fp 0040                                          efgtoa@ne 00BC  
                                        efgtoa@pp 00BA                                          efgtoa@ou 00C0  
   EUSART_SetOverrunErrorHandler@interruptHandler 0005                                          isa$xinst 000000  
                                        int$flags 005B                                          _vfprintf 3F7C  
              __end_of_INTERRUPT_InterruptManager 00B0                        _INTERRUPT_InterruptManager 0008  
                                       printf@fmt 00F6             __end_of_EUSART_SetFramingErrorHandler 45AA  
                   _EUSART_SetFramingErrorHandler 45A0                          searchOneWireDevicesROM@i 001D  
                        searchOneWireDevicesROM@j 0022                          searchOneWireDevicesROM@k 001F  
                          _SearchROMDevicesSucess 00B0                                        _INTCONbits 000FF2  
                           ?_EUSART_RxDataHandler 0001                                          isdigit@c 0005  
                          ??_INTERRUPT_Initialize 0005                                  ??_readOneWireBit 0006  
                                        intlevel2 0000                            fp__EUSART_Transmit_ISR 0000  
                                        isspace@c 0005                           ?_PIN_MANAGER_Initialize 0001  
                  __end_of_EUSART_SetErrorHandler 45B4                               _I2C_DO_SEND_RESTART 000000  
                                       strcpy@src 0007                                          isupper@c 0005  
                        __end_of_driveOneWireHigh 45CA                                         strncmp@_l 0005  
                                       strncmp@_r 0007              __end_of_EUSART_SetRxInterruptHandler 4596  
                    _EUSART_SetRxInterruptHandler 458C                                       efgtoa@nmode 00CC  
                                        printf@ap 0168                           _searchOneWireDevicesROM 2E5A  
                              _EUSART_Receive_ISR 3BD8     EUSART_SetFramingErrorHandler@interruptHandler 0005  
                                     ??_vfpfcnvrt 0052                            ??_addressOneWireDevice 000B  
                                        tolower@c 000B                               ?_EUSART_Receive_ISR 0001  
                   fp__EUSART_DefaultErrorHandler 0000                                          strncmp@l 000C  
                                        strncmp@n 0009                                          strncmp@r 000E  
                                     _SSPCON1bits 000FC6                                       _SSPCON2bits 000FC5  
                                   ___fladd@signs 0011                                EUSART_Write@txData 0005  
                  __end_of_PIN_MANAGER_Initialize 4468                          __end_of_sampleOneWirePin 456E  
                     DS18B20_temp_GetValue@temph1 0039                       DS18B20_temp_GetValue@templ1 0038  
                                    ___fladd@aexp 0012                                      ___fladd@bexp 0013  
                                ?_resetOneWirePin 0001                              ??_EUSART_Receive_ISR 0001  
           searchOneWireDevicesROM@InputBitStatus 0021  
